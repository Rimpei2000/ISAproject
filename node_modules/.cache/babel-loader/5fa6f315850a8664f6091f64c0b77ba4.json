{"ast":null,"code":"const _excluded = [\"as\", \"active\", \"eventKey\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Button from './Button';\nimport { dataAttr } from './DataKey';\nimport TabContext from './TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useNavItem(_ref2) {\n  let {\n    key,\n    onClick,\n    active,\n    id,\n    role,\n    disabled\n  } = _ref2;\n  const parentOnSelect = useContext(SelectableContext);\n  const navContext = useContext(NavContext);\n  const tabContext = useContext(TabContext);\n  let isActive = active;\n  const props = {\n    role\n  };\n\n  if (navContext) {\n    if (!role && navContext.role === 'tablist') props.role = 'tab';\n    const contextControllerId = navContext.getControllerId(key != null ? key : null);\n    const contextControlledId = navContext.getControlledId(key != null ? key : null); // @ts-ignore\n\n    props[dataAttr('event-key')] = key;\n    props.id = contextControllerId || id;\n    isActive = active == null && key != null ? navContext.activeKey === key : active;\n    /**\r\n     * Simplified scenario for `mountOnEnter`.\r\n     *\r\n     * While it would make sense to keep 'aria-controls' for tabs that have been mounted at least\r\n     * once, it would also complicate the code quite a bit, for very little gain.\r\n     * The following implementation is probably good enough.\r\n     *\r\n     * @see https://github.com/react-restart/ui/pull/40#issuecomment-1009971561\r\n     */\n\n    if (isActive || !(tabContext != null && tabContext.unmountOnExit) && !(tabContext != null && tabContext.mountOnEnter)) props['aria-controls'] = contextControlledId;\n  }\n\n  if (props.role === 'tab') {\n    if (disabled) {\n      props.tabIndex = -1;\n      props['aria-disabled'] = true;\n    }\n\n    if (isActive) {\n      props['aria-selected'] = isActive;\n    } else {\n      props.tabIndex = -1;\n    }\n  }\n\n  props.onClick = useEventCallback(e => {\n    if (disabled) return;\n    onClick == null ? void 0 : onClick(e);\n\n    if (key == null) {\n      return;\n    }\n\n    if (parentOnSelect && !e.isPropagationStopped()) {\n      parentOnSelect(key, e);\n    }\n  });\n  return [props, {\n    isActive\n  }];\n}\nconst NavItem = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    as: Component = Button,\n    active,\n    eventKey\n  } = _ref,\n      options = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [props, meta] = useNavItem(Object.assign({\n    key: makeEventKey(eventKey, options.href),\n    active\n  }, options)); // @ts-ignore\n\n  props[dataAttr('active')] = meta.isActive;\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, options, props, {\n    ref: ref\n  }));\n});\nNavItem.displayName = 'NavItem';\nexport default NavItem;","map":{"version":3,"sources":["C:/Users/bhupe/Downloads/Term 4/COMP4537/FinalMilestone/ISAproject/node_modules/@restart/ui/esm/NavItem.js"],"names":["_excluded","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","length","indexOf","React","useContext","useEventCallback","NavContext","SelectableContext","makeEventKey","Button","dataAttr","TabContext","jsx","_jsx","useNavItem","onClick","active","id","role","disabled","parentOnSelect","navContext","tabContext","isActive","props","contextControllerId","getControllerId","contextControlledId","getControlledId","activeKey","unmountOnExit","mountOnEnter","tabIndex","e","isPropagationStopped","NavItem","forwardRef","_ref","ref","as","Component","eventKey","options","meta","assign","href","displayName"],"mappings":"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","sourcesContent":["const _excluded = [\"as\", \"active\", \"eventKey\"];\r\n\r\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\r\n\r\nimport * as React from 'react';\r\nimport { useContext } from 'react';\r\nimport useEventCallback from '@restart/hooks/useEventCallback';\r\nimport NavContext from './NavContext';\r\nimport SelectableContext, { makeEventKey } from './SelectableContext';\r\nimport Button from './Button';\r\nimport { dataAttr } from './DataKey';\r\nimport TabContext from './TabContext';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport function useNavItem({\r\n  key,\r\n  onClick,\r\n  active,\r\n  id,\r\n  role,\r\n  disabled\r\n}) {\r\n  const parentOnSelect = useContext(SelectableContext);\r\n  const navContext = useContext(NavContext);\r\n  const tabContext = useContext(TabContext);\r\n  let isActive = active;\r\n  const props = {\r\n    role\r\n  };\r\n\r\n  if (navContext) {\r\n    if (!role && navContext.role === 'tablist') props.role = 'tab';\r\n    const contextControllerId = navContext.getControllerId(key != null ? key : null);\r\n    const contextControlledId = navContext.getControlledId(key != null ? key : null); // @ts-ignore\r\n\r\n    props[dataAttr('event-key')] = key;\r\n    props.id = contextControllerId || id;\r\n    isActive = active == null && key != null ? navContext.activeKey === key : active;\r\n    /**\r\n     * Simplified scenario for `mountOnEnter`.\r\n     *\r\n     * While it would make sense to keep 'aria-controls' for tabs that have been mounted at least\r\n     * once, it would also complicate the code quite a bit, for very little gain.\r\n     * The following implementation is probably good enough.\r\n     *\r\n     * @see https://github.com/react-restart/ui/pull/40#issuecomment-1009971561\r\n     */\r\n\r\n    if (isActive || !(tabContext != null && tabContext.unmountOnExit) && !(tabContext != null && tabContext.mountOnEnter)) props['aria-controls'] = contextControlledId;\r\n  }\r\n\r\n  if (props.role === 'tab') {\r\n    if (disabled) {\r\n      props.tabIndex = -1;\r\n      props['aria-disabled'] = true;\r\n    }\r\n\r\n    if (isActive) {\r\n      props['aria-selected'] = isActive;\r\n    } else {\r\n      props.tabIndex = -1;\r\n    }\r\n  }\r\n\r\n  props.onClick = useEventCallback(e => {\r\n    if (disabled) return;\r\n    onClick == null ? void 0 : onClick(e);\r\n\r\n    if (key == null) {\r\n      return;\r\n    }\r\n\r\n    if (parentOnSelect && !e.isPropagationStopped()) {\r\n      parentOnSelect(key, e);\r\n    }\r\n  });\r\n  return [props, {\r\n    isActive\r\n  }];\r\n}\r\nconst NavItem = /*#__PURE__*/React.forwardRef((_ref, ref) => {\r\n  let {\r\n    as: Component = Button,\r\n    active,\r\n    eventKey\r\n  } = _ref,\r\n      options = _objectWithoutPropertiesLoose(_ref, _excluded);\r\n\r\n  const [props, meta] = useNavItem(Object.assign({\r\n    key: makeEventKey(eventKey, options.href),\r\n    active\r\n  }, options)); // @ts-ignore\r\n\r\n  props[dataAttr('active')] = meta.isActive;\r\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, options, props, {\r\n    ref: ref\r\n  }));\r\n});\r\nNavItem.displayName = 'NavItem';\r\nexport default NavItem;"]},"metadata":{},"sourceType":"module"}