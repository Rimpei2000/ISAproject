{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhupe\\\\Downloads\\\\Term 4\\\\COMP4537\\\\FinalMilestone\\\\ISAproject\\\\src\\\\Components\\\\weather\\\\Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"../../styles/weatherStyles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Weather() {\n  _s();\n\n  const api = {\n    key: \"bfee40a57b03b378c6f6fc873967f983\",\n    url: \"https://api.openweathermap.org/data/2.5/\"\n  };\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({});\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.url}weather?q=${query}&appid=${api.key}&units=metric`).then(res => res.json()).then(result => {\n        setWeather(result);\n        setQuery(\"\");\n        console.log(result);\n      });\n    }\n  };\n\n  const getTodaysDate = d => {\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    const days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n    var day = days[d.getDay()]; // Fetches the day of the week\n\n    var date = d.getDate(); // Fetches the date i.e. 1st - 31st day of the month\n\n    var month = months[d.getMonth()]; // Fetches the month\n\n    var year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"search-bar\",\n        placeholder: \"Enter your city\",\n        onChange: e => setQuery(e.target.value),\n        value: query,\n        onKeyPress: search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), typeof weather.main != \"undefined\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"temp\",\n              children: [Math.round(weather.main.temp), \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"condition\",\n              children: weather.weather[0].main\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"city\",\n              children: [weather.name, \", \", weather.sys.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date\",\n              children: getTodaysDate(new Date())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n            style: {\n              color: yellow\n            },\n            children: \"Activites Here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"OOPS!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), \" \", \"Looks like the place you searched for isn't on planet Earth.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Weather, \"GVng0aXCH4yLtaeOWbs04pRRVUQ=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["C:/Users/bhupe/Downloads/Term 4/COMP4537/FinalMilestone/ISAproject/src/Components/weather/Weather.js"],"names":["React","useState","Weather","api","key","url","query","setQuery","weather","setWeather","search","evt","fetch","then","res","json","result","console","log","getTodaysDate","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","e","target","value","main","Math","round","temp","name","sys","country","Date","color","yellow"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../../styles/weatherStyles.css\";\r\n\r\nfunction Weather() {\r\n  const api = {\r\n    key: \"bfee40a57b03b378c6f6fc873967f983\",\r\n    url: \"https://api.openweathermap.org/data/2.5/\",\r\n  };\r\n  const [query, setQuery] = useState(\"\");\r\n  const [weather, setWeather] = useState({});\r\n  const search = (evt) => {\r\n    if (evt.key === \"Enter\") {\r\n      fetch(`${api.url}weather?q=${query}&appid=${api.key}&units=metric`)\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          setWeather(result);\r\n          setQuery(\"\");\r\n          console.log(result);\r\n        });\r\n    }\r\n  };\r\n\r\n  const getTodaysDate = (d) => {\r\n    const months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    const days = [\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n      \"Sunday\",\r\n    ];\r\n\r\n    var day = days[d.getDay()]; // Fetches the day of the week\r\n    var date = d.getDate(); // Fetches the date i.e. 1st - 31st day of the month\r\n    var month = months[d.getMonth()]; // Fetches the month\r\n    var year = d.getFullYear();\r\n\r\n    return `${day} ${date} ${month} ${year}`;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <main>\r\n        <input\r\n          type=\"text\"\r\n          className=\"search-bar\"\r\n          placeholder=\"Enter your city\"\r\n          onChange={(e) => setQuery(e.target.value)}\r\n          value={query}\r\n          onKeyPress={search}\r\n        ></input>\r\n        {typeof weather.main != \"undefined\" ? (\r\n          <div>\r\n            <div className=\"weather-container\">\r\n              <div className=\"weather\">\r\n                <div className=\"temp\">{Math.round(weather.main.temp)}°C</div>\r\n                <div className=\"condition\">{weather.weather[0].main}</div>\r\n                <div className=\"city\">\r\n                  {weather.name}, {weather.sys.country}\r\n                </div>\r\n                <br></br>\r\n                <div className=\"date\">{getTodaysDate(new Date())}</div>\r\n                <br></br>\r\n              </div>\r\n              <aside style={{ color: yellow }}>Activites Here</aside>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <h1>\r\n              <span>\r\n                <b>OOPS!</b>\r\n              </span>{\" \"}\r\n              Looks like the place you searched for isn't on planet Earth.\r\n            </h1>\r\n          </div>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weather;\r\n"]},"metadata":{},"sourceType":"module"}