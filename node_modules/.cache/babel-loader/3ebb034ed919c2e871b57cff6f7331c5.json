{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\bhupe\\\\Downloads\\\\Term 4\\\\COMP4537\\\\MilestoneFinal\\\\ISAproject\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import react,{useState,useEffect}from\"react\";import Map,{Popup,Marker}from\"react-map-gl\";import{Button,Alert}from\"react-bootstrap\";import Axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Parks(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),geopins=_useState2[0],setGeopins=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),selectedPark=_useState4[0],setSelectedPark=_useState4[1];var parkMarkers=[];var fetchParks=function fetchParks(){fetch(\"https://opendata.vancouver.ca/api/records/1.0/search/?dataset=parks&q=&facet=specialfeatures&facet=facilities&facet=washrooms&facet=neighbourhoodname\").then(function(res){return res.json();}).then(function(result){// setParks(result);\nfor(var key in result.records){for(var internalKey in result.records[key]){var objData=result.records[key][internalKey];if(objData.googlemapdest!=undefined){parkMarkers.push({longitude:objData.googlemapdest[1],latitude:objData.googlemapdest[0],name:objData.name,id:objData.parkid});break;}}}setGeopins(parkMarkers);});};var addMarkers=function addMarkers(){return geopins.map(function(ithMarker){return/*#__PURE__*/_jsx(Marker,{id:ithMarker.name,latitude:ithMarker.latitude,longitude:ithMarker.longitude,children:/*#__PURE__*/_jsx(Button,{style:{background:\"none\",border:\"none\",cursor:\"pointer\"},onClick:function onClick(){setSelectedPark(ithMarker);},children:/*#__PURE__*/_jsx(\"img\",{style:{height:\"25px\"},src:\"./parks.svg\",alt:ithMarker.name})})},ithMarker.id);});};var addPopup=function addPopup(){return geopins.map(function(ithMarker){return selectedPark&&selectedPark.id==ithMarker.id?/*#__PURE__*/_jsx(Popup,{id:ithMarker.id,latitude:ithMarker.latitude,longitude:ithMarker.longitude,offsetTop:-30,children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:ithMarker.name}),/*#__PURE__*/_jsx(Button,{variant:\"outline-secondary\",onClick:function onClick(){Axios.post(\"http://localhost:3022/API/v1/AddFav\",{username:window.localStorage.getItem(\"username\"),favName:ithMarker.name,favCat:\"Parks\",lat:ithMarker.latitude,lng:ithMarker.longitude});window.alert(\"Added\");},children:\"Add to favourites\"})]})}):null;});};var incrementRequest=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:Axios.get(\"http://termproject.rshiratori.com:8000/API/v1/Parks\");case 1:case\"end\":return _context.stop();}}},_callee);}));return function incrementRequest(){return _ref.apply(this,arguments);};}();useEffect(function(){fetchParks();incrementRequest();},[]);return/*#__PURE__*/_jsxs(Map,{initialViewState:{longitude:-123.19258095208848,latitude:49.25901995475811,zoom:11},style:{width:\"100vw\",height:\"100vh\",fog:{range:[-0.5,3],color:\"white\",\"horizon-blend\":0.1}},mapStyle:\"mapbox://styles/mapbox/streets-v9\",mapboxAccessToken:\"pk.eyJ1IjoiYmh1cGVzaGQiLCJhIjoiY2wxNXN1ZWVwMGoxNTNjcDhkZHh5Z2NsaCJ9.G67FI-pS8DZRWCX5Nt1vrA\",children:[addMarkers(),addPopup()]});}","map":{"version":3,"sources":["C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/src/Components/activities/parks.js"],"names":["react","useState","useEffect","Map","Popup","Marker","Button","Alert","Axios","Parks","geopins","setGeopins","selectedPark","setSelectedPark","parkMarkers","fetchParks","fetch","then","res","json","result","key","records","internalKey","objData","googlemapdest","undefined","push","longitude","latitude","name","id","parkid","addMarkers","map","ithMarker","background","border","cursor","height","addPopup","post","username","window","localStorage","getItem","favName","favCat","lat","lng","alert","incrementRequest","get","zoom","width","fog","range","color"],"mappings":"udAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,GAAP,EAAcC,KAAd,CAAqBC,MAArB,KAAmC,cAAnC,CACA,OAASC,MAAT,CAAiBC,KAAjB,KAA8B,iBAA9B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,wFACA,cAAe,SAASC,CAAAA,KAAT,EAAiB,CAC9B,cAA8BR,QAAQ,CAAC,EAAD,CAAtC,wCAAOS,OAAP,eAAgBC,UAAhB,eACA,eAAwCV,QAAQ,CAAC,IAAD,CAAhD,yCAAOW,YAAP,eAAqBC,eAArB,eACA,GAAMC,CAAAA,WAAW,CAAG,EAApB,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvBC,KAAK,CACH,uJADG,CAAL,CAGGC,IAHH,CAGQ,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EAHR,EAIGF,IAJH,CAIQ,SAACG,MAAD,CAAY,CAChB;AACA,IAAK,GAAIC,CAAAA,GAAT,GAAgBD,CAAAA,MAAM,CAACE,OAAvB,CAAgC,CAC9B,IAAK,GAAIC,CAAAA,WAAT,GAAwBH,CAAAA,MAAM,CAACE,OAAP,CAAeD,GAAf,CAAxB,CAA6C,CAC3C,GAAIG,CAAAA,OAAO,CAAGJ,MAAM,CAACE,OAAP,CAAeD,GAAf,EAAoBE,WAApB,CAAd,CACA,GAAIC,OAAO,CAACC,aAAR,EAAyBC,SAA7B,CAAwC,CACtCZ,WAAW,CAACa,IAAZ,CAAiB,CACfC,SAAS,CAAEJ,OAAO,CAACC,aAAR,CAAsB,CAAtB,CADI,CAEfI,QAAQ,CAAEL,OAAO,CAACC,aAAR,CAAsB,CAAtB,CAFK,CAGfK,IAAI,CAAEN,OAAO,CAACM,IAHC,CAIfC,EAAE,CAAEP,OAAO,CAACQ,MAJG,CAAjB,EAMA,MACD,CACF,CACF,CACDrB,UAAU,CAACG,WAAD,CAAV,CACD,CArBH,EAsBD,CAvBD,CAyBA,GAAMmB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,MAAOvB,CAAAA,OAAO,CAACwB,GAAR,CAAY,SAACC,SAAD,CAAe,CAChC,mBACE,KAAC,MAAD,EAEE,EAAE,CAAEA,SAAS,CAACL,IAFhB,CAGE,QAAQ,CAAEK,SAAS,CAACN,QAHtB,CAIE,SAAS,CAAEM,SAAS,CAACP,SAJvB,uBAME,KAAC,MAAD,EACE,KAAK,CAAE,CAAEQ,UAAU,CAAE,MAAd,CAAsBC,MAAM,CAAE,MAA9B,CAAsCC,MAAM,CAAE,SAA9C,CADT,CAEE,OAAO,CAAE,kBAAM,CACbzB,eAAe,CAACsB,SAAD,CAAf,CACD,CAJH,uBAME,YACE,KAAK,CAAE,CAAEI,MAAM,CAAE,MAAV,CADT,CAEE,GAAG,CAAC,aAFN,CAGE,GAAG,CAAEJ,SAAS,CAACL,IAHjB,EANF,EANF,EACOK,SAAS,CAACJ,EADjB,CADF,CAqBD,CAtBM,CAAP,CAuBD,CAxBD,CA0BA,GAAMS,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB,MAAO9B,CAAAA,OAAO,CAACwB,GAAR,CAAY,SAACC,SAAD,CAAe,CAChC,MAAOvB,CAAAA,YAAY,EAAIA,YAAY,CAACmB,EAAb,EAAmBI,SAAS,CAACJ,EAA7C,cACL,KAAC,KAAD,EACE,EAAE,CAAEI,SAAS,CAACJ,EADhB,CAEE,QAAQ,CAAEI,SAAS,CAACN,QAFtB,CAGE,SAAS,CAAEM,SAAS,CAACP,SAHvB,CAIE,SAAS,CAAE,CAAC,EAJd,uBAME,oCACE,mBAAIO,SAAS,CAACL,IAAd,EADF,cAEE,KAAC,MAAD,EACE,OAAO,CAAC,mBADV,CAEE,OAAO,CAAE,kBAAM,CACbtB,KAAK,CAACiC,IAAN,CAAW,qCAAX,CAAkD,CAChDC,QAAQ,CAAEC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,CADsC,CAEhDC,OAAO,CAAEX,SAAS,CAACL,IAF6B,CAGhDiB,MAAM,CAAE,OAHwC,CAIhDC,GAAG,CAAEb,SAAS,CAACN,QAJiC,CAKhDoB,GAAG,CAAEd,SAAS,CAACP,SALiC,CAAlD,EAOAe,MAAM,CAACO,KAAP,CAAa,OAAb,EACD,CAXH,+BAFF,GANF,EADK,CA0BH,IA1BJ,CA2BD,CA5BM,CAAP,CA6BD,CA9BD,CAgCA,GAAMC,CAAAA,gBAAgB,0FAAG,mIACvB3C,KAAK,CAAC4C,GAAN,CAAU,qDAAV,EADuB,sDAAH,kBAAhBD,CAAAA,gBAAgB,0CAAtB,CAIAjD,SAAS,CAAC,UAAM,CACda,UAAU,GACVoC,gBAAgB,GACjB,CAHQ,CAGN,EAHM,CAAT,CAKA,mBACE,MAAC,GAAD,EACE,gBAAgB,CAAE,CAChBvB,SAAS,CAAE,CAAC,kBADI,CAEhBC,QAAQ,CAAE,iBAFM,CAGhBwB,IAAI,CAAE,EAHU,CADpB,CAME,KAAK,CAAE,CACLC,KAAK,CAAE,OADF,CAELf,MAAM,CAAE,OAFH,CAGLgB,GAAG,CAAE,CACHC,KAAK,CAAE,CAAC,CAAC,GAAF,CAAO,CAAP,CADJ,CAEHC,KAAK,CAAE,OAFJ,CAGH,gBAAiB,GAHd,CAHA,CANT,CAeE,QAAQ,CAAC,mCAfX,CAgBE,iBAAiB,CAAC,4FAhBpB,WAkBGxB,UAAU,EAlBb,CAmBGO,QAAQ,EAnBX,GADF,CAuBD","sourcesContent":["import react, { useState, useEffect } from \"react\";\r\nimport Map, { Popup, Marker } from \"react-map-gl\";\r\nimport { Button, Alert } from \"react-bootstrap\";\r\nimport Axios from \"axios\";\r\nexport default function Parks() {\r\n  const [geopins, setGeopins] = useState([]);\r\n  const [selectedPark, setSelectedPark] = useState(null);\r\n  const parkMarkers = [];\r\n\r\n  const fetchParks = () => {\r\n    fetch(\r\n      \"https://opendata.vancouver.ca/api/records/1.0/search/?dataset=parks&q=&facet=specialfeatures&facet=facilities&facet=washrooms&facet=neighbourhoodname\"\r\n    )\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        // setParks(result);\r\n        for (let key in result.records) {\r\n          for (let internalKey in result.records[key]) {\r\n            let objData = result.records[key][internalKey];\r\n            if (objData.googlemapdest != undefined) {\r\n              parkMarkers.push({\r\n                longitude: objData.googlemapdest[1],\r\n                latitude: objData.googlemapdest[0],\r\n                name: objData.name,\r\n                id: objData.parkid,\r\n              });\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        setGeopins(parkMarkers);\r\n      });\r\n  };\r\n\r\n  const addMarkers = () => {\r\n    return geopins.map((ithMarker) => {\r\n      return (\r\n        <Marker\r\n          key={ithMarker.id}\r\n          id={ithMarker.name}\r\n          latitude={ithMarker.latitude}\r\n          longitude={ithMarker.longitude}\r\n        >\r\n          <Button\r\n            style={{ background: \"none\", border: \"none\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              setSelectedPark(ithMarker);\r\n            }}\r\n          >\r\n            <img\r\n              style={{ height: \"25px\" }}\r\n              src=\"./parks.svg\"\r\n              alt={ithMarker.name}\r\n            />\r\n          </Button>\r\n        </Marker>\r\n      );\r\n    });\r\n  };\r\n\r\n  const addPopup = () => {\r\n    return geopins.map((ithMarker) => {\r\n      return selectedPark && selectedPark.id == ithMarker.id ? (\r\n        <Popup\r\n          id={ithMarker.id}\r\n          latitude={ithMarker.latitude}\r\n          longitude={ithMarker.longitude}\r\n          offsetTop={-30}\r\n        >\r\n          <div>\r\n            <p>{ithMarker.name}</p>\r\n            <Button\r\n              variant=\"outline-secondary\"\r\n              onClick={() => {\r\n                Axios.post(\"http://localhost:3022/API/v1/AddFav\", {\r\n                  username: window.localStorage.getItem(\"username\"),\r\n                  favName: ithMarker.name,\r\n                  favCat: \"Parks\",\r\n                  lat: ithMarker.latitude,\r\n                  lng: ithMarker.longitude,\r\n                });\r\n                window.alert(\"Added\");\r\n              }}\r\n            >\r\n              Add to favourites\r\n            </Button>\r\n          </div>\r\n        </Popup>\r\n      ) : null;\r\n    });\r\n  };\r\n\r\n  const incrementRequest = async () => {\r\n    Axios.get(\"http://termproject.rshiratori.com:8000/API/v1/Parks\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchParks();\r\n    incrementRequest();\r\n  }, []);\r\n\r\n  return (\r\n    <Map\r\n      initialViewState={{\r\n        longitude: -123.19258095208848,\r\n        latitude: 49.25901995475811,\r\n        zoom: 11,\r\n      }}\r\n      style={{\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n        fog: {\r\n          range: [-0.5, 3],\r\n          color: \"white\",\r\n          \"horizon-blend\": 0.1,\r\n        },\r\n      }}\r\n      mapStyle=\"mapbox://styles/mapbox/streets-v9\"\r\n      mapboxAccessToken=\"pk.eyJ1IjoiYmh1cGVzaGQiLCJhIjoiY2wxNXN1ZWVwMGoxNTNjcDhkZHh5Z2NsaCJ9.G67FI-pS8DZRWCX5Nt1vrA\"\r\n    >\r\n      {addMarkers()}\r\n      {addPopup()}\r\n    </Map>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}