{"ast":null,"code":"import getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getNodeScroll from \"./getNodeScroll.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport isScrollParent from \"./isScrollParent.js\";\nimport { round } from \"../utils/math.js\";\n\nfunction isElementScaled(element) {\n  var rect = element.getBoundingClientRect();\n  var scaleX = round(rect.width) / element.offsetWidth || 1;\n  var scaleY = round(rect.height) / element.offsetHeight || 1;\n  return scaleX !== 1 || scaleY !== 1;\n} // Returns the composite rect of an element relative to its offsetParent.\n// Composite means it takes into account transforms as well as layout.\n\n\nexport default function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n\n  var isOffsetParentAnElement = isHTMLElement(offsetParent);\n  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);\n  var documentElement = getDocumentElement(offsetParent);\n  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled);\n  var scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  var offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078\n    isScrollParent(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      offsets = getBoundingClientRect(offsetParent, true);\n      offsets.x += offsetParent.clientLeft;\n      offsets.y += offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}","map":{"version":3,"sources":["C:/Users/bhupe/Downloads/Term 4/COMP4537/FinalMilestone/ISAproject/node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js"],"names":["getBoundingClientRect","getNodeScroll","getNodeName","isHTMLElement","getWindowScrollBarX","getDocumentElement","isScrollParent","round","isElementScaled","element","rect","scaleX","width","offsetWidth","scaleY","height","offsetHeight","getCompositeRect","elementOrVirtualElement","offsetParent","isFixed","isOffsetParentAnElement","offsetParentIsScaled","documentElement","scroll","scrollLeft","scrollTop","offsets","x","y","clientLeft","clientTop","left","top"],"mappings":"AAAA,OAAOA,qBAAP,MAAkC,4BAAlC;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAOC,mBAAP,MAAgC,0BAAhC;AACA,OAAOC,kBAAP,MAA+B,yBAA/B;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,SAASC,KAAT,QAAsB,kBAAtB;;AAEA,SAASC,eAAT,CAAyBC,OAAzB,EAAkC;AAChC,MAAIC,IAAI,GAAGD,OAAO,CAACT,qBAAR,EAAX;AACA,MAAIW,MAAM,GAAGJ,KAAK,CAACG,IAAI,CAACE,KAAN,CAAL,GAAoBH,OAAO,CAACI,WAA5B,IAA2C,CAAxD;AACA,MAAIC,MAAM,GAAGP,KAAK,CAACG,IAAI,CAACK,MAAN,CAAL,GAAqBN,OAAO,CAACO,YAA7B,IAA6C,CAA1D;AACA,SAAOL,MAAM,KAAK,CAAX,IAAgBG,MAAM,KAAK,CAAlC;AACD,C,CAAC;AACF;;;AAGA,eAAe,SAASG,gBAAT,CAA0BC,uBAA1B,EAAmDC,YAAnD,EAAiEC,OAAjE,EAA0E;AACvF,MAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AACtBA,IAAAA,OAAO,GAAG,KAAV;AACD;;AAED,MAAIC,uBAAuB,GAAGlB,aAAa,CAACgB,YAAD,CAA3C;AACA,MAAIG,oBAAoB,GAAGnB,aAAa,CAACgB,YAAD,CAAb,IAA+BX,eAAe,CAACW,YAAD,CAAzE;AACA,MAAII,eAAe,GAAGlB,kBAAkB,CAACc,YAAD,CAAxC;AACA,MAAIT,IAAI,GAAGV,qBAAqB,CAACkB,uBAAD,EAA0BI,oBAA1B,CAAhC;AACA,MAAIE,MAAM,GAAG;AACXC,IAAAA,UAAU,EAAE,CADD;AAEXC,IAAAA,SAAS,EAAE;AAFA,GAAb;AAIA,MAAIC,OAAO,GAAG;AACZC,IAAAA,CAAC,EAAE,CADS;AAEZC,IAAAA,CAAC,EAAE;AAFS,GAAd;;AAKA,MAAIR,uBAAuB,IAAI,CAACA,uBAAD,IAA4B,CAACD,OAA5D,EAAqE;AACnE,QAAIlB,WAAW,CAACiB,YAAD,CAAX,KAA8B,MAA9B,IAAwC;AAC5Cb,IAAAA,cAAc,CAACiB,eAAD,CADd,EACiC;AAC/BC,MAAAA,MAAM,GAAGvB,aAAa,CAACkB,YAAD,CAAtB;AACD;;AAED,QAAIhB,aAAa,CAACgB,YAAD,CAAjB,EAAiC;AAC/BQ,MAAAA,OAAO,GAAG3B,qBAAqB,CAACmB,YAAD,EAAe,IAAf,CAA/B;AACAQ,MAAAA,OAAO,CAACC,CAAR,IAAaT,YAAY,CAACW,UAA1B;AACAH,MAAAA,OAAO,CAACE,CAAR,IAAaV,YAAY,CAACY,SAA1B;AACD,KAJD,MAIO,IAAIR,eAAJ,EAAqB;AAC1BI,MAAAA,OAAO,CAACC,CAAR,GAAYxB,mBAAmB,CAACmB,eAAD,CAA/B;AACD;AACF;;AAED,SAAO;AACLK,IAAAA,CAAC,EAAElB,IAAI,CAACsB,IAAL,GAAYR,MAAM,CAACC,UAAnB,GAAgCE,OAAO,CAACC,CADtC;AAELC,IAAAA,CAAC,EAAEnB,IAAI,CAACuB,GAAL,GAAWT,MAAM,CAACE,SAAlB,GAA8BC,OAAO,CAACE,CAFpC;AAGLjB,IAAAA,KAAK,EAAEF,IAAI,CAACE,KAHP;AAILG,IAAAA,MAAM,EAAEL,IAAI,CAACK;AAJR,GAAP;AAMD","sourcesContent":["import getBoundingClientRect from \"./getBoundingClientRect.js\";\r\nimport getNodeScroll from \"./getNodeScroll.js\";\r\nimport getNodeName from \"./getNodeName.js\";\r\nimport { isHTMLElement } from \"./instanceOf.js\";\r\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\r\nimport getDocumentElement from \"./getDocumentElement.js\";\r\nimport isScrollParent from \"./isScrollParent.js\";\r\nimport { round } from \"../utils/math.js\";\r\n\r\nfunction isElementScaled(element) {\r\n  var rect = element.getBoundingClientRect();\r\n  var scaleX = round(rect.width) / element.offsetWidth || 1;\r\n  var scaleY = round(rect.height) / element.offsetHeight || 1;\r\n  return scaleX !== 1 || scaleY !== 1;\r\n} // Returns the composite rect of an element relative to its offsetParent.\r\n// Composite means it takes into account transforms as well as layout.\r\n\r\n\r\nexport default function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {\r\n  if (isFixed === void 0) {\r\n    isFixed = false;\r\n  }\r\n\r\n  var isOffsetParentAnElement = isHTMLElement(offsetParent);\r\n  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);\r\n  var documentElement = getDocumentElement(offsetParent);\r\n  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled);\r\n  var scroll = {\r\n    scrollLeft: 0,\r\n    scrollTop: 0\r\n  };\r\n  var offsets = {\r\n    x: 0,\r\n    y: 0\r\n  };\r\n\r\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\r\n    if (getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078\r\n    isScrollParent(documentElement)) {\r\n      scroll = getNodeScroll(offsetParent);\r\n    }\r\n\r\n    if (isHTMLElement(offsetParent)) {\r\n      offsets = getBoundingClientRect(offsetParent, true);\r\n      offsets.x += offsetParent.clientLeft;\r\n      offsets.y += offsetParent.clientTop;\r\n    } else if (documentElement) {\r\n      offsets.x = getWindowScrollBarX(documentElement);\r\n    }\r\n  }\r\n\r\n  return {\r\n    x: rect.left + scroll.scrollLeft - offsets.x,\r\n    y: rect.top + scroll.scrollTop - offsets.y,\r\n    width: rect.width,\r\n    height: rect.height\r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}