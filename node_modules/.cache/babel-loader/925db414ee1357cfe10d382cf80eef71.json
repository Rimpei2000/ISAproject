{"ast":null,"code":"import { useReducer } from 'react';\n/**\r\n * Returns a function that triggers a component update. the hook equivalent to\r\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\r\n * is preferable but may be required in some advanced usages of refs for interop or\r\n * when direct DOM manipulation is required.\r\n *\r\n * ```ts\r\n * const forceUpdate = useForceUpdate();\r\n *\r\n * const updateOnClick = useCallback(() => {\r\n *  forceUpdate()\r\n * }, [forceUpdate])\r\n *\r\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\r\n * ```\r\n */\n\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are stricting equal to the last state value\n  var _useReducer = useReducer(function (state) {\n    return !state;\n  }, false),\n      dispatch = _useReducer[1];\n\n  return dispatch;\n}","map":{"version":3,"sources":["C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@restart/hooks/esm/useForceUpdate.js"],"names":["useReducer","useForceUpdate","_useReducer","state","dispatch"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,cAAT,GAA0B;AACvC;AACA;AACA,MAAIC,WAAW,GAAGF,UAAU,CAAC,UAAUG,KAAV,EAAiB;AAC5C,WAAO,CAACA,KAAR;AACD,GAF2B,EAEzB,KAFyB,CAA5B;AAAA,MAGIC,QAAQ,GAAGF,WAAW,CAAC,CAAD,CAH1B;;AAKA,SAAOE,QAAP;AACD","sourcesContent":["import { useReducer } from 'react';\r\n/**\r\n * Returns a function that triggers a component update. the hook equivalent to\r\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\r\n * is preferable but may be required in some advanced usages of refs for interop or\r\n * when direct DOM manipulation is required.\r\n *\r\n * ```ts\r\n * const forceUpdate = useForceUpdate();\r\n *\r\n * const updateOnClick = useCallback(() => {\r\n *  forceUpdate()\r\n * }, [forceUpdate])\r\n *\r\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\r\n * ```\r\n */\r\n\r\nexport default function useForceUpdate() {\r\n  // The toggling state value is designed to defeat React optimizations for skipping\r\n  // updates when they are stricting equal to the last state value\r\n  var _useReducer = useReducer(function (state) {\r\n    return !state;\r\n  }, false),\r\n      dispatch = _useReducer[1];\r\n\r\n  return dispatch;\r\n}"]},"metadata":{},"sourceType":"module"}