{"ast":null,"code":"import { useEffect } from 'react';\nimport useCommittedRef from './useCommittedRef';\n\nfunction useRafInterval(fn, ms, paused) {\n  if (paused === void 0) {\n    paused = false;\n  }\n\n  var handle;\n  var start = new Date().getTime();\n  var fnRef = useCommittedRef(fn); // this ref is necessary b/c useEffect will sometimes miss a paused toggle\n  // orphaning a setTimeout chain in the aether, so relying on it's refresh logic is not reliable.\n\n  var pausedRef = useCommittedRef(paused);\n\n  function loop() {\n    var current = new Date().getTime();\n    var delta = current - start;\n    if (pausedRef.current) return;\n\n    if (delta >= ms && fnRef.current) {\n      fnRef.current();\n      start = new Date().getTime();\n    }\n\n    cancelAnimationFrame(handle);\n    handle = requestAnimationFrame(loop);\n  }\n\n  useEffect(function () {\n    handle = requestAnimationFrame(loop);\n    return function () {\n      return cancelAnimationFrame(handle);\n    };\n  }, []);\n}\n\nexport default useRafInterval;","map":{"version":3,"sources":["C:/Users/bhupe/Downloads/Term 4/COMP4537/FinalMilestone/ISAproject/node_modules/@restart/hooks/esm/useRafInterval.js"],"names":["useEffect","useCommittedRef","useRafInterval","fn","ms","paused","handle","start","Date","getTime","fnRef","pausedRef","loop","current","delta","cancelAnimationFrame","requestAnimationFrame"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,SAASC,cAAT,CAAwBC,EAAxB,EAA4BC,EAA5B,EAAgCC,MAAhC,EAAwC;AACtC,MAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;AACrBA,IAAAA,MAAM,GAAG,KAAT;AACD;;AAED,MAAIC,MAAJ;AACA,MAAIC,KAAK,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAZ;AACA,MAAIC,KAAK,GAAGT,eAAe,CAACE,EAAD,CAA3B,CAPsC,CAOL;AACjC;;AAEA,MAAIQ,SAAS,GAAGV,eAAe,CAACI,MAAD,CAA/B;;AAEA,WAASO,IAAT,GAAgB;AACd,QAAIC,OAAO,GAAG,IAAIL,IAAJ,GAAWC,OAAX,EAAd;AACA,QAAIK,KAAK,GAAGD,OAAO,GAAGN,KAAtB;AACA,QAAII,SAAS,CAACE,OAAd,EAAuB;;AAEvB,QAAIC,KAAK,IAAIV,EAAT,IAAeM,KAAK,CAACG,OAAzB,EAAkC;AAChCH,MAAAA,KAAK,CAACG,OAAN;AACAN,MAAAA,KAAK,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAR;AACD;;AAEDM,IAAAA,oBAAoB,CAACT,MAAD,CAApB;AACAA,IAAAA,MAAM,GAAGU,qBAAqB,CAACJ,IAAD,CAA9B;AACD;;AAEDZ,EAAAA,SAAS,CAAC,YAAY;AACpBM,IAAAA,MAAM,GAAGU,qBAAqB,CAACJ,IAAD,CAA9B;AACA,WAAO,YAAY;AACjB,aAAOG,oBAAoB,CAACT,MAAD,CAA3B;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;AAMD;;AAED,eAAeJ,cAAf","sourcesContent":["import { useEffect } from 'react';\r\nimport useCommittedRef from './useCommittedRef';\r\n\r\nfunction useRafInterval(fn, ms, paused) {\r\n  if (paused === void 0) {\r\n    paused = false;\r\n  }\r\n\r\n  var handle;\r\n  var start = new Date().getTime();\r\n  var fnRef = useCommittedRef(fn); // this ref is necessary b/c useEffect will sometimes miss a paused toggle\r\n  // orphaning a setTimeout chain in the aether, so relying on it's refresh logic is not reliable.\r\n\r\n  var pausedRef = useCommittedRef(paused);\r\n\r\n  function loop() {\r\n    var current = new Date().getTime();\r\n    var delta = current - start;\r\n    if (pausedRef.current) return;\r\n\r\n    if (delta >= ms && fnRef.current) {\r\n      fnRef.current();\r\n      start = new Date().getTime();\r\n    }\r\n\r\n    cancelAnimationFrame(handle);\r\n    handle = requestAnimationFrame(loop);\r\n  }\r\n\r\n  useEffect(function () {\r\n    handle = requestAnimationFrame(loop);\r\n    return function () {\r\n      return cancelAnimationFrame(handle);\r\n    };\r\n  }, []);\r\n}\r\n\r\nexport default useRafInterval;"]},"metadata":{},"sourceType":"module"}