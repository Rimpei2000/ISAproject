{"ast":null,"code":"import * as React from 'react';\nimport { useEffect } from 'react';\nimport { applyReactStyle } from '../utils/apply-react-style';\nimport useControl from './use-control';\n\nfunction NavigationControl(props) {\n  const ctrl = useControl(_ref => {\n    let {\n      mapLib\n    } = _ref;\n    return new mapLib.NavigationControl(props);\n  }, {\n    position: props.position\n  });\n  useEffect(() => {\n    // @ts-ignore\n    applyReactStyle(ctrl._container, props.style);\n  }, [props.style]);\n  return null;\n}\n\nexport default React.memo(NavigationControl);","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,SAAQC,eAAR,QAA8B,4BAA9B;AACA,OAAOC,UAAP,MAAuB,eAAvB;;AAuBA,SAASC,iBAAT,CAA2BC,KAA3B,EAAwD;AACtD,QAAMC,IAAI,GAAGH,UAAU,CACrB;AAAA,QAAC;AAACI;AAAD,KAAD;AAAA,WAAc,IAAIA,MAAM,CAACH,iBAAX,CAA6BC,KAA7B,CAAd;AAAA,GADqB,EAErB;AACEG,YAAQ,EAAEH,KAAK,CAACG;AADlB,GAFqB,CAAvB;AAOAP,WAAS,CAAC,MAAK;AACb;AACAC,mBAAe,CAACI,IAAI,CAACG,UAAN,EAAkBJ,KAAK,CAACK,KAAxB,CAAf;AACD,GAHQ,EAGN,CAACL,KAAK,CAACK,KAAP,CAHM,CAAT;AAKA,SAAO,IAAP;AACD;;AAED,eAAeV,KAAK,CAACW,IAAN,CAAWP,iBAAX,CAAf","names":["React","useEffect","applyReactStyle","useControl","NavigationControl","props","ctrl","mapLib","position","_container","style","memo"],"sources":["C:\\Users\\bhupe\\Downloads\\Term 4\\COMP4537\\MilestoneFinal\\ISAproject\\node_modules\\react-map-gl\\src\\components\\navigation-control.ts"],"sourcesContent":["import * as React from 'react';\nimport {useEffect} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\nimport useControl from './use-control';\n\nimport type {ControlPosition, MapboxNavigationControl} from '../types';\n\nexport type NavigationControlProps = {\n  /** If true the compass button is included.\n   * @default true\n   */\n  showCompass?: boolean;\n  /** If true the zoom-in and zoom-out buttons are included.\n   * @default true\n   */\n  showZoom?: boolean;\n  /** If true the pitch is visualized by rotating X-axis of compass.\n   * @default false\n   */\n  visualizePitch?: boolean;\n  /** Placement of the control relative to the map. */\n  position?: ControlPosition;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n};\n\nfunction NavigationControl(props: NavigationControlProps): null {\n  const ctrl = useControl<MapboxNavigationControl>(\n    ({mapLib}) => new mapLib.NavigationControl(props),\n    {\n      position: props.position\n    }\n  );\n\n  useEffect(() => {\n    // @ts-ignore\n    applyReactStyle(ctrl._container, props.style);\n  }, [props.style]);\n\n  return null;\n}\n\nexport default React.memo(NavigationControl);\n"]},"metadata":{},"sourceType":"module"}