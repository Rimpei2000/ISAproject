{"ast":null,"code":"import _objectWithoutProperties from \"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _excluded = [\"bsPrefix\", \"className\", \"children\", \"aria-labelledby\", \"placement\", \"show\", \"backdrop\", \"keyboard\", \"scroll\", \"onEscapeKeyDown\", \"onShow\", \"onHide\", \"container\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"onEntered\", \"onExit\", \"onExiting\", \"onEnter\", \"onEntering\", \"onExited\", \"backdropClassName\", \"manager\"];\nimport classNames from 'classnames';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport * as React from 'react';\nimport { useCallback, useContext, useMemo, useRef } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport Fade from './Fade';\nimport OffcanvasBody from './OffcanvasBody';\nimport OffcanvasToggling from './OffcanvasToggling';\nimport ModalContext from './ModalContext';\nimport NavbarContext from './NavbarContext';\nimport OffcanvasHeader from './OffcanvasHeader';\nimport OffcanvasTitle from './OffcanvasTitle';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BootstrapModalManager, { getSharedManager } from './BootstrapModalManager';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  scroll: false,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  placement: 'start'\n};\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(OffcanvasToggling, _objectSpread({}, props));\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, _objectSpread({}, props));\n}\n\nvar Offcanvas = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      ariaLabelledby = _ref['aria-labelledby'],\n      placement = _ref.placement,\n      show = _ref.show,\n      backdrop = _ref.backdrop,\n      keyboard = _ref.keyboard,\n      scroll = _ref.scroll,\n      onEscapeKeyDown = _ref.onEscapeKeyDown,\n      onShow = _ref.onShow,\n      onHide = _ref.onHide,\n      container = _ref.container,\n      autoFocus = _ref.autoFocus,\n      enforceFocus = _ref.enforceFocus,\n      restoreFocus = _ref.restoreFocus,\n      restoreFocusOptions = _ref.restoreFocusOptions,\n      onEntered = _ref.onEntered,\n      onExit = _ref.onExit,\n      onExiting = _ref.onExiting,\n      onEnter = _ref.onEnter,\n      onEntering = _ref.onEntering,\n      onExited = _ref.onExited,\n      backdropClassName = _ref.backdropClassName,\n      propsManager = _ref.manager,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var modalManager = useRef();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n\n  var _ref2 = useContext(NavbarContext) || {},\n      onToggle = _ref2.onToggle;\n\n  var handleHide = useEventCallback(function () {\n    onToggle == null ? void 0 : onToggle();\n    onHide == null ? void 0 : onHide();\n  });\n  var modalContext = useMemo(function () {\n    return {\n      onHide: handleHide\n    };\n  }, [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n\n    if (scroll) {\n      // Have to use a different modal manager since the shared\n      // one handles overflow.\n      if (!modalManager.current) modalManager.current = new BootstrapModalManager({\n        handleContainerOverflow: false\n      });\n      return modalManager.current;\n    }\n\n    return getSharedManager();\n  }\n\n  var handleEnter = function handleEnter(node) {\n    if (node) node.style.visibility = 'visible';\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    onEnter == null ? void 0 : onEnter.apply(void 0, [node].concat(args));\n  };\n\n  var handleExited = function handleExited(node) {\n    if (node) node.style.visibility = '';\n\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    onExited == null ? void 0 : onExited.apply(void 0, args);\n  };\n\n  var renderBackdrop = useCallback(function (backdropProps) {\n    return /*#__PURE__*/_jsx(\"div\", _objectSpread(_objectSpread({}, backdropProps), {}, {\n      className: classNames(\"\".concat(bsPrefix, \"-backdrop\"), backdropClassName)\n    }));\n  }, [backdropClassName, bsPrefix]);\n\n  var renderDialog = function renderDialog(dialogProps) {\n    return /*#__PURE__*/_jsx(\"div\", _objectSpread(_objectSpread(_objectSpread({\n      role: \"dialog\"\n    }, dialogProps), props), {}, {\n      className: classNames(className, bsPrefix, \"\".concat(bsPrefix, \"-\").concat(placement)),\n      \"aria-labelledby\": ariaLabelledby,\n      children: children\n    }));\n  };\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: ref,\n      backdrop: backdrop,\n      container: container,\n      keyboard: keyboard,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus && !scroll,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: onEscapeKeyDown,\n      onShow: onShow,\n      onHide: handleHide,\n      onEnter: handleEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: DialogTransition,\n      backdropTransition: BackdropTransition,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nOffcanvas.displayName = 'Offcanvas';\nOffcanvas.defaultProps = defaultProps;\nexport default Object.assign(Offcanvas, {\n  Body: OffcanvasBody,\n  Header: OffcanvasHeader,\n  Title: OffcanvasTitle\n});","map":{"version":3,"sources":["C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/react-bootstrap/esm/Offcanvas.js"],"names":["classNames","useEventCallback","React","useCallback","useContext","useMemo","useRef","BaseModal","Fade","OffcanvasBody","OffcanvasToggling","ModalContext","NavbarContext","OffcanvasHeader","OffcanvasTitle","useBootstrapPrefix","BootstrapModalManager","getSharedManager","jsx","_jsx","defaultProps","show","backdrop","keyboard","scroll","autoFocus","enforceFocus","restoreFocus","placement","DialogTransition","props","BackdropTransition","Offcanvas","forwardRef","ref","bsPrefix","className","children","ariaLabelledby","onEscapeKeyDown","onShow","onHide","container","restoreFocusOptions","onEntered","onExit","onExiting","onEnter","onEntering","onExited","backdropClassName","propsManager","manager","modalManager","onToggle","handleHide","modalContext","getModalManager","current","handleContainerOverflow","handleEnter","node","style","visibility","args","handleExited","renderBackdrop","backdropProps","renderDialog","dialogProps","role","Provider","value","transition","backdropTransition","displayName","Object","assign","Body","Header","Title"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\r\nimport useEventCallback from '@restart/hooks/useEventCallback';\r\nimport * as React from 'react';\r\nimport { useCallback, useContext, useMemo, useRef } from 'react';\r\nimport BaseModal from '@restart/ui/Modal';\r\nimport Fade from './Fade';\r\nimport OffcanvasBody from './OffcanvasBody';\r\nimport OffcanvasToggling from './OffcanvasToggling';\r\nimport ModalContext from './ModalContext';\r\nimport NavbarContext from './NavbarContext';\r\nimport OffcanvasHeader from './OffcanvasHeader';\r\nimport OffcanvasTitle from './OffcanvasTitle';\r\nimport { useBootstrapPrefix } from './ThemeProvider';\r\nimport BootstrapModalManager, { getSharedManager } from './BootstrapModalManager';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst defaultProps = {\r\n  show: false,\r\n  backdrop: true,\r\n  keyboard: true,\r\n  scroll: false,\r\n  autoFocus: true,\r\n  enforceFocus: true,\r\n  restoreFocus: true,\r\n  placement: 'start'\r\n};\r\n\r\nfunction DialogTransition(props) {\r\n  return /*#__PURE__*/_jsx(OffcanvasToggling, { ...props\r\n  });\r\n}\r\n\r\nfunction BackdropTransition(props) {\r\n  return /*#__PURE__*/_jsx(Fade, { ...props\r\n  });\r\n}\r\n\r\nconst Offcanvas = /*#__PURE__*/React.forwardRef(({\r\n  bsPrefix,\r\n  className,\r\n  children,\r\n  'aria-labelledby': ariaLabelledby,\r\n  placement,\r\n\r\n  /* BaseModal props */\r\n  show,\r\n  backdrop,\r\n  keyboard,\r\n  scroll,\r\n  onEscapeKeyDown,\r\n  onShow,\r\n  onHide,\r\n  container,\r\n  autoFocus,\r\n  enforceFocus,\r\n  restoreFocus,\r\n  restoreFocusOptions,\r\n  onEntered,\r\n  onExit,\r\n  onExiting,\r\n  onEnter,\r\n  onEntering,\r\n  onExited,\r\n  backdropClassName,\r\n  manager: propsManager,\r\n  ...props\r\n}, ref) => {\r\n  const modalManager = useRef();\r\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\r\n  const {\r\n    onToggle\r\n  } = useContext(NavbarContext) || {};\r\n  const handleHide = useEventCallback(() => {\r\n    onToggle == null ? void 0 : onToggle();\r\n    onHide == null ? void 0 : onHide();\r\n  });\r\n  const modalContext = useMemo(() => ({\r\n    onHide: handleHide\r\n  }), [handleHide]);\r\n\r\n  function getModalManager() {\r\n    if (propsManager) return propsManager;\r\n\r\n    if (scroll) {\r\n      // Have to use a different modal manager since the shared\r\n      // one handles overflow.\r\n      if (!modalManager.current) modalManager.current = new BootstrapModalManager({\r\n        handleContainerOverflow: false\r\n      });\r\n      return modalManager.current;\r\n    }\r\n\r\n    return getSharedManager();\r\n  }\r\n\r\n  const handleEnter = (node, ...args) => {\r\n    if (node) node.style.visibility = 'visible';\r\n    onEnter == null ? void 0 : onEnter(node, ...args);\r\n  };\r\n\r\n  const handleExited = (node, ...args) => {\r\n    if (node) node.style.visibility = '';\r\n    onExited == null ? void 0 : onExited(...args);\r\n  };\r\n\r\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\r\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName)\r\n  }), [backdropClassName, bsPrefix]);\r\n\r\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\r\n    role: \"dialog\",\r\n    ...dialogProps,\r\n    ...props,\r\n    className: classNames(className, bsPrefix, `${bsPrefix}-${placement}`),\r\n    \"aria-labelledby\": ariaLabelledby,\r\n    children: children\r\n  });\r\n\r\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\r\n    value: modalContext,\r\n    children: /*#__PURE__*/_jsx(BaseModal, {\r\n      show: show,\r\n      ref: ref,\r\n      backdrop: backdrop,\r\n      container: container,\r\n      keyboard: keyboard,\r\n      autoFocus: autoFocus,\r\n      enforceFocus: enforceFocus && !scroll,\r\n      restoreFocus: restoreFocus,\r\n      restoreFocusOptions: restoreFocusOptions,\r\n      onEscapeKeyDown: onEscapeKeyDown,\r\n      onShow: onShow,\r\n      onHide: handleHide,\r\n      onEnter: handleEnter,\r\n      onEntering: onEntering,\r\n      onEntered: onEntered,\r\n      onExit: onExit,\r\n      onExiting: onExiting,\r\n      onExited: handleExited,\r\n      manager: getModalManager(),\r\n      transition: DialogTransition,\r\n      backdropTransition: BackdropTransition,\r\n      renderBackdrop: renderBackdrop,\r\n      renderDialog: renderDialog\r\n    })\r\n  });\r\n});\r\nOffcanvas.displayName = 'Offcanvas';\r\nOffcanvas.defaultProps = defaultProps;\r\nexport default Object.assign(Offcanvas, {\r\n  Body: OffcanvasBody,\r\n  Header: OffcanvasHeader,\r\n  Title: OffcanvasTitle\r\n});"]},"metadata":{},"sourceType":"module"}