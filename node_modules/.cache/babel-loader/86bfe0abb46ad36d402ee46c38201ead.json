{"ast":null,"code":"import _defineProperty from \"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport { useState, useCallback, useMemo, useContext } from 'react';\nimport { MapContext } from './map';\nexport var MountedMapsContext = React.createContext(null);\nexport var MapProvider = function MapProvider(props) {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      maps = _useState2[0],\n      setMaps = _useState2[1];\n\n  var onMapMount = useCallback(function (map) {\n    var id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n    setMaps(function (currMaps) {\n      if (id === 'current') {\n        throw new Error(\"'current' cannot be used as map id\");\n      }\n\n      if (currMaps[id]) {\n        throw new Error(\"Multiple maps with the same id: \".concat(id));\n      }\n\n      return _objectSpread(_objectSpread({}, currMaps), {}, _defineProperty({}, id, map));\n    });\n  }, []);\n  var onMapUnmount = useCallback(function () {\n    var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';\n    setMaps(function (currMaps) {\n      if (currMaps[id]) {\n        var nextMaps = _objectSpread({}, currMaps);\n\n        delete nextMaps[id];\n        return nextMaps;\n      }\n\n      return currMaps;\n    });\n  }, []);\n  return React.createElement(MountedMapsContext.Provider, {\n    value: {\n      maps: maps,\n      onMapMount: onMapMount,\n      onMapUnmount: onMapUnmount\n    }\n  }, props.children);\n};\nexport function useMap() {\n  var _useContext;\n\n  var maps = (_useContext = useContext(MountedMapsContext)) === null || _useContext === void 0 ? void 0 : _useContext.maps;\n  var currentMap = useContext(MapContext);\n  var mapsWithCurrent = useMemo(function () {\n    return _objectSpread(_objectSpread({}, maps), {}, {\n      current: currentMap === null || currentMap === void 0 ? void 0 : currentMap.map\n    });\n  }, [maps, currentMap]);\n  return mapsWithCurrent;\n}","map":{"version":3,"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,QAAR,EAAkBC,WAAlB,EAA+BC,OAA/B,EAAwCC,UAAxC,QAAyD,OAAzD;AAGA,SAAQC,UAAR,QAAyB,OAAzB;AAQA,OAAO,IAAMC,kBAAkB,GAAGN,KAAK,CAACO,aAAN,CAA6C,IAA7C,CAA3B;AAEP,OAAO,IAAMC,WAAW,GAAiB,SAA5BA,WAA4B,MAAK,EAAG;AAC/C,kBAAwBP,QAAQ,CAAyB,EAAzB,CAAhC;AAAA;AAAA,MAAOQ,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,UAAU,GAAGT,WAAW,CAAC,UAACU,GAAD,EAAwC;AAAA,QAA1BC,EAA0B,uEAAb,SAAa;AACrEH,WAAO,CAAC,kBAAQ,EAAG;AACjB,UAAIG,EAAE,KAAK,SAAX,EAAsB;AACpB,cAAM,IAAIC,KAAJ,CAAU,oCAAV,CAAN;AACD;;AACD,UAAIC,QAAQ,CAACF,EAAD,CAAZ,EAAkB;AAChB,cAAM,IAAIC,KAAJ,2CAA6CD,EAA7C,EAAN;AACD;;AACD,6CAAWE,QAAX,2BAAsBF,EAAtB,EAA2BD,GAA3B;AACD,KARM,CAAP;AASD,GAV6B,EAU3B,EAV2B,CAA9B;AAYA,MAAMI,YAAY,GAAGd,WAAW,CAAC,YAA2B;AAAA,QAA1BW,EAA0B,uEAAb,SAAa;AAC1DH,WAAO,CAAC,kBAAQ,EAAG;AACjB,UAAIK,QAAQ,CAACF,EAAD,CAAZ,EAAkB;AAChB,YAAMI,QAAQ,qBAAOF,QAAP,CAAd;;AACA,eAAOE,QAAQ,CAACJ,EAAD,CAAf;AACA,eAAOI,QAAP;AACD;;AACD,aAAOF,QAAP;AACD,KAPM,CAAP;AAQD,GAT+B,EAS7B,EAT6B,CAAhC;AAWA,SACEf,oBAACM,kBAAkB,CAACY,QAApB,EAA4B;AAC1BC,SAAK,EAAE;AACLV,UAAI,EAAJA,IADK;AAELE,gBAAU,EAAVA,UAFK;AAGLK,kBAAY,EAAZA;AAHK;AADmB,GAA5B,EAOGI,KAAK,CAACC,QAPT,CADF;AAWD,CArCM;AAuCP,OAAM,SAAUC,MAAV,GAAgB;AAAA;;AACpB,MAAMb,IAAI,kBAAGL,UAAU,CAACE,kBAAD,CAAb,gDAAG,YAAgCG,IAA7C;AACA,MAAMc,UAAU,GAAGnB,UAAU,CAACC,UAAD,CAA7B;AAEA,MAAMmB,eAAe,GAAGrB,OAAO,CAAC,YAAK;AACnC,2CAAWM,IAAX;AAAiBgB,aAAO,EAAEF,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEX;AAAtC;AACD,GAF8B,EAE5B,CAACH,IAAD,EAAOc,UAAP,CAF4B,CAA/B;AAIA,SAAOC,eAAP;AACD","names":["React","useState","useCallback","useMemo","useContext","MapContext","MountedMapsContext","createContext","MapProvider","maps","setMaps","onMapMount","map","id","Error","currMaps","onMapUnmount","nextMaps","Provider","value","props","children","useMap","currentMap","mapsWithCurrent","current"],"sources":["C:\\Users\\bhupe\\Downloads\\Term 4\\COMP4537\\MilestoneFinal\\ISAproject\\node_modules\\react-map-gl\\src\\components\\use-map.tsx"],"sourcesContent":["import * as React from 'react';\nimport {useState, useCallback, useMemo, useContext} from 'react';\n\nimport {MapRef} from '../mapbox/create-ref';\nimport {MapContext} from './map';\n\ntype MountedMapsContextValue = {\n  maps: {[id: string]: MapRef};\n  onMapMount: (map: MapRef, id: string) => void;\n  onMapUnmount: (id: string) => void;\n};\n\nexport const MountedMapsContext = React.createContext<MountedMapsContextValue>(null);\n\nexport const MapProvider: React.FC<{}> = props => {\n  const [maps, setMaps] = useState<{[id: string]: MapRef}>({});\n\n  const onMapMount = useCallback((map: MapRef, id: string = 'default') => {\n    setMaps(currMaps => {\n      if (id === 'current') {\n        throw new Error(\"'current' cannot be used as map id\");\n      }\n      if (currMaps[id]) {\n        throw new Error(`Multiple maps with the same id: ${id}`);\n      }\n      return {...currMaps, [id]: map};\n    });\n  }, []);\n\n  const onMapUnmount = useCallback((id: string = 'default') => {\n    setMaps(currMaps => {\n      if (currMaps[id]) {\n        const nextMaps = {...currMaps};\n        delete nextMaps[id];\n        return nextMaps;\n      }\n      return currMaps;\n    });\n  }, []);\n\n  return (\n    <MountedMapsContext.Provider\n      value={{\n        maps,\n        onMapMount,\n        onMapUnmount\n      }}\n    >\n      {props.children}\n    </MountedMapsContext.Provider>\n  );\n};\n\nexport function useMap(): {current?: MapRef; [id: string]: MapRef | undefined} {\n  const maps = useContext(MountedMapsContext)?.maps;\n  const currentMap = useContext(MapContext);\n\n  const mapsWithCurrent = useMemo(() => {\n    return {...maps, current: currentMap?.map};\n  }, [maps, currentMap]);\n\n  return mapsWithCurrent;\n}\n"]},"metadata":{},"sourceType":"module"}