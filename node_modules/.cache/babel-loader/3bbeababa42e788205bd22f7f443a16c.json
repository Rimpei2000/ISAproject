{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhupe\\\\Downloads\\\\Term 4\\\\COMP4537\\\\MilestoneFinal\\\\ISAproject\\\\src\\\\Components\\\\weather\\\\Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"../../styles/weatherStyles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Weather() {\n  _s();\n\n  const api = {\n    key: \"bfee40a57b03b378c6f6fc873967f983\",\n    url: \"https://api.openweathermap.org/data/2.5/\"\n  };\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({}); // const [eventSuggestions, setEventSuggestions] = useState({});\n\n  let isUserSearchingFirstTime = true;\n  const [lat, setLat] = useState(\"\");\n  const [lon, setLon] = useState(\"\");\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.url}weather?q=${query}&appid=${api.key}&units=metric`).then(res => res.json()).then(result => {\n        setWeather(result);\n        setLat(result.coord.lat);\n        setLat(result.coord.lon);\n        setQuery(\"\");\n        console.log(result);\n        console.log(\"lat: \" + lat + \"lon: \" + lon);\n      });\n    }\n  };\n\n  const getTodaysDate = d => {\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    const days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n    var day = days[d.getDay()];\n    var date = d.getDate();\n    var month = months[d.getMonth()];\n    var year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  const switchToOldUser = () => {\n    isUserSearchingFirstTime = false;\n    return `Welcome`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"search-bar\",\n        placeholder: \"Enter your city\",\n        onChange: e => setQuery(e.target.value),\n        value: query,\n        onKeyPress: search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), typeof weather.main != \"undefined\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"temp\",\n              children: [Math.round(weather.main.temp), \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"condition\",\n              children: weather.weather[0].main\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"city\",\n              children: [weather.name, \", \", weather.sys.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date\",\n              children: getTodaysDate(new Date())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n            children: \"Activites Here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: weather.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Weather, \"ypcoIdsov0muvrqUhdafnLOY+K8=\");\n\n_c = Weather;\nexport default Weather; // isUserSearchingFirstTime ? (\n//   weather.name == null ? (\n//     <h1>{switchToOldUser()}</h1>\n//   ) : (\n//     <div>Error! New user but incorrect input</div>\n//   )\n// ) : weather.name == null ? (\n//   <div></div>\n// ) : (\n//   <h2>Error! Wrong name entered</h2>\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/src/Components/weather/Weather.js"],"names":["React","useState","Weather","api","key","url","query","setQuery","weather","setWeather","isUserSearchingFirstTime","lat","setLat","lon","setLon","search","evt","fetch","then","res","json","result","coord","console","log","getTodaysDate","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","switchToOldUser","e","target","value","main","Math","round","temp","name","sys","country","Date","message"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../../styles/weatherStyles.css\";\r\n\r\nfunction Weather() {\r\n  const api = {\r\n    key: \"bfee40a57b03b378c6f6fc873967f983\",\r\n    url: \"https://api.openweathermap.org/data/2.5/\",\r\n  };\r\n\r\n  const [query, setQuery] = useState(\"\");\r\n  const [weather, setWeather] = useState({});\r\n  // const [eventSuggestions, setEventSuggestions] = useState({});\r\n  let isUserSearchingFirstTime = true;\r\n  const [lat, setLat] = useState(\"\");\r\n  const [lon, setLon] = useState(\"\");\r\n\r\n  const search = (evt) => {\r\n    if (evt.key === \"Enter\") {\r\n      fetch(`${api.url}weather?q=${query}&appid=${api.key}&units=metric`)\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          setWeather(result);\r\n          setLat(result.coord.lat);\r\n          setLat(result.coord.lon);\r\n          setQuery(\"\");\r\n          console.log(result);\r\n          console.log(\"lat: \" + lat + \"lon: \" + lon);\r\n        });\r\n    }\r\n  };\r\n\r\n  const getTodaysDate = (d) => {\r\n    const months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    const days = [\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n      \"Sunday\",\r\n    ];\r\n\r\n    var day = days[d.getDay()];\r\n    var date = d.getDate();\r\n    var month = months[d.getMonth()];\r\n    var year = d.getFullYear();\r\n\r\n    return `${day} ${date} ${month} ${year}`;\r\n  };\r\n\r\n  const switchToOldUser = () => {\r\n    isUserSearchingFirstTime = false;\r\n    return `Welcome`;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <main>\r\n        <input\r\n          type=\"text\"\r\n          className=\"search-bar\"\r\n          placeholder=\"Enter your city\"\r\n          onChange={(e) => setQuery(e.target.value)}\r\n          value={query}\r\n          onKeyPress={search}\r\n        ></input>\r\n        {typeof weather.main != \"undefined\" ? (\r\n          <div>\r\n            <div className=\"weather-container\">\r\n              <div className=\"weather\">\r\n                <div className=\"temp\">{Math.round(weather.main.temp)}°C</div>\r\n                <div className=\"condition\">{weather.weather[0].main}</div>\r\n                <div className=\"city\">\r\n                  {weather.name}, {weather.sys.country}\r\n                </div>\r\n                <br></br>\r\n                <div className=\"date\">{getTodaysDate(new Date())}</div>\r\n                <br></br>\r\n              </div>\r\n              <aside>Activites Here</aside>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <h1>{weather.message}</h1>\r\n          </div>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weather;\r\n\r\n// isUserSearchingFirstTime ? (\r\n//   weather.name == null ? (\r\n//     <h1>{switchToOldUser()}</h1>\r\n//   ) : (\r\n//     <div>Error! New user but incorrect input</div>\r\n//   )\r\n// ) : weather.name == null ? (\r\n//   <div></div>\r\n// ) : (\r\n//   <h2>Error! Wrong name entered</h2>\r\n"]},"metadata":{},"sourceType":"module"}