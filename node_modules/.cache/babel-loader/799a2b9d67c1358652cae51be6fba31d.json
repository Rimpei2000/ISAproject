{"ast":null,"code":"const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    show = false,\n    role = 'dialog',\n    className,\n    style,\n    children,\n    backdrop = true,\n    keyboard = true,\n    onBackdropClick,\n    onEscapeKeyDown,\n    transition,\n    backdropTransition,\n    autoFocus = true,\n    enforceFocus = true,\n    restoreFocus = true,\n    restoreFocusOptions,\n    renderDialog,\n    renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n    manager: providedManager,\n    container: containerRef,\n    onShow,\n    onHide = () => {},\n    onExit,\n    onExited,\n    onExiting,\n    onEnter,\n    onEntering,\n    onEntered\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current; // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n\n\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  }); // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    const currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n\n  const handleHidden = function () {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...arguments);\n  };\n\n  const Transition = transition;\n\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n\n  if (Transition) {\n    dialog = /*#__PURE__*/_jsx(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      in: !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: dialog\n    });\n  }\n\n  let backdropElement = null;\n\n  if (backdrop) {\n    const BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/_jsx(BackdropTransition, {\n        appear: true,\n        in: !!show,\n        children: backdropElement\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","map":{"version":3,"sources":["C:/Users/bhupe/Downloads/Term 4/COMP4537/FinalMilestone/ISAproject/node_modules/@restart/ui/esm/Modal.js"],"names":["_excluded","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","length","indexOf","activeElement","contains","canUseDOM","listen","useState","useRef","useCallback","useImperativeHandle","forwardRef","useEffect","React","ReactDOM","useMounted","useWillUnmount","usePrevious","useEventCallback","ModalManager","useWaitForDOMRef","useWindow","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","manager","getManager","window","ownerDocument","document","useModalManager","provided","modalManager","modal","dialog","backdrop","assign","current","add","remove","isTopModal","setDialogRef","ref","setBackdropRef","Modal","_ref","show","role","className","style","children","keyboard","onBackdropClick","onEscapeKeyDown","transition","backdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","props","providedManager","container","containerRef","onShow","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","isMounted","prevShow","exited","setExited","lastFocusRef","handleShow","removeKeydownListenerRef","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","focus","handleHide","_lastFocusRef$current","handleBackdropClick","e","currentTarget","keyCode","defaultPrevented","handleHidden","Transition","dialogProps","undefined","tabIndex","cloneElement","appear","unmountOnExit","in","backdropElement","BackdropTransition","onClick","createPortal","displayName","Manager"],"mappings":"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","sourcesContent":["const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\r\n\r\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\r\n\r\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\r\nimport activeElement from 'dom-helpers/activeElement';\r\nimport contains from 'dom-helpers/contains';\r\nimport canUseDOM from 'dom-helpers/canUseDOM';\r\nimport listen from 'dom-helpers/listen';\r\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\r\nimport * as React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport useMounted from '@restart/hooks/useMounted';\r\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\r\nimport usePrevious from '@restart/hooks/usePrevious';\r\nimport useEventCallback from '@restart/hooks/useEventCallback';\r\nimport ModalManager from './ModalManager';\r\nimport useWaitForDOMRef from './useWaitForDOMRef';\r\nimport useWindow from './useWindow';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\r\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\r\nlet manager;\r\n\r\nfunction getManager(window) {\r\n  if (!manager) manager = new ModalManager({\r\n    ownerDocument: window == null ? void 0 : window.document\r\n  });\r\n  return manager;\r\n}\r\n\r\nfunction useModalManager(provided) {\r\n  const window = useWindow();\r\n  const modalManager = provided || getManager(window);\r\n  const modal = useRef({\r\n    dialog: null,\r\n    backdrop: null\r\n  });\r\n  return Object.assign(modal.current, {\r\n    add: () => modalManager.add(modal.current),\r\n    remove: () => modalManager.remove(modal.current),\r\n    isTopModal: () => modalManager.isTopModal(modal.current),\r\n    setDialogRef: useCallback(ref => {\r\n      modal.current.dialog = ref;\r\n    }, []),\r\n    setBackdropRef: useCallback(ref => {\r\n      modal.current.backdrop = ref;\r\n    }, [])\r\n  });\r\n}\r\n\r\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\r\n  let {\r\n    show = false,\r\n    role = 'dialog',\r\n    className,\r\n    style,\r\n    children,\r\n    backdrop = true,\r\n    keyboard = true,\r\n    onBackdropClick,\r\n    onEscapeKeyDown,\r\n    transition,\r\n    backdropTransition,\r\n    autoFocus = true,\r\n    enforceFocus = true,\r\n    restoreFocus = true,\r\n    restoreFocusOptions,\r\n    renderDialog,\r\n    renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\r\n    manager: providedManager,\r\n    container: containerRef,\r\n    onShow,\r\n    onHide = () => {},\r\n    onExit,\r\n    onExited,\r\n    onExiting,\r\n    onEnter,\r\n    onEntering,\r\n    onEntered\r\n  } = _ref,\r\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\r\n\r\n  const container = useWaitForDOMRef(containerRef);\r\n  const modal = useModalManager(providedManager);\r\n  const isMounted = useMounted();\r\n  const prevShow = usePrevious(show);\r\n  const [exited, setExited] = useState(!show);\r\n  const lastFocusRef = useRef(null);\r\n  useImperativeHandle(ref, () => modal, [modal]);\r\n\r\n  if (canUseDOM && !prevShow && show) {\r\n    lastFocusRef.current = activeElement();\r\n  }\r\n\r\n  if (!transition && !show && !exited) {\r\n    setExited(true);\r\n  } else if (show && exited) {\r\n    setExited(false);\r\n  }\r\n\r\n  const handleShow = useEventCallback(() => {\r\n    modal.add();\r\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\r\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\r\n    // and so steals focus from it\r\n    () => setTimeout(handleEnforceFocus), true);\r\n\r\n    if (onShow) {\r\n      onShow();\r\n    } // autofocus after onShow to not trigger a focus event for previous\r\n    // modals before this one is shown.\r\n\r\n\r\n    if (autoFocus) {\r\n      const currentActiveElement = activeElement(document);\r\n\r\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\r\n        lastFocusRef.current = currentActiveElement;\r\n        modal.dialog.focus();\r\n      }\r\n    }\r\n  });\r\n  const handleHide = useEventCallback(() => {\r\n    modal.remove();\r\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\r\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\r\n\r\n    if (restoreFocus) {\r\n      var _lastFocusRef$current;\r\n\r\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\r\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\r\n      lastFocusRef.current = null;\r\n    }\r\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\r\n  // Show logic when:\r\n  //  - show is `true` _and_ `container` has resolved\r\n\r\n  useEffect(() => {\r\n    if (!show || !container) return;\r\n    handleShow();\r\n  }, [show, container,\r\n  /* should never change: */\r\n  handleShow]); // Hide cleanup logic when:\r\n  //  - `exited` switches to true\r\n  //  - component unmounts;\r\n\r\n  useEffect(() => {\r\n    if (!exited) return;\r\n    handleHide();\r\n  }, [exited, handleHide]);\r\n  useWillUnmount(() => {\r\n    handleHide();\r\n  }); // --------------------------------\r\n\r\n  const handleEnforceFocus = useEventCallback(() => {\r\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\r\n      return;\r\n    }\r\n\r\n    const currentActiveElement = activeElement();\r\n\r\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\r\n      modal.dialog.focus();\r\n    }\r\n  });\r\n  const handleBackdropClick = useEventCallback(e => {\r\n    if (e.target !== e.currentTarget) {\r\n      return;\r\n    }\r\n\r\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\r\n\r\n    if (backdrop === true) {\r\n      onHide();\r\n    }\r\n  });\r\n  const handleDocumentKeyDown = useEventCallback(e => {\r\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\r\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\r\n\r\n      if (!e.defaultPrevented) {\r\n        onHide();\r\n      }\r\n    }\r\n  });\r\n  const removeFocusListenerRef = useRef();\r\n  const removeKeydownListenerRef = useRef();\r\n\r\n  const handleHidden = (...args) => {\r\n    setExited(true);\r\n    onExited == null ? void 0 : onExited(...args);\r\n  };\r\n\r\n  const Transition = transition;\r\n\r\n  if (!container || !(show || Transition && !exited)) {\r\n    return null;\r\n  }\r\n\r\n  const dialogProps = Object.assign({\r\n    role,\r\n    ref: modal.setDialogRef,\r\n    // apparently only works on the dialog role element\r\n    'aria-modal': role === 'dialog' ? true : undefined\r\n  }, rest, {\r\n    style,\r\n    className,\r\n    tabIndex: -1\r\n  });\r\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\r\n    children: /*#__PURE__*/React.cloneElement(children, {\r\n      role: 'document'\r\n    })\r\n  }));\r\n\r\n  if (Transition) {\r\n    dialog = /*#__PURE__*/_jsx(Transition, {\r\n      appear: true,\r\n      unmountOnExit: true,\r\n      in: !!show,\r\n      onExit: onExit,\r\n      onExiting: onExiting,\r\n      onExited: handleHidden,\r\n      onEnter: onEnter,\r\n      onEntering: onEntering,\r\n      onEntered: onEntered,\r\n      children: dialog\r\n    });\r\n  }\r\n\r\n  let backdropElement = null;\r\n\r\n  if (backdrop) {\r\n    const BackdropTransition = backdropTransition;\r\n    backdropElement = renderBackdrop({\r\n      ref: modal.setBackdropRef,\r\n      onClick: handleBackdropClick\r\n    });\r\n\r\n    if (BackdropTransition) {\r\n      backdropElement = /*#__PURE__*/_jsx(BackdropTransition, {\r\n        appear: true,\r\n        in: !!show,\r\n        children: backdropElement\r\n      });\r\n    }\r\n  }\r\n\r\n  return /*#__PURE__*/_jsx(_Fragment, {\r\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\r\n      children: [backdropElement, dialog]\r\n    }), container)\r\n  });\r\n});\r\nModal.displayName = 'Modal';\r\nexport default Object.assign(Modal, {\r\n  Manager: ModalManager\r\n});"]},"metadata":{},"sourceType":"module"}