{"ast":null,"code":"import _objectSpread from \"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"bsPrefix\", \"split\", \"className\", \"childBsPrefix\", \"as\"];\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useDropdownToggle } from '@restart/ui/DropdownToggle';\nimport DropdownContext from '@restart/ui/DropdownContext';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport Button from './Button';\nimport InputGroupContext from './InputGroupContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar DropdownToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      split = _ref.split,\n      className = _ref.className,\n      childBsPrefix = _ref.childBsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? Button : _ref$as,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n  var dropdownContext = useContext(DropdownContext);\n  var isInputGroup = useContext(InputGroupContext);\n\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n\n  var _useDropdownToggle = useDropdownToggle(),\n      _useDropdownToggle2 = _slicedToArray(_useDropdownToggle, 1),\n      toggleProps = _useDropdownToggle2[0];\n\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle')); // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n\n  return /*#__PURE__*/_jsx(Component, _objectSpread(_objectSpread({\n    className: classNames(className, prefix, split && \"\".concat(prefix, \"-split\"), !!isInputGroup && (dropdownContext == null ? void 0 : dropdownContext.show) && 'show')\n  }, toggleProps), props));\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;","map":{"version":3,"sources":["C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/react-bootstrap/esm/DropdownToggle.js"],"names":["classNames","React","useContext","useDropdownToggle","DropdownContext","useMergedRefs","Button","InputGroupContext","useBootstrapPrefix","useWrappedRefWithWarning","jsx","_jsx","DropdownToggle","forwardRef","ref","bsPrefix","split","className","childBsPrefix","as","Component","props","prefix","dropdownContext","isInputGroup","undefined","toggleProps","show","displayName"],"mappings":";;;;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,iBAAT,QAAkC,4BAAlC;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,OAAOC,wBAAP,MAAqC,4BAArC;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,IAAMC,cAAc,GAAG,aAAaX,KAAK,CAACY,UAAN,CAAiB,gBAQlDC,GARkD,EAQ1C;AAAA,MAPTC,QAOS,QAPTA,QAOS;AAAA,MANTC,KAMS,QANTA,KAMS;AAAA,MALTC,SAKS,QALTA,SAKS;AAAA,MAJTC,aAIS,QAJTA,aAIS;AAAA,qBAFTC,EAES;AAAA,MAFLC,SAEK,wBAFOd,MAEP;AAAA,MADNe,KACM;;AACT,MAAMC,MAAM,GAAGd,kBAAkB,CAACO,QAAD,EAAW,iBAAX,CAAjC;AACA,MAAMQ,eAAe,GAAGrB,UAAU,CAACE,eAAD,CAAlC;AACA,MAAMoB,YAAY,GAAGtB,UAAU,CAACK,iBAAD,CAA/B;;AAEA,MAAIW,aAAa,KAAKO,SAAtB,EAAiC;AAC/BJ,IAAAA,KAAK,CAACN,QAAN,GAAiBG,aAAjB;AACD;;AAED,2BAAsBf,iBAAiB,EAAvC;AAAA;AAAA,MAAOuB,WAAP;;AACAA,EAAAA,WAAW,CAACZ,GAAZ,GAAkBT,aAAa,CAACqB,WAAW,CAACZ,GAAb,EAAkBL,wBAAwB,CAACK,GAAD,EAAM,gBAAN,CAA1C,CAA/B,CAVS,CAU0F;AACnG;;AAEA,SAAO,aAAaH,IAAI,CAACS,SAAD;AACtBH,IAAAA,SAAS,EAAEjB,UAAU,CAACiB,SAAD,EAAYK,MAAZ,EAAoBN,KAAK,cAAOM,MAAP,WAAzB,EAAgD,CAAC,CAACE,YAAF,KAAmBD,eAAe,IAAI,IAAnB,GAA0B,KAAK,CAA/B,GAAmCA,eAAe,CAACI,IAAtE,KAA+E,MAA/H;AADC,KAEnBD,WAFmB,GAGnBL,KAHmB,EAAxB;AAKD,CA1BmC,CAApC;AA2BAT,cAAc,CAACgB,WAAf,GAA6B,gBAA7B;AACA,eAAehB,cAAf","sourcesContent":["import classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport { useContext } from 'react';\r\nimport { useDropdownToggle } from '@restart/ui/DropdownToggle';\r\nimport DropdownContext from '@restart/ui/DropdownContext';\r\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\r\nimport Button from './Button';\r\nimport InputGroupContext from './InputGroupContext';\r\nimport { useBootstrapPrefix } from './ThemeProvider';\r\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst DropdownToggle = /*#__PURE__*/React.forwardRef(({\r\n  bsPrefix,\r\n  split,\r\n  className,\r\n  childBsPrefix,\r\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\r\n  as: Component = Button,\r\n  ...props\r\n}, ref) => {\r\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\r\n  const dropdownContext = useContext(DropdownContext);\r\n  const isInputGroup = useContext(InputGroupContext);\r\n\r\n  if (childBsPrefix !== undefined) {\r\n    props.bsPrefix = childBsPrefix;\r\n  }\r\n\r\n  const [toggleProps] = useDropdownToggle();\r\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle')); // This intentionally forwards size and variant (if set) to the\r\n  // underlying component, to allow it to render size and style variants.\r\n\r\n  return /*#__PURE__*/_jsx(Component, {\r\n    className: classNames(className, prefix, split && `${prefix}-split`, !!isInputGroup && (dropdownContext == null ? void 0 : dropdownContext.show) && 'show'),\r\n    ...toggleProps,\r\n    ...props\r\n  });\r\n});\r\nDropdownToggle.displayName = 'DropdownToggle';\r\nexport default DropdownToggle;"]},"metadata":{},"sourceType":"module"}