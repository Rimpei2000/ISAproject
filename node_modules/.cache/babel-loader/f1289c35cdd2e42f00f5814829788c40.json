{"ast":null,"code":"import _objectSpread from \"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"id\", \"bsPrefix\", \"className\", \"type\", \"isValid\", \"isInvalid\", \"as\"];\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar FormCheckInput = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n      bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'checkbox' : _ref$type,\n      _ref$isValid = _ref.isValid,\n      isValid = _ref$isValid === void 0 ? false : _ref$isValid,\n      _ref$isInvalid = _ref.isInvalid,\n      isInvalid = _ref$isInvalid === void 0 ? false : _ref$isInvalid,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'input' : _ref$as,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId;\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  }));\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","map":{"version":3,"sources":["C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/react-bootstrap/esm/FormCheckInput.js"],"names":["classNames","React","useContext","FormContext","useBootstrapPrefix","jsx","_jsx","FormCheckInput","forwardRef","ref","id","bsPrefix","className","type","isValid","isInvalid","as","Component","props","controlId","displayName"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,IAAMC,cAAc,GAAG,aAAaN,KAAK,CAACO,UAAN,CAAiB,gBAUlDC,GAVkD,EAU1C;AAAA,MATTC,EASS,QATTA,EASS;AAAA,MARTC,QAQS,QARTA,QAQS;AAAA,MAPTC,SAOS,QAPTA,SAOS;AAAA,uBANTC,IAMS;AAAA,MANTA,IAMS,0BANF,UAME;AAAA,0BALTC,OAKS;AAAA,MALTA,OAKS,6BALC,KAKD;AAAA,4BAJTC,SAIS;AAAA,MAJTA,SAIS,+BAJG,KAIH;AAAA,qBAFTC,EAES;AAAA,MAFLC,SAEK,wBAFO,OAEP;AAAA,MADNC,KACM;;AACT,oBAEIhB,UAAU,CAACC,WAAD,CAFd;AAAA,MACEgB,SADF,eACEA,SADF;;AAGAR,EAAAA,QAAQ,GAAGP,kBAAkB,CAACO,QAAD,EAAW,kBAAX,CAA7B;AACA,SAAO,aAAaL,IAAI,CAACW,SAAD,kCAAiBC,KAAjB;AACtBT,IAAAA,GAAG,EAAEA,GADiB;AAEtBI,IAAAA,IAAI,EAAEA,IAFgB;AAGtBH,IAAAA,EAAE,EAAEA,EAAE,IAAIS,SAHY;AAItBP,IAAAA,SAAS,EAAEZ,UAAU,CAACY,SAAD,EAAYD,QAAZ,EAAsBG,OAAO,IAAI,UAAjC,EAA6CC,SAAS,IAAI,YAA1D;AAJC,KAAxB;AAMD,CArBmC,CAApC;AAsBAR,cAAc,CAACa,WAAf,GAA6B,gBAA7B;AACA,eAAeb,cAAf","sourcesContent":["import classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport { useContext } from 'react';\r\nimport FormContext from './FormContext';\r\nimport { useBootstrapPrefix } from './ThemeProvider';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\r\n  id,\r\n  bsPrefix,\r\n  className,\r\n  type = 'checkbox',\r\n  isValid = false,\r\n  isInvalid = false,\r\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\r\n  as: Component = 'input',\r\n  ...props\r\n}, ref) => {\r\n  const {\r\n    controlId\r\n  } = useContext(FormContext);\r\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\r\n  return /*#__PURE__*/_jsx(Component, { ...props,\r\n    ref: ref,\r\n    type: type,\r\n    id: id || controlId,\r\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\r\n  });\r\n});\r\nFormCheckInput.displayName = 'FormCheckInput';\r\nexport default FormCheckInput;"]},"metadata":{},"sourceType":"module"}