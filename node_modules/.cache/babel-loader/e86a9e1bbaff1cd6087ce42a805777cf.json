{"ast":null,"code":"import _slicedToArray from \"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport * as React from 'react';\nimport { useContext, useEffect, useMemo, useState, useRef } from 'react';\nimport { cloneElement } from 'react';\nimport { MapContext } from './map';\nimport assert from '../utils/assert';\nimport { deepEqual } from '../utils/deep-equal';\nvar sourceCounter = 0;\n\nfunction createSource(map, id, props) {\n  // @ts-ignore\n  if (map.style && map.style._loaded) {\n    var options = _objectSpread({}, props);\n\n    delete options.id;\n    delete options.children; // @ts-ignore\n\n    map.addSource(id, options);\n    return map.getSource(id);\n  }\n\n  return null;\n}\n/* eslint-disable complexity */\n\n\nfunction updateSource(source, props, prevProps) {\n  assert(props.id === prevProps.id, 'source id changed');\n  assert(props.type === prevProps.type, 'source type changed');\n  var changedKey = '';\n  var changedKeyCount = 0;\n\n  for (var key in props) {\n    if (key !== 'children' && key !== 'id' && !deepEqual(prevProps[key], props[key])) {\n      changedKey = key;\n      changedKeyCount++;\n    }\n  }\n\n  if (!changedKeyCount) {\n    return;\n  }\n\n  var type = props.type;\n\n  if (type === 'geojson') {\n    source.setData(props.data);\n  } else if (type === 'image') {\n    source.updateImage({\n      url: props.url,\n      coordinates: props.coordinates\n    });\n  } else if ((type === 'canvas' || type === 'video') && changedKeyCount === 1 && changedKey === 'coordinates') {\n    source.setCoordinates(props.coordinates);\n  } else if (type === 'vector' && 'setUrl' in source) {\n    // Added in 1.12.0:\n    // vectorTileSource.setTiles\n    // vectorTileSource.setUrl\n    switch (changedKey) {\n      case 'url':\n        source.setUrl(props.url);\n        break;\n\n      case 'tiles':\n        source.setTiles(props.tiles);\n        break;\n\n      default:\n    }\n  } else {\n    // eslint-disable-next-line\n    console.warn(\"Unable to update <Source> prop: \".concat(changedKey));\n  }\n}\n/* eslint-enable complexity */\n\n\nfunction Source(props) {\n  var map = useContext(MapContext).map.getMap();\n  var propsRef = useRef(props);\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      setStyleLoaded = _useState2[1];\n\n  var id = useMemo(function () {\n    return props.id || \"jsx-source-\".concat(sourceCounter++);\n  }, []);\n  useEffect(function () {\n    if (map) {\n      var forceUpdate = function forceUpdate() {\n        return setStyleLoaded(function (version) {\n          return version + 1;\n        });\n      };\n\n      map.on('styledata', forceUpdate);\n      forceUpdate();\n      return function () {\n        map.off('styledata', forceUpdate); // Parent effects are destroyed before child ones, see\n        // https://github.com/facebook/react/issues/16728\n        // Source can only be removed after all child layers are removed\n\n        /* global setTimeout */\n\n        setTimeout(function () {\n          // @ts-ignore\n          if (map.style && map.style._loaded && map.getSource(id)) {\n            map.removeSource(id);\n          }\n        }, 0);\n      };\n    }\n\n    return undefined;\n  }, [map]); // @ts-ignore\n\n  var source = map && map.style && map.getSource(id);\n\n  if (source) {\n    updateSource(source, props, propsRef.current);\n  } else {\n    source = createSource(map, id, props);\n  }\n\n  propsRef.current = props;\n  return source && React.Children.map(props.children, function (child) {\n    return child && cloneElement(child, {\n      source: id\n    });\n  }) || null;\n}\n\nexport default Source;","map":{"version":3,"mappings":"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","names":["React","useContext","useEffect","useMemo","useState","useRef","cloneElement","MapContext","assert","deepEqual","sourceCounter","createSource","map","id","props","style","_loaded","options","children","addSource","getSource","updateSource","source","prevProps","type","changedKey","changedKeyCount","key","setData","data","updateImage","url","coordinates","setCoordinates","setUrl","setTiles","tiles","console","warn","Source","getMap","propsRef","setStyleLoaded","forceUpdate","version","on","off","setTimeout","removeSource","undefined","current","Children","child"],"sources":["C:\\Users\\bhupe\\Downloads\\Term 4\\COMP4537\\MilestoneFinal\\ISAproject\\node_modules\\react-map-gl\\src\\components\\source.ts"],"sourcesContent":["import * as React from 'react';\nimport {useContext, useEffect, useMemo, useState, useRef} from 'react';\nimport {cloneElement} from 'react';\nimport {MapContext} from './map';\nimport assert from '../utils/assert';\nimport {deepEqual} from '../utils/deep-equal';\n\nimport type {\n  MapboxMap,\n  AnySourceData,\n  GeoJSONSource,\n  ImageSource,\n  VideoSource,\n  AnySourceImpl\n} from '../types';\n\nexport type SourceProps = AnySourceData & {\n  id?: string;\n  children?: any;\n};\n\nlet sourceCounter = 0;\n\nfunction createSource(map: MapboxMap, id: string, props: SourceProps) {\n  // @ts-ignore\n  if (map.style && map.style._loaded) {\n    const options = {...props};\n    delete options.id;\n    delete options.children;\n    // @ts-ignore\n    map.addSource(id, options);\n    return map.getSource(id);\n  }\n  return null;\n}\n\n/* eslint-disable complexity */\nfunction updateSource(source: AnySourceImpl, props: SourceProps, prevProps: SourceProps) {\n  assert(props.id === prevProps.id, 'source id changed');\n  assert(props.type === prevProps.type, 'source type changed');\n\n  let changedKey = '';\n  let changedKeyCount = 0;\n\n  for (const key in props) {\n    if (key !== 'children' && key !== 'id' && !deepEqual(prevProps[key], props[key])) {\n      changedKey = key;\n      changedKeyCount++;\n    }\n  }\n\n  if (!changedKeyCount) {\n    return;\n  }\n\n  const type = props.type;\n\n  if (type === 'geojson') {\n    (source as GeoJSONSource).setData(props.data);\n  } else if (type === 'image') {\n    (source as ImageSource).updateImage({url: props.url, coordinates: props.coordinates});\n  } else if (\n    (type === 'canvas' || type === 'video') &&\n    changedKeyCount === 1 &&\n    changedKey === 'coordinates'\n  ) {\n    (source as VideoSource).setCoordinates(props.coordinates);\n  } else if (type === 'vector' && 'setUrl' in source) {\n    // Added in 1.12.0:\n    // vectorTileSource.setTiles\n    // vectorTileSource.setUrl\n    switch (changedKey) {\n      case 'url':\n        source.setUrl(props.url);\n        break;\n      case 'tiles':\n        source.setTiles(props.tiles);\n        break;\n      default:\n    }\n  } else {\n    // eslint-disable-next-line\n    console.warn(`Unable to update <Source> prop: ${changedKey}`);\n  }\n}\n/* eslint-enable complexity */\n\nfunction Source(props: SourceProps) {\n  const map: MapboxMap = useContext(MapContext).map.getMap();\n  const propsRef = useRef(props);\n  const [, setStyleLoaded] = useState(0);\n\n  const id = useMemo(() => props.id || `jsx-source-${sourceCounter++}`, []);\n\n  useEffect(() => {\n    if (map) {\n      const forceUpdate = () => setStyleLoaded(version => version + 1);\n      map.on('styledata', forceUpdate);\n      forceUpdate();\n\n      return () => {\n        map.off('styledata', forceUpdate);\n        // Parent effects are destroyed before child ones, see\n        // https://github.com/facebook/react/issues/16728\n        // Source can only be removed after all child layers are removed\n        /* global setTimeout */\n        setTimeout(() => {\n          // @ts-ignore\n          if (map.style && map.style._loaded && map.getSource(id)) {\n            map.removeSource(id);\n          }\n        }, 0);\n      };\n    }\n    return undefined;\n  }, [map]);\n\n  // @ts-ignore\n  let source = map && map.style && map.getSource(id);\n  if (source) {\n    updateSource(source, props, propsRef.current);\n  } else {\n    source = createSource(map, id, props);\n  }\n  propsRef.current = props;\n\n  return (\n    (source &&\n      React.Children.map(\n        props.children,\n        child =>\n          child &&\n          cloneElement(child, {\n            source: id\n          })\n      )) ||\n    null\n  );\n}\n\nexport default Source;\n"]},"metadata":{},"sourceType":"module"}