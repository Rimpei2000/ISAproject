{"ast":null,"code":"import _objectSpread from \"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport { useState, useRef, useEffect, useContext, useMemo, forwardRef, useImperativeHandle } from 'react';\nimport { MountedMapsContext } from './use-map';\nimport Mapbox from '../mapbox/mapbox';\nimport createRef from '../mapbox/create-ref';\nimport useIsomorphicLayoutEffect from '../utils/use-isomorphic-layout-effect';\nimport setGlobals from '../utils/set-globals';\nexport var MapContext = React.createContext(null);\nvar defaultProps = {\n  // Constraints\n  minZoom: 0,\n  maxZoom: 22,\n  minPitch: 0,\n  maxPitch: 60,\n  // Interaction handlers\n  scrollZoom: true,\n  boxZoom: true,\n  dragRotate: true,\n  dragPan: true,\n  keyboard: true,\n  doubleClickZoom: true,\n  touchZoomRotate: true,\n  touchPitch: true,\n  // Style\n  mapStyle: {\n    version: 8,\n    sources: {},\n    layers: []\n  },\n  styleDiffing: true,\n  projection: 'mercator',\n  renderWorldCopies: true,\n  // Callbacks\n  onError: function onError(e) {\n    return console.error(e.error);\n  },\n  // Globals\n  RTLTextPlugin: 'https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.2.3/mapbox-gl-rtl-text.js'\n};\nvar Map = forwardRef(function (props, ref) {\n  var mountedMapsContext = useContext(MountedMapsContext);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      mapInstance = _useState2[0],\n      setMapInstance = _useState2[1];\n\n  var containerRef = useRef();\n\n  var _useRef = useRef({\n    mapLib: null,\n    map: null\n  }),\n      contextValue = _useRef.current;\n\n  useEffect(function () {\n    var mapLib = props.mapLib;\n    var isMounted = true;\n    var mapbox;\n    Promise.resolve(mapLib || import('mapbox-gl')).then(function (mapboxgl) {\n      if (!isMounted) {\n        return;\n      }\n\n      if (!mapboxgl.Map) {\n        // commonjs style\n        mapboxgl = mapboxgl.default;\n      }\n\n      if (!mapboxgl || !mapboxgl.Map) {\n        throw new Error('Invalid mapLib');\n      }\n\n      if (mapboxgl.supported(props)) {\n        setGlobals(mapboxgl, props);\n\n        if (props.reuseMaps) {\n          mapbox = Mapbox.reuse(props, containerRef.current);\n        }\n\n        if (!mapbox) {\n          mapbox = new Mapbox(mapboxgl.Map, props, containerRef.current);\n        }\n\n        contextValue.map = createRef(mapbox, mapboxgl);\n        contextValue.mapLib = mapboxgl;\n        setMapInstance(mapbox);\n        mountedMapsContext === null || mountedMapsContext === void 0 ? void 0 : mountedMapsContext.onMapMount(contextValue.map, props.id);\n      } else {\n        throw new Error('Map is not supported by this browser');\n      }\n    }).catch(function (error) {\n      props.onError({\n        type: 'error',\n        target: null,\n        originalEvent: null,\n        error: error\n      });\n    });\n    return function () {\n      isMounted = false;\n\n      if (mapbox) {\n        mountedMapsContext === null || mountedMapsContext === void 0 ? void 0 : mountedMapsContext.onMapUnmount(props.id);\n\n        if (props.reuseMaps) {\n          mapbox.recycle();\n        } else {\n          mapbox.destroy();\n        }\n      }\n    };\n  }, []);\n  useIsomorphicLayoutEffect(function () {\n    if (mapInstance) {\n      mapInstance.setProps(props);\n    }\n  });\n  useImperativeHandle(ref, function () {\n    return contextValue.map;\n  }, [mapInstance]);\n  var style = useMemo(function () {\n    return _objectSpread({\n      position: 'relative',\n      width: '100%',\n      height: '100%'\n    }, props.style);\n  }, [props.style]);\n  return React.createElement(\"div\", {\n    id: props.id,\n    ref: containerRef,\n    style: style\n  }, mapInstance && React.createElement(MapContext.Provider, {\n    value: contextValue\n  }, props.children));\n});\nMap.displayName = 'Map';\nMap.defaultProps = defaultProps;\nexport default Map;","map":{"version":3,"mappings":"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","names":["React","useState","useRef","useEffect","useContext","useMemo","forwardRef","useImperativeHandle","MountedMapsContext","Mapbox","createRef","useIsomorphicLayoutEffect","setGlobals","MapContext","createContext","defaultProps","minZoom","maxZoom","minPitch","maxPitch","scrollZoom","boxZoom","dragRotate","dragPan","keyboard","doubleClickZoom","touchZoomRotate","touchPitch","mapStyle","version","sources","layers","styleDiffing","projection","renderWorldCopies","onError","console","error","e","RTLTextPlugin","Map","props","ref","mountedMapsContext","mapInstance","setMapInstance","containerRef","mapLib","map","contextValue","current","isMounted","mapbox","Promise","resolve","then","mapboxgl","default","Error","supported","reuseMaps","reuse","onMapMount","id","catch","type","target","originalEvent","onMapUnmount","recycle","destroy","setProps","style","position","width","height","Provider","value","children","displayName"],"sources":["C:\\Users\\bhupe\\Downloads\\Term 4\\COMP4537\\MilestoneFinal\\ISAproject\\node_modules\\react-map-gl\\src\\components\\map.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  useState,\n  useRef,\n  useEffect,\n  useContext,\n  useMemo,\n  forwardRef,\n  useImperativeHandle\n} from 'react';\n\nimport {MountedMapsContext} from './use-map';\nimport Mapbox, {MapboxProps} from '../mapbox/mapbox';\nimport createRef, {MapRef} from '../mapbox/create-ref';\n\nimport type {CSSProperties} from 'react';\nimport useIsomorphicLayoutEffect from '../utils/use-isomorphic-layout-effect';\nimport setGlobals, {GlobalSettings} from '../utils/set-globals';\n\nexport type MapContextValue = {\n  mapLib: any;\n  map: MapRef;\n};\n\nexport const MapContext = React.createContext<MapContextValue>(null);\n\nexport type MapProps = MapboxProps &\n  GlobalSettings & {\n    mapLib?: any;\n    reuseMaps?: boolean;\n    /** Map container id */\n    id?: string;\n    /** Map container CSS style */\n    style?: CSSProperties;\n    children?: any;\n  };\n\nconst defaultProps: MapProps = {\n  // Constraints\n  minZoom: 0,\n  maxZoom: 22,\n  minPitch: 0,\n  maxPitch: 60,\n\n  // Interaction handlers\n  scrollZoom: true,\n  boxZoom: true,\n  dragRotate: true,\n  dragPan: true,\n  keyboard: true,\n  doubleClickZoom: true,\n  touchZoomRotate: true,\n  touchPitch: true,\n\n  // Style\n  mapStyle: {version: 8, sources: {}, layers: []},\n  styleDiffing: true,\n  projection: 'mercator',\n  renderWorldCopies: true,\n\n  // Callbacks\n  onError: e => console.error(e.error), // eslint-disable-line\n\n  // Globals\n  RTLTextPlugin:\n    'https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.2.3/mapbox-gl-rtl-text.js'\n};\n\nconst Map = forwardRef<MapRef, MapProps>((props, ref) => {\n  const mountedMapsContext = useContext(MountedMapsContext);\n  const [mapInstance, setMapInstance] = useState<Mapbox>(null);\n  const containerRef = useRef();\n\n  const {current: contextValue} = useRef<MapContextValue>({mapLib: null, map: null});\n\n  useEffect(() => {\n    const mapLib = props.mapLib;\n    let isMounted = true;\n    let mapbox;\n\n    Promise.resolve(mapLib || import('mapbox-gl'))\n      .then(mapboxgl => {\n        if (!isMounted) {\n          return;\n        }\n\n        if (!mapboxgl.Map) {\n          // commonjs style\n          mapboxgl = mapboxgl.default;\n        }\n        if (!mapboxgl || !mapboxgl.Map) {\n          throw new Error('Invalid mapLib');\n        }\n\n        if (mapboxgl.supported(props)) {\n          setGlobals(mapboxgl, props);\n          if (props.reuseMaps) {\n            mapbox = Mapbox.reuse(props, containerRef.current);\n          }\n          if (!mapbox) {\n            mapbox = new Mapbox(mapboxgl.Map, props, containerRef.current);\n          }\n          contextValue.map = createRef(mapbox, mapboxgl);\n          contextValue.mapLib = mapboxgl;\n\n          setMapInstance(mapbox);\n          mountedMapsContext?.onMapMount(contextValue.map, props.id);\n        } else {\n          throw new Error('Map is not supported by this browser');\n        }\n      })\n      .catch(error => {\n        props.onError({\n          type: 'error',\n          target: null,\n          originalEvent: null,\n          error\n        });\n      });\n\n    return () => {\n      isMounted = false;\n      if (mapbox) {\n        mountedMapsContext?.onMapUnmount(props.id);\n        if (props.reuseMaps) {\n          mapbox.recycle();\n        } else {\n          mapbox.destroy();\n        }\n      }\n    };\n  }, []);\n\n  useIsomorphicLayoutEffect(() => {\n    if (mapInstance) {\n      mapInstance.setProps(props);\n    }\n  });\n\n  useImperativeHandle(ref, () => contextValue.map, [mapInstance]);\n\n  const style: CSSProperties = useMemo(\n    () => ({\n      position: 'relative',\n      width: '100%',\n      height: '100%',\n      ...props.style\n    }),\n    [props.style]\n  );\n\n  return (\n    <div id={props.id} ref={containerRef} style={style}>\n      {mapInstance && (\n        <MapContext.Provider value={contextValue}>{props.children}</MapContext.Provider>\n      )}\n    </div>\n  );\n});\n\nMap.displayName = 'Map';\nMap.defaultProps = defaultProps;\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}