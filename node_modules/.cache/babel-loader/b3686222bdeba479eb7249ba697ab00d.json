{"ast":null,"code":"var _excluded = [\"as\", \"onSelect\", \"activeKey\", \"role\", \"onKeyDown\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport qsa from 'dom-helpers/querySelectorAll';\nimport * as React from 'react';\nimport { useContext, useEffect, useRef } from 'react';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport TabContext from './TabContext';\nimport { dataAttr, dataProp } from './DataKey';\nimport NavItem from './NavItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\"; // eslint-disable-next-line @typescript-eslint/no-empty-function\n\nvar noop = function noop() {};\n\nvar EVENT_KEY_ATTR = dataAttr('event-key');\nvar Nav = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      onSelect = _ref.onSelect,\n      activeKey = _ref.activeKey,\n      role = _ref.role,\n      onKeyDown = _ref.onKeyDown,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded); // A ref and forceUpdate for refocus, b/c we only want to trigger when needed\n  // and don't want to reset the set in the effect\n\n\n  var forceUpdate = useForceUpdate();\n  var needsRefocusRef = useRef(false);\n  var parentOnSelect = useContext(SelectableContext);\n  var tabContext = useContext(TabContext);\n  var getControlledId, getControllerId;\n\n  if (tabContext) {\n    role = role || 'tablist';\n    activeKey = tabContext.activeKey; // TODO: do we need to duplicate these?\n\n    getControlledId = tabContext.getControlledId;\n    getControllerId = tabContext.getControllerId;\n  }\n\n  var listNode = useRef(null);\n\n  var getNextActiveTab = function getNextActiveTab(offset) {\n    var currentListNode = listNode.current;\n    if (!currentListNode) return null;\n    var items = qsa(currentListNode, \"[\".concat(EVENT_KEY_ATTR, \"]:not([aria-disabled=true])\"));\n    var activeChild = currentListNode.querySelector('[aria-selected=true]');\n    if (!activeChild || activeChild !== document.activeElement) return null;\n    var index = items.indexOf(activeChild);\n    if (index === -1) return null;\n    var nextIndex = index + offset;\n    if (nextIndex >= items.length) nextIndex = 0;\n    if (nextIndex < 0) nextIndex = items.length - 1;\n    return items[nextIndex];\n  };\n\n  var handleSelect = function handleSelect(key, event) {\n    if (key == null) return;\n    onSelect == null ? void 0 : onSelect(key, event);\n    parentOnSelect == null ? void 0 : parentOnSelect(key, event);\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    onKeyDown == null ? void 0 : onKeyDown(event);\n\n    if (!tabContext) {\n      return;\n    }\n\n    var nextActiveChild;\n\n    switch (event.key) {\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        nextActiveChild = getNextActiveTab(-1);\n        break;\n\n      case 'ArrowRight':\n      case 'ArrowDown':\n        nextActiveChild = getNextActiveTab(1);\n        break;\n\n      default:\n        return;\n    }\n\n    if (!nextActiveChild) return;\n    event.preventDefault();\n    handleSelect(nextActiveChild.dataset[dataProp('EventKey')] || null, event);\n    needsRefocusRef.current = true;\n    forceUpdate();\n  };\n\n  useEffect(function () {\n    if (listNode.current && needsRefocusRef.current) {\n      var activeChild = listNode.current.querySelector(\"[\".concat(EVENT_KEY_ATTR, \"][aria-selected=true]\"));\n      activeChild == null ? void 0 : activeChild.focus();\n    }\n\n    needsRefocusRef.current = false;\n  });\n  var mergedRef = useMergedRefs(ref, listNode);\n  return /*#__PURE__*/_jsx(SelectableContext.Provider, {\n    value: handleSelect,\n    children: /*#__PURE__*/_jsx(NavContext.Provider, {\n      value: {\n        role: role,\n        // used by NavLink to determine it's role\n        activeKey: makeEventKey(activeKey),\n        getControlledId: getControlledId || noop,\n        getControllerId: getControllerId || noop\n      },\n      children: /*#__PURE__*/_jsx(Component, Object.assign({}, props, {\n        onKeyDown: handleKeyDown,\n        ref: mergedRef,\n        role: role\n      }))\n    })\n  });\n});\nNav.displayName = 'Nav';\nexport default Object.assign(Nav, {\n  Item: NavItem\n});","map":{"version":3,"sources":["C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@restart/ui/esm/Nav.js"],"names":["_excluded","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","length","indexOf","qsa","React","useContext","useEffect","useRef","useForceUpdate","useMergedRefs","NavContext","SelectableContext","makeEventKey","TabContext","dataAttr","dataProp","NavItem","jsx","_jsx","noop","EVENT_KEY_ATTR","Nav","forwardRef","_ref","ref","as","Component","onSelect","activeKey","role","onKeyDown","props","forceUpdate","needsRefocusRef","parentOnSelect","tabContext","getControlledId","getControllerId","listNode","getNextActiveTab","offset","currentListNode","current","items","activeChild","querySelector","document","activeElement","index","nextIndex","handleSelect","event","handleKeyDown","nextActiveChild","preventDefault","dataset","focus","mergedRef","Provider","value","children","assign","displayName","Item"],"mappings":"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","sourcesContent":["const _excluded = [\"as\", \"onSelect\", \"activeKey\", \"role\", \"onKeyDown\"];\r\n\r\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\r\n\r\nimport qsa from 'dom-helpers/querySelectorAll';\r\nimport * as React from 'react';\r\nimport { useContext, useEffect, useRef } from 'react';\r\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\r\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\r\nimport NavContext from './NavContext';\r\nimport SelectableContext, { makeEventKey } from './SelectableContext';\r\nimport TabContext from './TabContext';\r\nimport { dataAttr, dataProp } from './DataKey';\r\nimport NavItem from './NavItem';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-empty-function\r\nconst noop = () => {};\r\n\r\nconst EVENT_KEY_ATTR = dataAttr('event-key');\r\nconst Nav = /*#__PURE__*/React.forwardRef((_ref, ref) => {\r\n  let {\r\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\r\n    as: Component = 'div',\r\n    onSelect,\r\n    activeKey,\r\n    role,\r\n    onKeyDown\r\n  } = _ref,\r\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\r\n\r\n  // A ref and forceUpdate for refocus, b/c we only want to trigger when needed\r\n  // and don't want to reset the set in the effect\r\n  const forceUpdate = useForceUpdate();\r\n  const needsRefocusRef = useRef(false);\r\n  const parentOnSelect = useContext(SelectableContext);\r\n  const tabContext = useContext(TabContext);\r\n  let getControlledId, getControllerId;\r\n\r\n  if (tabContext) {\r\n    role = role || 'tablist';\r\n    activeKey = tabContext.activeKey; // TODO: do we need to duplicate these?\r\n\r\n    getControlledId = tabContext.getControlledId;\r\n    getControllerId = tabContext.getControllerId;\r\n  }\r\n\r\n  const listNode = useRef(null);\r\n\r\n  const getNextActiveTab = offset => {\r\n    const currentListNode = listNode.current;\r\n    if (!currentListNode) return null;\r\n    const items = qsa(currentListNode, `[${EVENT_KEY_ATTR}]:not([aria-disabled=true])`);\r\n    const activeChild = currentListNode.querySelector('[aria-selected=true]');\r\n    if (!activeChild || activeChild !== document.activeElement) return null;\r\n    const index = items.indexOf(activeChild);\r\n    if (index === -1) return null;\r\n    let nextIndex = index + offset;\r\n    if (nextIndex >= items.length) nextIndex = 0;\r\n    if (nextIndex < 0) nextIndex = items.length - 1;\r\n    return items[nextIndex];\r\n  };\r\n\r\n  const handleSelect = (key, event) => {\r\n    if (key == null) return;\r\n    onSelect == null ? void 0 : onSelect(key, event);\r\n    parentOnSelect == null ? void 0 : parentOnSelect(key, event);\r\n  };\r\n\r\n  const handleKeyDown = event => {\r\n    onKeyDown == null ? void 0 : onKeyDown(event);\r\n\r\n    if (!tabContext) {\r\n      return;\r\n    }\r\n\r\n    let nextActiveChild;\r\n\r\n    switch (event.key) {\r\n      case 'ArrowLeft':\r\n      case 'ArrowUp':\r\n        nextActiveChild = getNextActiveTab(-1);\r\n        break;\r\n\r\n      case 'ArrowRight':\r\n      case 'ArrowDown':\r\n        nextActiveChild = getNextActiveTab(1);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n\r\n    if (!nextActiveChild) return;\r\n    event.preventDefault();\r\n    handleSelect(nextActiveChild.dataset[dataProp('EventKey')] || null, event);\r\n    needsRefocusRef.current = true;\r\n    forceUpdate();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (listNode.current && needsRefocusRef.current) {\r\n      const activeChild = listNode.current.querySelector(`[${EVENT_KEY_ATTR}][aria-selected=true]`);\r\n      activeChild == null ? void 0 : activeChild.focus();\r\n    }\r\n\r\n    needsRefocusRef.current = false;\r\n  });\r\n  const mergedRef = useMergedRefs(ref, listNode);\r\n  return /*#__PURE__*/_jsx(SelectableContext.Provider, {\r\n    value: handleSelect,\r\n    children: /*#__PURE__*/_jsx(NavContext.Provider, {\r\n      value: {\r\n        role,\r\n        // used by NavLink to determine it's role\r\n        activeKey: makeEventKey(activeKey),\r\n        getControlledId: getControlledId || noop,\r\n        getControllerId: getControllerId || noop\r\n      },\r\n      children: /*#__PURE__*/_jsx(Component, Object.assign({}, props, {\r\n        onKeyDown: handleKeyDown,\r\n        ref: mergedRef,\r\n        role: role\r\n      }))\r\n    })\r\n  });\r\n});\r\nNav.displayName = 'Nav';\r\nexport default Object.assign(Nav, {\r\n  Item: NavItem\r\n});"]},"metadata":{},"sourceType":"module"}