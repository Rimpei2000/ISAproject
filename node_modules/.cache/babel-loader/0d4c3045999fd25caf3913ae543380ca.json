{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  column: false,\n  visuallyHidden: false\n};\nconst FormLabel = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'label',\n    bsPrefix,\n    column,\n    visuallyHidden,\n    className,\n    htmlFor,\n    ...props\n  } = _ref;\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nFormLabel.defaultProps = defaultProps;\nexport default FormLabel;","map":{"version":3,"sources":["/Users/rim.sh/Desktop/ISAproject/node_modules/react-bootstrap/esm/FormLabel.js"],"names":["classNames","React","useContext","warning","Col","FormContext","useBootstrapPrefix","jsx","_jsx","defaultProps","column","visuallyHidden","FormLabel","forwardRef","ref","as","Component","bsPrefix","className","htmlFor","props","controlId","columnClass","classes","process","env","NODE_ENV","displayName"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,KADW;AAEnBC,EAAAA,cAAc,EAAE;AAFG,CAArB;AAIA,MAAMC,SAAS,GAAG,aAAaX,KAAK,CAACY,UAAN,CAAiB,OAS7CC,GAT6C,KASrC;AAAA,MATsC;AAC/C;AACAC,IAAAA,EAAE,EAAEC,SAAS,GAAG,OAF+B;AAG/CC,IAAAA,QAH+C;AAI/CP,IAAAA,MAJ+C;AAK/CC,IAAAA,cAL+C;AAM/CO,IAAAA,SAN+C;AAO/CC,IAAAA,OAP+C;AAQ/C,OAAGC;AAR4C,GAStC;AACT,QAAM;AACJC,IAAAA;AADI,MAEFnB,UAAU,CAACG,WAAD,CAFd;AAGAY,EAAAA,QAAQ,GAAGX,kBAAkB,CAACW,QAAD,EAAW,YAAX,CAA7B;AACA,MAAIK,WAAW,GAAG,gBAAlB;AACA,MAAI,OAAOZ,MAAP,KAAkB,QAAtB,EAAgCY,WAAW,GAAI,GAAEA,WAAY,IAAGA,WAAY,IAAGZ,MAAO,EAAtD;AAChC,QAAMa,OAAO,GAAGvB,UAAU,CAACkB,SAAD,EAAYD,QAAZ,EAAsBN,cAAc,IAAI,iBAAxC,EAA2DD,MAAM,IAAIY,WAArE,CAA1B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCvB,OAAO,CAACkB,SAAS,IAAI,IAAb,IAAqB,CAACF,OAAvB,EAAgC,sEAAhC,CAA/C,GAAyJ,KAAK,CAA9J;AACAA,EAAAA,OAAO,GAAGA,OAAO,IAAIE,SAArB;AACA,MAAIX,MAAJ,EAAY,OAAO,aAAaF,IAAI,CAACJ,GAAD,EAAM;AACxCU,IAAAA,GAAG,EAAEA,GADmC;AAExCC,IAAAA,EAAE,EAAE,OAFoC;AAGxCG,IAAAA,SAAS,EAAEK,OAH6B;AAIxCJ,IAAAA,OAAO,EAAEA,OAJ+B;AAKxC,OAAGC;AALqC,GAAN,CAAxB;AAOZ;AACE;AACA;AACAZ,IAAAA,IAAI,CAACQ,SAAD,EAAY;AACdF,MAAAA,GAAG,EAAEA,GADS;AAEdI,MAAAA,SAAS,EAAEK,OAFG;AAGdJ,MAAAA,OAAO,EAAEA,OAHK;AAId,SAAGC;AAJW,KAAZ;AAHN;AAUD,CApC8B,CAA/B;AAqCAR,SAAS,CAACe,WAAV,GAAwB,WAAxB;AACAf,SAAS,CAACH,YAAV,GAAyBA,YAAzB;AACA,eAAeG,SAAf","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  column: false,\n  visuallyHidden: false\n};\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column,\n  visuallyHidden,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nFormLabel.defaultProps = defaultProps;\nexport default FormLabel;"]},"metadata":{},"sourceType":"module"}