{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Dropdown from './Dropdown';\nimport NavLink from './NavLink';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst NavDropdown = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    id,\n    title,\n    children,\n    bsPrefix,\n    className,\n    rootCloseEvent,\n    menuRole,\n    disabled,\n    active,\n    renderMenuOnMount,\n    menuVariant,\n    ...props\n  } = _ref;\n\n  /* NavItem has no additional logic, it's purely presentational. Can set nav item class here to support \"as\" */\n  const navItemPrefix = useBootstrapPrefix(undefined, 'nav-item');\n  return /*#__PURE__*/_jsxs(Dropdown, {\n    ref: ref,\n    ...props,\n    className: classNames(className, navItemPrefix),\n    children: [/*#__PURE__*/_jsx(Dropdown.Toggle, {\n      id: id,\n      eventKey: null,\n      active: active,\n      disabled: disabled,\n      childBsPrefix: bsPrefix,\n      as: NavLink,\n      children: title\n    }), /*#__PURE__*/_jsx(Dropdown.Menu, {\n      role: menuRole,\n      renderOnMount: renderMenuOnMount,\n      rootCloseEvent: rootCloseEvent,\n      variant: menuVariant,\n      children: children\n    })]\n  });\n});\nNavDropdown.displayName = 'NavDropdown';\nexport default Object.assign(NavDropdown, {\n  Item: Dropdown.Item,\n  ItemText: Dropdown.ItemText,\n  Divider: Dropdown.Divider,\n  Header: Dropdown.Header\n});","map":{"version":3,"sources":["C:/Users/bhupe/Downloads/Term 4/COMP4537/FinalMilestone/ISAproject/node_modules/react-bootstrap/esm/NavDropdown.js"],"names":["classNames","React","useBootstrapPrefix","Dropdown","NavLink","jsx","_jsx","jsxs","_jsxs","NavDropdown","forwardRef","ref","id","title","children","bsPrefix","className","rootCloseEvent","menuRole","disabled","active","renderMenuOnMount","menuVariant","props","navItemPrefix","undefined","Toggle","eventKey","childBsPrefix","as","Menu","role","renderOnMount","variant","displayName","Object","assign","Item","ItemText","Divider","Header"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,SAASC,IAAI,IAAIC,KAAjB,QAA8B,mBAA9B;AACA,MAAMC,WAAW,GAAG,aAAaR,KAAK,CAACS,UAAN,CAAiB,OAa/CC,GAb+C,KAavC;AAAA,MAbwC;AACjDC,IAAAA,EADiD;AAEjDC,IAAAA,KAFiD;AAGjDC,IAAAA,QAHiD;AAIjDC,IAAAA,QAJiD;AAKjDC,IAAAA,SALiD;AAMjDC,IAAAA,cANiD;AAOjDC,IAAAA,QAPiD;AAQjDC,IAAAA,QARiD;AASjDC,IAAAA,MATiD;AAUjDC,IAAAA,iBAViD;AAWjDC,IAAAA,WAXiD;AAYjD,OAAGC;AAZ8C,GAaxC;;AACT;AACA,QAAMC,aAAa,GAAGtB,kBAAkB,CAACuB,SAAD,EAAY,UAAZ,CAAxC;AACA,SAAO,aAAajB,KAAK,CAACL,QAAD,EAAW;AAClCQ,IAAAA,GAAG,EAAEA,GAD6B;AAElC,OAAGY,KAF+B;AAGlCP,IAAAA,SAAS,EAAEhB,UAAU,CAACgB,SAAD,EAAYQ,aAAZ,CAHa;AAIlCV,IAAAA,QAAQ,EAAE,CAAC,aAAaR,IAAI,CAACH,QAAQ,CAACuB,MAAV,EAAkB;AAC5Cd,MAAAA,EAAE,EAAEA,EADwC;AAE5Ce,MAAAA,QAAQ,EAAE,IAFkC;AAG5CP,MAAAA,MAAM,EAAEA,MAHoC;AAI5CD,MAAAA,QAAQ,EAAEA,QAJkC;AAK5CS,MAAAA,aAAa,EAAEb,QAL6B;AAM5Cc,MAAAA,EAAE,EAAEzB,OANwC;AAO5CU,MAAAA,QAAQ,EAAED;AAPkC,KAAlB,CAAlB,EAQN,aAAaP,IAAI,CAACH,QAAQ,CAAC2B,IAAV,EAAgB;AACnCC,MAAAA,IAAI,EAAEb,QAD6B;AAEnCc,MAAAA,aAAa,EAAEX,iBAFoB;AAGnCJ,MAAAA,cAAc,EAAEA,cAHmB;AAInCgB,MAAAA,OAAO,EAAEX,WAJ0B;AAKnCR,MAAAA,QAAQ,EAAEA;AALyB,KAAhB,CARX;AAJwB,GAAX,CAAzB;AAoBD,CApCgC,CAAjC;AAqCAL,WAAW,CAACyB,WAAZ,GAA0B,aAA1B;AACA,eAAeC,MAAM,CAACC,MAAP,CAAc3B,WAAd,EAA2B;AACxC4B,EAAAA,IAAI,EAAElC,QAAQ,CAACkC,IADyB;AAExCC,EAAAA,QAAQ,EAAEnC,QAAQ,CAACmC,QAFqB;AAGxCC,EAAAA,OAAO,EAAEpC,QAAQ,CAACoC,OAHsB;AAIxCC,EAAAA,MAAM,EAAErC,QAAQ,CAACqC;AAJuB,CAA3B,CAAf","sourcesContent":["import classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport { useBootstrapPrefix } from './ThemeProvider';\r\nimport Dropdown from './Dropdown';\r\nimport NavLink from './NavLink';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\r\nconst NavDropdown = /*#__PURE__*/React.forwardRef(({\r\n  id,\r\n  title,\r\n  children,\r\n  bsPrefix,\r\n  className,\r\n  rootCloseEvent,\r\n  menuRole,\r\n  disabled,\r\n  active,\r\n  renderMenuOnMount,\r\n  menuVariant,\r\n  ...props\r\n}, ref) => {\r\n  /* NavItem has no additional logic, it's purely presentational. Can set nav item class here to support \"as\" */\r\n  const navItemPrefix = useBootstrapPrefix(undefined, 'nav-item');\r\n  return /*#__PURE__*/_jsxs(Dropdown, {\r\n    ref: ref,\r\n    ...props,\r\n    className: classNames(className, navItemPrefix),\r\n    children: [/*#__PURE__*/_jsx(Dropdown.Toggle, {\r\n      id: id,\r\n      eventKey: null,\r\n      active: active,\r\n      disabled: disabled,\r\n      childBsPrefix: bsPrefix,\r\n      as: NavLink,\r\n      children: title\r\n    }), /*#__PURE__*/_jsx(Dropdown.Menu, {\r\n      role: menuRole,\r\n      renderOnMount: renderMenuOnMount,\r\n      rootCloseEvent: rootCloseEvent,\r\n      variant: menuVariant,\r\n      children: children\r\n    })]\r\n  });\r\n});\r\nNavDropdown.displayName = 'NavDropdown';\r\nexport default Object.assign(NavDropdown, {\r\n  Item: Dropdown.Item,\r\n  ItemText: Dropdown.ItemText,\r\n  Divider: Dropdown.Divider,\r\n  Header: Dropdown.Header\r\n});"]},"metadata":{},"sourceType":"module"}