{"ast":null,"code":"import _defineProperty from \"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"min\", \"now\", \"max\", \"label\", \"visuallyHidden\", \"striped\", \"animated\", \"className\", \"style\", \"variant\", \"bsPrefix\"],\n    _excluded2 = [\"isChild\"],\n    _excluded3 = [\"min\", \"now\", \"max\", \"label\", \"visuallyHidden\", \"striped\", \"animated\", \"bsPrefix\", \"variant\", \"className\", \"children\"];\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ROUND_PRECISION = 1000;\n/**\r\n * Validate that children, if any, are instances of `<ProgressBar>`.\r\n */\n\nfunction onlyProgressBar(props, propName, componentName) {\n  var children = props[propName];\n\n  if (!children) {\n    return null;\n  }\n\n  var error = null;\n  React.Children.forEach(children, function (child) {\n    if (error) {\n      return;\n    }\n    /**\r\n     * Compare types in a way that works with libraries that patch and proxy\r\n     * components like react-hot-loader.\r\n     *\r\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n\n    var element = /*#__PURE__*/_jsx(ProgressBar, {});\n\n    if (child.type === element.type) return;\n    var childType = child.type;\n    var childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(\"Children of \".concat(componentName, \" can contain only ProgressBar \") + \"components. Found \".concat(childIdentifier, \".\"));\n  });\n  return error;\n}\n\nvar defaultProps = {\n  min: 0,\n  max: 100,\n  animated: false,\n  isChild: false,\n  visuallyHidden: false,\n  striped: false\n};\n\nfunction getPercentage(now, min, max) {\n  var percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nfunction renderProgressBar(_ref, ref) {\n  var _classNames;\n\n  var min = _ref.min,\n      now = _ref.now,\n      max = _ref.max,\n      label = _ref.label,\n      visuallyHidden = _ref.visuallyHidden,\n      striped = _ref.striped,\n      animated = _ref.animated,\n      className = _ref.className,\n      style = _ref.style,\n      variant = _ref.variant,\n      bsPrefix = _ref.bsPrefix,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/_jsx(\"div\", _objectSpread(_objectSpread({\n    ref: ref\n  }, props), {}, {\n    role: \"progressbar\",\n    className: classNames(className, \"\".concat(bsPrefix, \"-bar\"), (_classNames = {}, _defineProperty(_classNames, \"bg-\".concat(variant), variant), _defineProperty(_classNames, \"\".concat(bsPrefix, \"-bar-animated\"), animated), _defineProperty(_classNames, \"\".concat(bsPrefix, \"-bar-striped\"), animated || striped), _classNames)),\n    style: _objectSpread({\n      width: \"\".concat(getPercentage(now, min, max), \"%\")\n    }, style),\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  }));\n}\n\nvar ProgressBar = /*#__PURE__*/React.forwardRef(function (_ref2, ref) {\n  var isChild = _ref2.isChild,\n      props = _objectWithoutProperties(_ref2, _excluded2);\n\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n\n  var min = props.min,\n      now = props.now,\n      max = props.max,\n      label = props.label,\n      visuallyHidden = props.visuallyHidden,\n      striped = props.striped,\n      animated = props.animated,\n      bsPrefix = props.bsPrefix,\n      variant = props.variant,\n      className = props.className,\n      children = props.children,\n      wrapperProps = _objectWithoutProperties(props, _excluded3);\n\n  return /*#__PURE__*/_jsx(\"div\", _objectSpread(_objectSpread({\n    ref: ref\n  }, wrapperProps), {}, {\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, function (child) {\n      return /*#__PURE__*/cloneElement(child, {\n        isChild: true\n      });\n    }) : renderProgressBar({\n      min: min,\n      now: now,\n      max: max,\n      label: label,\n      visuallyHidden: visuallyHidden,\n      striped: striped,\n      animated: animated,\n      bsPrefix: bsPrefix,\n      variant: variant\n    }, ref)\n  }));\n});\nProgressBar.displayName = 'ProgressBar';\nProgressBar.defaultProps = defaultProps;\nexport default ProgressBar;","map":{"version":3,"sources":["C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/react-bootstrap/esm/ProgressBar.js"],"names":["classNames","React","cloneElement","useBootstrapPrefix","map","jsx","_jsx","ROUND_PRECISION","onlyProgressBar","props","propName","componentName","children","error","Children","forEach","child","element","ProgressBar","type","childType","childIdentifier","isValidElement","displayName","name","Error","defaultProps","min","max","animated","isChild","visuallyHidden","striped","getPercentage","now","percentage","Math","round","renderProgressBar","ref","label","className","style","variant","bsPrefix","role","width","forwardRef","wrapperProps"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport { cloneElement } from 'react';\r\nimport { useBootstrapPrefix } from './ThemeProvider';\r\nimport { map } from './ElementChildren';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst ROUND_PRECISION = 1000;\r\n/**\r\n * Validate that children, if any, are instances of `<ProgressBar>`.\r\n */\r\n\r\nfunction onlyProgressBar(props, propName, componentName) {\r\n  const children = props[propName];\r\n\r\n  if (!children) {\r\n    return null;\r\n  }\r\n\r\n  let error = null;\r\n  React.Children.forEach(children, child => {\r\n    if (error) {\r\n      return;\r\n    }\r\n    /**\r\n     * Compare types in a way that works with libraries that patch and proxy\r\n     * components like react-hot-loader.\r\n     *\r\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n\r\n\r\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\r\n\r\n    if (child.type === element.type) return;\r\n    const childType = child.type;\r\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\r\n    error = new Error(`Children of ${componentName} can contain only ProgressBar ` + `components. Found ${childIdentifier}.`);\r\n  });\r\n  return error;\r\n}\r\n\r\nconst defaultProps = {\r\n  min: 0,\r\n  max: 100,\r\n  animated: false,\r\n  isChild: false,\r\n  visuallyHidden: false,\r\n  striped: false\r\n};\r\n\r\nfunction getPercentage(now, min, max) {\r\n  const percentage = (now - min) / (max - min) * 100;\r\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\r\n}\r\n\r\nfunction renderProgressBar({\r\n  min,\r\n  now,\r\n  max,\r\n  label,\r\n  visuallyHidden,\r\n  striped,\r\n  animated,\r\n  className,\r\n  style,\r\n  variant,\r\n  bsPrefix,\r\n  ...props\r\n}, ref) {\r\n  return /*#__PURE__*/_jsx(\"div\", {\r\n    ref: ref,\r\n    ...props,\r\n    role: \"progressbar\",\r\n    className: classNames(className, `${bsPrefix}-bar`, {\r\n      [`bg-${variant}`]: variant,\r\n      [`${bsPrefix}-bar-animated`]: animated,\r\n      [`${bsPrefix}-bar-striped`]: animated || striped\r\n    }),\r\n    style: {\r\n      width: `${getPercentage(now, min, max)}%`,\r\n      ...style\r\n    },\r\n    \"aria-valuenow\": now,\r\n    \"aria-valuemin\": min,\r\n    \"aria-valuemax\": max,\r\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\r\n      className: \"visually-hidden\",\r\n      children: label\r\n    }) : label\r\n  });\r\n}\r\n\r\nconst ProgressBar = /*#__PURE__*/React.forwardRef(({\r\n  isChild,\r\n  ...props\r\n}, ref) => {\r\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\r\n\r\n  if (isChild) {\r\n    return renderProgressBar(props, ref);\r\n  }\r\n\r\n  const {\r\n    min,\r\n    now,\r\n    max,\r\n    label,\r\n    visuallyHidden,\r\n    striped,\r\n    animated,\r\n    bsPrefix,\r\n    variant,\r\n    className,\r\n    children,\r\n    ...wrapperProps\r\n  } = props;\r\n  return /*#__PURE__*/_jsx(\"div\", {\r\n    ref: ref,\r\n    ...wrapperProps,\r\n    className: classNames(className, bsPrefix),\r\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\r\n      isChild: true\r\n    })) : renderProgressBar({\r\n      min,\r\n      now,\r\n      max,\r\n      label,\r\n      visuallyHidden,\r\n      striped,\r\n      animated,\r\n      bsPrefix,\r\n      variant\r\n    }, ref)\r\n  });\r\n});\r\nProgressBar.displayName = 'ProgressBar';\r\nProgressBar.defaultProps = defaultProps;\r\nexport default ProgressBar;"]},"metadata":{},"sourceType":"module"}