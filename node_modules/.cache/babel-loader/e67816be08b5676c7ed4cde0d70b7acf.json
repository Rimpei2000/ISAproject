{"ast":null,"code":"/**\n * Capture a transform's current state\n * @param transform\n * @returns descriptor of the view state\n */\nexport function transformToViewState(tr) {\n  return {\n    longitude: tr.center.lng,\n    latitude: tr.center.lat,\n    zoom: tr.zoom,\n    pitch: tr.pitch,\n    bearing: tr.bearing,\n    padding: tr.padding\n  };\n}\n/* eslint-disable complexity */\n\n/**\n * Mutate a transform to match the given view state\n * @param transform\n * @param viewState\n * @returns true if the transform has changed\n */\n\nexport function applyViewStateToTransform(tr, props) {\n  var v = props.viewState || props;\n  var changed = false;\n\n  if ('longitude' in v && 'latitude' in v) {\n    var center = tr.center; // @ts-ignore\n\n    tr.center = new center.constructor(v.longitude, v.latitude);\n    changed = changed || center !== tr.center;\n  }\n\n  if ('zoom' in v) {\n    var zoom = tr.zoom;\n    tr.zoom = v.zoom;\n    changed = changed || zoom !== tr.zoom;\n  }\n\n  if ('bearing' in v) {\n    var bearing = tr.bearing;\n    tr.bearing = v.bearing;\n    changed = changed || bearing !== tr.bearing;\n  }\n\n  if ('pitch' in v) {\n    var pitch = tr.pitch;\n    tr.pitch = v.pitch;\n    changed = changed || pitch !== tr.pitch;\n  }\n\n  if (v.padding && !tr.isPaddingEqual(v.padding)) {\n    changed = true;\n    tr.padding = v.padding;\n  }\n\n  return changed;\n}","map":{"version":3,"mappings":"AAGA;;;;;AAKA,OAAM,SAAUA,oBAAV,CAA+BC,EAA/B,EAA4C;AAChD,SAAO;AACLC,aAAS,EAAED,EAAE,CAACE,MAAH,CAAUC,GADhB;AAELC,YAAQ,EAAEJ,EAAE,CAACE,MAAH,CAAUG,GAFf;AAGLC,QAAI,EAAEN,EAAE,CAACM,IAHJ;AAILC,SAAK,EAAEP,EAAE,CAACO,KAJL;AAKLC,WAAO,EAAER,EAAE,CAACQ,OALP;AAMLC,WAAO,EAAET,EAAE,CAACS;AANP,GAAP;AAQD;AAED;;AACA;;;;;;;AAMA,OAAM,SAAUC,yBAAV,CAAoCV,EAApC,EAAmDW,KAAnD,EAAqE;AACzE,MAAMC,CAAC,GAAuBD,KAAK,CAACE,SAAN,IAAmBF,KAAjD;AACA,MAAIG,OAAO,GAAG,KAAd;;AAEA,MAAI,eAAeF,CAAf,IAAoB,cAAcA,CAAtC,EAAyC;AACvC,QAAMV,MAAM,GAAGF,EAAE,CAACE,MAAlB,CADuC,CAEvC;;AACAF,MAAE,CAACE,MAAH,GAAY,IAAIA,MAAM,CAACa,WAAX,CAAuBH,CAAC,CAACX,SAAzB,EAAoCW,CAAC,CAACR,QAAtC,CAAZ;AACAU,WAAO,GAAGA,OAAO,IAAIZ,MAAM,KAAKF,EAAE,CAACE,MAAnC;AACD;;AACD,MAAI,UAAUU,CAAd,EAAiB;AACf,QAAMN,IAAI,GAAGN,EAAE,CAACM,IAAhB;AACAN,MAAE,CAACM,IAAH,GAAUM,CAAC,CAACN,IAAZ;AACAQ,WAAO,GAAGA,OAAO,IAAIR,IAAI,KAAKN,EAAE,CAACM,IAAjC;AACD;;AACD,MAAI,aAAaM,CAAjB,EAAoB;AAClB,QAAMJ,OAAO,GAAGR,EAAE,CAACQ,OAAnB;AACAR,MAAE,CAACQ,OAAH,GAAaI,CAAC,CAACJ,OAAf;AACAM,WAAO,GAAGA,OAAO,IAAIN,OAAO,KAAKR,EAAE,CAACQ,OAApC;AACD;;AACD,MAAI,WAAWI,CAAf,EAAkB;AAChB,QAAML,KAAK,GAAGP,EAAE,CAACO,KAAjB;AACAP,MAAE,CAACO,KAAH,GAAWK,CAAC,CAACL,KAAb;AACAO,WAAO,GAAGA,OAAO,IAAIP,KAAK,KAAKP,EAAE,CAACO,KAAlC;AACD;;AACD,MAAIK,CAAC,CAACH,OAAF,IAAa,CAACT,EAAE,CAACgB,cAAH,CAAkBJ,CAAC,CAACH,OAApB,CAAlB,EAAgD;AAC9CK,WAAO,GAAG,IAAV;AACAd,MAAE,CAACS,OAAH,GAAaG,CAAC,CAACH,OAAf;AACD;;AACD,SAAOK,OAAP;AACD","names":["transformToViewState","tr","longitude","center","lng","latitude","lat","zoom","pitch","bearing","padding","applyViewStateToTransform","props","v","viewState","changed","constructor","isPaddingEqual"],"sources":["C:\\Users\\bhupe\\Downloads\\Term 4\\COMP4537\\MilestoneFinal\\ISAproject\\node_modules\\react-map-gl\\src\\utils\\transform.ts"],"sourcesContent":["import type {MapboxProps} from '../mapbox/mapbox';\nimport type {Transform, ViewState} from '../types';\n\n/**\n * Capture a transform's current state\n * @param transform\n * @returns descriptor of the view state\n */\nexport function transformToViewState(tr: Transform): ViewState {\n  return {\n    longitude: tr.center.lng,\n    latitude: tr.center.lat,\n    zoom: tr.zoom,\n    pitch: tr.pitch,\n    bearing: tr.bearing,\n    padding: tr.padding\n  };\n}\n\n/* eslint-disable complexity */\n/**\n * Mutate a transform to match the given view state\n * @param transform\n * @param viewState\n * @returns true if the transform has changed\n */\nexport function applyViewStateToTransform(tr: Transform, props: MapboxProps): boolean {\n  const v: Partial<ViewState> = props.viewState || props;\n  let changed = false;\n\n  if ('longitude' in v && 'latitude' in v) {\n    const center = tr.center;\n    // @ts-ignore\n    tr.center = new center.constructor(v.longitude, v.latitude);\n    changed = changed || center !== tr.center;\n  }\n  if ('zoom' in v) {\n    const zoom = tr.zoom;\n    tr.zoom = v.zoom;\n    changed = changed || zoom !== tr.zoom;\n  }\n  if ('bearing' in v) {\n    const bearing = tr.bearing;\n    tr.bearing = v.bearing;\n    changed = changed || bearing !== tr.bearing;\n  }\n  if ('pitch' in v) {\n    const pitch = tr.pitch;\n    tr.pitch = v.pitch;\n    changed = changed || pitch !== tr.pitch;\n  }\n  if (v.padding && !tr.isPaddingEqual(v.padding)) {\n    changed = true;\n    tr.padding = v.padding;\n  }\n  return changed;\n}\n"]},"metadata":{},"sourceType":"module"}