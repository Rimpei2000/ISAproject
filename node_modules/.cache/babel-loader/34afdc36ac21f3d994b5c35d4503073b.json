{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhupe\\\\Downloads\\\\Term 4\\\\COMP4537\\\\MilestoneFinal\\\\ISAproject\\\\src\\\\Components\\\\weather\\\\Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./weatherStyles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Weather() {\n  _s();\n\n  const api = {\n    key: \"bfee40a57b03b378c6f6fc873967f983\",\n    url: \"https://api.openweathermap.org/data/2.5/\"\n  };\n  const [weather, setWeather] = useState({});\n\n  const search = () => {\n    fetch(`${api.url}weather?q=${\"vancouver\"}&appid=${api.key}&units=metric`).then(res => res.json()).then(result => {\n      if (result != null) {\n        setWeather({\n          temperature: Math.round(result.main.temp),\n          condition: result.weather[0].main,\n          name: result.name,\n          country: result.sys.country\n        });\n      }\n    });\n  };\n\n  let checkActivities = () => {\n    if (weather.condition == \"Clear\") {\n      return \"Suggested : Parks\";\n    } else {\n      return \"Suggested: Heritage Buildings\";\n    } // return eventSuggestions;\n\n  };\n\n  const getTodaysDate = d => {\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    const days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n    var day = days[d.getDay()];\n    var date = d.getDate();\n    var month = months[d.getMonth()];\n    var year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  useEffect(() => {\n    search();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [console.log(weather.length), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"temp\",\n              children: [weather.temperature, \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"condition\",\n              children: weather.condition\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"city\",\n              children: [weather.name, \", \", weather.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date\",\n              children: getTodaysDate(new Date())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temp\",\n            id: \"tempActivities\",\n            children: checkActivities()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Weather, \"p44c62psaVm/fTquZwTezXTodIU=\");\n\n_c = Weather;\nexport default Weather; //\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/src/Components/weather/Weather.js"],"names":["React","useEffect","useState","Weather","api","key","url","weather","setWeather","search","fetch","then","res","json","result","temperature","Math","round","main","temp","condition","name","country","sys","checkActivities","getTodaysDate","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","console","log","length","Date"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./weatherStyles.css\";\r\n\r\nfunction Weather() {\r\n  const api = {\r\n    key: \"bfee40a57b03b378c6f6fc873967f983\",\r\n    url: \"https://api.openweathermap.org/data/2.5/\",\r\n  };\r\n  const [weather, setWeather] = useState({});\r\n\r\n  const search = () => {\r\n    fetch(`${api.url}weather?q=${\"vancouver\"}&appid=${api.key}&units=metric`)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        if (result != null) {\r\n          setWeather({\r\n            temperature: Math.round(result.main.temp),\r\n            condition: result.weather[0].main,\r\n            name: result.name,\r\n            country: result.sys.country,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  let checkActivities = () => {\r\n    if (weather.condition == \"Clear\") {\r\n      return \"Suggested : Parks\";\r\n    } else {\r\n      return \"Suggested: Heritage Buildings\";\r\n    }\r\n    // return eventSuggestions;\r\n  };\r\n\r\n  const getTodaysDate = (d) => {\r\n    const months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    const days = [\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n      \"Sunday\",\r\n    ];\r\n\r\n    var day = days[d.getDay()];\r\n    var date = d.getDate();\r\n    var month = months[d.getMonth()];\r\n    var year = d.getFullYear();\r\n\r\n    return `${day} ${date} ${month} ${year}`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    search();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <main>\r\n        <div>\r\n          {console.log(weather.length)}\r\n          <div className=\"weather-container\">\r\n            <div className=\"weather\">\r\n              <div className=\"temp\">{weather.temperature}Â°C</div>\r\n              <div className=\"condition\">{weather.condition}</div>\r\n              <div className=\"city\">\r\n                {weather.name}, {weather.country}\r\n              </div>\r\n              <br></br>\r\n              <div className=\"date\">{getTodaysDate(new Date())}</div>\r\n              <br></br>\r\n            </div>\r\n            <div className=\"temp\" id=\"tempActivities\">\r\n              {checkActivities()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weather;\r\n\r\n//\r\n"]},"metadata":{},"sourceType":"module"}