{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhupe\\\\Downloads\\\\Term 4\\\\COMP4537\\\\MilestoneFinal\\\\ISAproject\\\\src\\\\Components\\\\activities\\\\buildings.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Map, { Popup, Marker } from \"react-map-gl\";\nimport { Button } from \"react-bootstrap\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HeritageBuildings() {\n  _s();\n\n  const [geopins, setGeopins] = useState([]);\n  const [selectedBuilding, setSelectedBuilding] = useState(null);\n  const buildingMarkers = [];\n\n  const fetchHeritageBuildings = () => {\n    fetch(\"https://opendata.vancouver.ca/api/records/1.0/search/?dataset=heritage-sites&q=1\").then(res => res.json()).then(result => {\n      for (let key in result.records) {\n        for (let internalKey in result.records[key]) {\n          let objData = result.records[key][internalKey];\n\n          if (objData.geo_point_2d != undefined) {\n            buildingMarkers.push({\n              longitude: objData.geo_point_2d[1],\n              latitude: objData.geo_point_2d[0],\n              name: objData.buildingnamespecifics == \"N/A\" ? objData.category : objData.buildingnamespecifics,\n              id: objData.id\n            });\n            break;\n          }\n        }\n      }\n\n      setGeopins(buildingMarkers);\n    });\n  };\n\n  const addMarkers = () => {\n    return geopins.map(ithMarker => {\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        id: ithMarker.name,\n        latitude: ithMarker.latitude,\n        longitude: ithMarker.longitude,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: `markerButtonId-${ithMarker.id}`,\n          style: {\n            background: \"none\",\n            border: \"none\",\n            cursor: \"pointer\"\n          },\n          onClick: () => {\n            setSelectedBuilding(ithMarker);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              height: \"25px\"\n            },\n            src: \"./building.svg\",\n            alt: ithMarker.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, `markerButtonKey-${ithMarker.id}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, `marker-${ithMarker.id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  const addPopup = () => {\n    return geopins.map(ithMarker => {\n      return selectedBuilding && selectedBuilding.id == ithMarker.id ? /*#__PURE__*/_jsxDEV(Popup, {\n        id: ithMarker.id,\n        latitude: ithMarker.latitude,\n        longitude: ithMarker.longitude,\n        offsetTop: -30,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: ithMarker.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-secondary\",\n            onClick: () => {\n              Axios.post(\"http://localhost:3022/API/v1/AddFav\", {\n                username: window.localStorage.getItem(\"username\"),\n                favName: ithMarker.name,\n                favCat: \"Heritage Buildings\",\n                lat: ithMarker.latitude,\n                lng: ithMarker.longitude\n              });\n              window.alert(\"Added\");\n            },\n            children: \"Add to favourites\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, `popup-${ithMarker.id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this) : null;\n    });\n  };\n\n  useEffect(() => {\n    fetchHeritageBuildings();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Map, {\n    initialViewState: {\n      longitude: -123.19258095208848,\n      latitude: 49.25901995475811,\n      zoom: 11\n    },\n    style: {\n      width: \"80vw\",\n      height: \"80vh\",\n      fog: {\n        range: [-0.5, 3],\n        color: \"white\",\n        \"horizon-blend\": 0.1\n      }\n    },\n    mapStyle: \"mapbox://styles/mapbox/streets-v9\",\n    mapboxAccessToken: \"pk.eyJ1IjoiYmh1cGVzaGQiLCJhIjoiY2wxNXN1ZWVwMGoxNTNjcDhkZHh5Z2NsaCJ9.G67FI-pS8DZRWCX5Nt1vrA\",\n    children: [addMarkers(), addPopup()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n} // <div\n//         style={{\n//           position: \"absolute\",\n//           top: \"10px\",\n//           left: \"10px\",\n//           zIndex: \"1\",\n//         }}\n//       >\n//         <h1>Something to be displayed</h1>\n//       </div>\n\n_s(HeritageBuildings, \"aBG6U4kMCnASAnHOLW9ajyUFEGs=\");\n\n_c = HeritageBuildings;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeritageBuildings\");","map":{"version":3,"sources":["C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/src/Components/activities/buildings.js"],"names":["useState","useEffect","Map","Popup","Marker","Button","Axios","HeritageBuildings","geopins","setGeopins","selectedBuilding","setSelectedBuilding","buildingMarkers","fetchHeritageBuildings","fetch","then","res","json","result","key","records","internalKey","objData","geo_point_2d","undefined","push","longitude","latitude","name","buildingnamespecifics","category","id","addMarkers","map","ithMarker","background","border","cursor","height","addPopup","post","username","window","localStorage","getItem","favName","favCat","lat","lng","alert","zoom","width","fog","range","color"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,GAAP,IAAcC,KAAd,EAAqBC,MAArB,QAAmC,cAAnC;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,iBAAT,GAA6B;AAAA;;AAC1C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,gBAAD,EAAmBC,mBAAnB,IAA0CX,QAAQ,CAAC,IAAD,CAAxD;AACA,QAAMY,eAAe,GAAG,EAAxB;;AAEA,QAAMC,sBAAsB,GAAG,MAAM;AACnCC,IAAAA,KAAK,CACH,kFADG,CAAL,CAGGC,IAHH,CAGSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAHjB,EAIGF,IAJH,CAISG,MAAD,IAAY;AAChB,WAAK,IAAIC,GAAT,IAAgBD,MAAM,CAACE,OAAvB,EAAgC;AAC9B,aAAK,IAAIC,WAAT,IAAwBH,MAAM,CAACE,OAAP,CAAeD,GAAf,CAAxB,EAA6C;AAC3C,cAAIG,OAAO,GAAGJ,MAAM,CAACE,OAAP,CAAeD,GAAf,EAAoBE,WAApB,CAAd;;AACA,cAAIC,OAAO,CAACC,YAAR,IAAwBC,SAA5B,EAAuC;AACrCZ,YAAAA,eAAe,CAACa,IAAhB,CAAqB;AACnBC,cAAAA,SAAS,EAAEJ,OAAO,CAACC,YAAR,CAAqB,CAArB,CADQ;AAEnBI,cAAAA,QAAQ,EAAEL,OAAO,CAACC,YAAR,CAAqB,CAArB,CAFS;AAGnBK,cAAAA,IAAI,EACFN,OAAO,CAACO,qBAAR,IAAiC,KAAjC,GACIP,OAAO,CAACQ,QADZ,GAEIR,OAAO,CAACO,qBANK;AAOnBE,cAAAA,EAAE,EAAET,OAAO,CAACS;AAPO,aAArB;AASA;AACD;AACF;AACF;;AACDtB,MAAAA,UAAU,CAACG,eAAD,CAAV;AACD,KAvBH;AAwBD,GAzBD;;AA2BA,QAAMoB,UAAU,GAAG,MAAM;AACvB,WAAOxB,OAAO,CAACyB,GAAR,CAAaC,SAAD,IAAe;AAChC,0BACE,QAAC,MAAD;AAEE,QAAA,EAAE,EAAEA,SAAS,CAACN,IAFhB;AAGE,QAAA,QAAQ,EAAEM,SAAS,CAACP,QAHtB;AAIE,QAAA,SAAS,EAAEO,SAAS,CAACR,SAJvB;AAAA,+BAME;AAEE,UAAA,EAAE,EAAG,kBAAiBQ,SAAS,CAACH,EAAG,EAFrC;AAGE,UAAA,KAAK,EAAE;AAAEI,YAAAA,UAAU,EAAE,MAAd;AAAsBC,YAAAA,MAAM,EAAE,MAA9B;AAAsCC,YAAAA,MAAM,EAAE;AAA9C,WAHT;AAIE,UAAA,OAAO,EAAE,MAAM;AACb1B,YAAAA,mBAAmB,CAACuB,SAAD,CAAnB;AACD,WANH;AAAA,iCAQE;AACE,YAAA,KAAK,EAAE;AAAEI,cAAAA,MAAM,EAAE;AAAV,aADT;AAEE,YAAA,GAAG,EAAC,gBAFN;AAGE,YAAA,GAAG,EAAEJ,SAAS,CAACN;AAHjB;AAAA;AAAA;AAAA;AAAA;AARF,WACQ,mBAAkBM,SAAS,CAACH,EAAG,EADvC;AAAA;AAAA;AAAA;AAAA;AANF,SACQ,UAASG,SAAS,CAACH,EAAG,EAD9B;AAAA;AAAA;AAAA;AAAA,cADF;AAuBD,KAxBM,CAAP;AAyBD,GA1BD;;AA4BA,QAAMQ,QAAQ,GAAG,MAAM;AACrB,WAAO/B,OAAO,CAACyB,GAAR,CAAaC,SAAD,IAAe;AAChC,aAAOxB,gBAAgB,IAAIA,gBAAgB,CAACqB,EAAjB,IAAuBG,SAAS,CAACH,EAArD,gBACL,QAAC,KAAD;AAEE,QAAA,EAAE,EAAEG,SAAS,CAACH,EAFhB;AAGE,QAAA,QAAQ,EAAEG,SAAS,CAACP,QAHtB;AAIE,QAAA,SAAS,EAAEO,SAAS,CAACR,SAJvB;AAKE,QAAA,SAAS,EAAE,CAAC,EALd;AAAA,+BAOE;AAAA,kCACE;AAAA,sBAAIQ,SAAS,CAACN;AAAd;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,mBADV;AAEE,YAAA,OAAO,EAAE,MAAM;AACbtB,cAAAA,KAAK,CAACkC,IAAN,CAAW,qCAAX,EAAkD;AAChDC,gBAAAA,QAAQ,EAAEC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,CADsC;AAEhDC,gBAAAA,OAAO,EAAEX,SAAS,CAACN,IAF6B;AAGhDkB,gBAAAA,MAAM,EAAE,oBAHwC;AAIhDC,gBAAAA,GAAG,EAAEb,SAAS,CAACP,QAJiC;AAKhDqB,gBAAAA,GAAG,EAAEd,SAAS,CAACR;AALiC,eAAlD;AAQAgB,cAAAA,MAAM,CAACO,KAAP,CAAa,OAAb;AACD,aAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF,SACQ,SAAQf,SAAS,CAACH,EAAG,EAD7B;AAAA;AAAA;AAAA;AAAA,cADK,GA4BH,IA5BJ;AA6BD,KA9BM,CAAP;AA+BD,GAhCD;;AAkCA9B,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,sBAAsB;AACvB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,GAAD;AACE,IAAA,gBAAgB,EAAE;AAChBa,MAAAA,SAAS,EAAE,CAAC,kBADI;AAEhBC,MAAAA,QAAQ,EAAE,iBAFM;AAGhBuB,MAAAA,IAAI,EAAE;AAHU,KADpB;AAME,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,MADF;AAELb,MAAAA,MAAM,EAAE,MAFH;AAGLc,MAAAA,GAAG,EAAE;AACHC,QAAAA,KAAK,EAAE,CAAC,CAAC,GAAF,EAAO,CAAP,CADJ;AAEHC,QAAAA,KAAK,EAAE,OAFJ;AAGH,yBAAiB;AAHd;AAHA,KANT;AAeE,IAAA,QAAQ,EAAC,mCAfX;AAgBE,IAAA,iBAAiB,EAAC,4FAhBpB;AAAA,eAkBGtB,UAAU,EAlBb,EAmBGO,QAAQ,EAnBX;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GApIwBhC,iB;;KAAAA,iB","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Map, { Popup, Marker } from \"react-map-gl\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport Axios from \"axios\";\r\n\r\nexport default function HeritageBuildings() {\r\n  const [geopins, setGeopins] = useState([]);\r\n  const [selectedBuilding, setSelectedBuilding] = useState(null);\r\n  const buildingMarkers = [];\r\n\r\n  const fetchHeritageBuildings = () => {\r\n    fetch(\r\n      \"https://opendata.vancouver.ca/api/records/1.0/search/?dataset=heritage-sites&q=1\"\r\n    )\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        for (let key in result.records) {\r\n          for (let internalKey in result.records[key]) {\r\n            let objData = result.records[key][internalKey];\r\n            if (objData.geo_point_2d != undefined) {\r\n              buildingMarkers.push({\r\n                longitude: objData.geo_point_2d[1],\r\n                latitude: objData.geo_point_2d[0],\r\n                name:\r\n                  objData.buildingnamespecifics == \"N/A\"\r\n                    ? objData.category\r\n                    : objData.buildingnamespecifics,\r\n                id: objData.id,\r\n              });\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        setGeopins(buildingMarkers);\r\n      });\r\n  };\r\n\r\n  const addMarkers = () => {\r\n    return geopins.map((ithMarker) => {\r\n      return (\r\n        <Marker\r\n          key={`marker-${ithMarker.id}`}\r\n          id={ithMarker.name}\r\n          latitude={ithMarker.latitude}\r\n          longitude={ithMarker.longitude}\r\n        >\r\n          <button\r\n            key={`markerButtonKey-${ithMarker.id}`}\r\n            id={`markerButtonId-${ithMarker.id}`}\r\n            style={{ background: \"none\", border: \"none\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              setSelectedBuilding(ithMarker);\r\n            }}\r\n          >\r\n            <img\r\n              style={{ height: \"25px\" }}\r\n              src=\"./building.svg\"\r\n              alt={ithMarker.name}\r\n            />\r\n          </button>\r\n        </Marker>\r\n      );\r\n    });\r\n  };\r\n\r\n  const addPopup = () => {\r\n    return geopins.map((ithMarker) => {\r\n      return selectedBuilding && selectedBuilding.id == ithMarker.id ? (\r\n        <Popup\r\n          key={`popup-${ithMarker.id}`}\r\n          id={ithMarker.id}\r\n          latitude={ithMarker.latitude}\r\n          longitude={ithMarker.longitude}\r\n          offsetTop={-30}\r\n        >\r\n          <div>\r\n            <p>{ithMarker.name}</p>\r\n            <Button\r\n              variant=\"outline-secondary\"\r\n              onClick={() => {\r\n                Axios.post(\"http://localhost:3022/API/v1/AddFav\", {\r\n                  username: window.localStorage.getItem(\"username\"),\r\n                  favName: ithMarker.name,\r\n                  favCat: \"Heritage Buildings\",\r\n                  lat: ithMarker.latitude,\r\n                  lng: ithMarker.longitude,\r\n                });\r\n\r\n                window.alert(\"Added\");\r\n              }}\r\n            >\r\n              Add to favourites\r\n            </Button>\r\n          </div>\r\n        </Popup>\r\n      ) : null;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchHeritageBuildings();\r\n  }, []);\r\n\r\n  return (\r\n    <Map\r\n      initialViewState={{\r\n        longitude: -123.19258095208848,\r\n        latitude: 49.25901995475811,\r\n        zoom: 11,\r\n      }}\r\n      style={{\r\n        width: \"80vw\",\r\n        height: \"80vh\",\r\n        fog: {\r\n          range: [-0.5, 3],\r\n          color: \"white\",\r\n          \"horizon-blend\": 0.1,\r\n        },\r\n      }}\r\n      mapStyle=\"mapbox://styles/mapbox/streets-v9\"\r\n      mapboxAccessToken=\"pk.eyJ1IjoiYmh1cGVzaGQiLCJhIjoiY2wxNXN1ZWVwMGoxNTNjcDhkZHh5Z2NsaCJ9.G67FI-pS8DZRWCX5Nt1vrA\"\r\n    >\r\n      {addMarkers()}\r\n      {addPopup()}\r\n    </Map>\r\n  );\r\n}\r\n\r\n// <div\r\n//         style={{\r\n//           position: \"absolute\",\r\n//           top: \"10px\",\r\n//           left: \"10px\",\r\n//           zIndex: \"1\",\r\n//         }}\r\n//       >\r\n//         <h1>Something to be displayed</h1>\r\n//       </div>\r\n"]},"metadata":{},"sourceType":"module"}