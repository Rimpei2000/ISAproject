{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\bhupe\\\\Downloads\\\\Term 4\\\\COMP4537\\\\MilestoneFinal\\\\ISAproject\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{useState,useEffect}from\"react\";import Map,{Popup,Marker}from\"react-map-gl\";import Axios from\"axios\";import mapboxgl from\"mapbox-gl\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";mapboxgl.workerClass=require(\"worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker\").default;export default function Favourites(){mapboxgl.workerClass=require(\"worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker\").default;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),geopins=_useState2[0],setGeopins=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),selectedFavourites=_useState4[0],setSelectedFavourites=_useState4[1];var favouriteMarkers=[];var fetchFavourites=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:Axios.get(\"http://termproject.rshiratori.com/API/v1/GetFav\",{params:{username:window.localStorage.getItem(\"username\")}}).then(function(res){return res;}).then(function(result){console.log(result.data.rows);for(var key in result.data.rows){for(var internalKey in result.data.rows[key]){var objData=result.data.rows[key];favouriteMarkers.push({longitude:objData.fav_lng,latitude:objData.fav_lat,name:objData.fav_item_name,category:objData.fav_cat,image:objData.fav_cat==\"Parks\"?\"./parks.svg\":objData.fav_cat==\"Heritage Buildings\"?\"./building.svg\":\"./food.svg\"});break;}}setGeopins(favouriteMarkers);});case 1:case\"end\":return _context.stop();}}},_callee);}));return function fetchFavourites(){return _ref.apply(this,arguments);};}();var addMarkers=function addMarkers(){return geopins.map(function(ithMarker){return/*#__PURE__*/_jsx(Marker,{id:ithMarker.name,latitude:ithMarker.latitude,longitude:ithMarker.longitude,children:/*#__PURE__*/_jsx(\"button\",{id:\"markerButtonId-\".concat(ithMarker.id),style:{background:\"none\",border:\"none\",cursor:\"pointer\"},onClick:function onClick(){setSelectedFavourites(ithMarker);},children:/*#__PURE__*/_jsx(\"img\",{style:{height:\"25px\"},src:ithMarker.image,alt:ithMarker.name})},\"markerButtonKey-\".concat(ithMarker.latitude))},\"marker-\".concat(ithMarker.latitude));});};var addPopup=function addPopup(){return geopins.map(function(ithMarker){return selectedFavourites&&selectedFavourites.latitude==ithMarker.latitude?/*#__PURE__*/_jsx(Popup,{id:\"popup-\".concat(ithMarker.id),latitude:ithMarker.latitude,longitude:ithMarker.longitude,offsetTop:-30,children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:ithMarker.name}),/*#__PURE__*/_jsx(\"p\",{children:ithMarker.category})]})},\"popup-\".concat(ithMarker.latitude)):null;});};useEffect(function(){fetchFavourites();},[]);return/*#__PURE__*/_jsxs(Map,{initialViewState:{longitude:-123.19258095208848,latitude:49.25901995475811,zoom:11},style:{width:\"100vw\",height:\"100vh\",fog:{range:[-0.5,3],color:\"white\",\"horizon-blend\":0.1}},mapStyle:\"mapbox://styles/mapbox/streets-v9\",mapboxAccessToken:\"pk.eyJ1IjoiYmh1cGVzaGQiLCJhIjoiY2wxNXN1ZWVwMGoxNTNjcDhkZHh5Z2NsaCJ9.G67FI-pS8DZRWCX5Nt1vrA\",children:[addMarkers(),addPopup()]});}","map":{"version":3,"sources":["C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/src/Components/favourites/favourites.js"],"names":["useState","useEffect","Map","Popup","Marker","Axios","mapboxgl","workerClass","require","default","Favourites","geopins","setGeopins","selectedFavourites","setSelectedFavourites","favouriteMarkers","fetchFavourites","get","params","username","window","localStorage","getItem","then","res","result","console","log","data","rows","key","internalKey","objData","push","longitude","fav_lng","latitude","fav_lat","name","fav_item_name","category","fav_cat","image","addMarkers","map","ithMarker","id","background","border","cursor","height","addPopup","zoom","width","fog","range","color"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Map, { Popup, Marker } from \"react-map-gl\";\r\nimport Axios from \"axios\";\r\n\r\nimport mapboxgl from \"mapbox-gl\";\r\nmapboxgl.workerClass =\r\n  require(\"worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker\").default;\r\n\r\nexport default function Favourites() {\r\n  mapboxgl.workerClass =\r\n    require(\"worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker\").default;\r\n  const [geopins, setGeopins] = useState([]);\r\n  const [selectedFavourites, setSelectedFavourites] = useState(null);\r\n  const favouriteMarkers = [];\r\n\r\n  const fetchFavourites = async () => {\r\n    Axios.get(\"http://termproject.rshiratori.com/API/v1/GetFav\", {\r\n      params: { username: window.localStorage.getItem(\"username\") },\r\n    })\r\n      .then((res) => res)\r\n      .then((result) => {\r\n        console.log(result.data.rows);\r\n        for (let key in result.data.rows) {\r\n          for (let internalKey in result.data.rows[key]) {\r\n            let objData = result.data.rows[key];\r\n            favouriteMarkers.push({\r\n              longitude: objData.fav_lng,\r\n              latitude: objData.fav_lat,\r\n              name: objData.fav_item_name,\r\n              category: objData.fav_cat,\r\n              image:\r\n                objData.fav_cat == \"Parks\"\r\n                  ? `./parks.svg`\r\n                  : objData.fav_cat == \"Heritage Buildings\"\r\n                  ? `./building.svg`\r\n                  : `./food.svg`,\r\n            });\r\n            break;\r\n          }\r\n        }\r\n        setGeopins(favouriteMarkers);\r\n      });\r\n  };\r\n\r\n  const addMarkers = () => {\r\n    return geopins.map((ithMarker) => {\r\n      return (\r\n        <Marker\r\n          key={`marker-${ithMarker.latitude}`}\r\n          id={ithMarker.name}\r\n          latitude={ithMarker.latitude}\r\n          longitude={ithMarker.longitude}\r\n        >\r\n          <button\r\n            key={`markerButtonKey-${ithMarker.latitude}`}\r\n            id={`markerButtonId-${ithMarker.id}`}\r\n            style={{ background: \"none\", border: \"none\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              setSelectedFavourites(ithMarker);\r\n            }}\r\n          >\r\n            <img\r\n              style={{ height: \"25px\" }}\r\n              src={ithMarker.image}\r\n              alt={ithMarker.name}\r\n            />\r\n          </button>\r\n        </Marker>\r\n      );\r\n    });\r\n  };\r\n\r\n  const addPopup = () => {\r\n    return geopins.map((ithMarker) => {\r\n      return selectedFavourites &&\r\n        selectedFavourites.latitude == ithMarker.latitude ? (\r\n        <Popup\r\n          key={`popup-${ithMarker.latitude}`}\r\n          id={`popup-${ithMarker.id}`}\r\n          latitude={ithMarker.latitude}\r\n          longitude={ithMarker.longitude}\r\n          offsetTop={-30}\r\n        >\r\n          <div>\r\n            <p>{ithMarker.name}</p>\r\n            <p>{ithMarker.category}</p>\r\n          </div>\r\n        </Popup>\r\n      ) : null;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchFavourites();\r\n  }, []);\r\n\r\n  return (\r\n    <Map\r\n      initialViewState={{\r\n        longitude: -123.19258095208848,\r\n        latitude: 49.25901995475811,\r\n        zoom: 11,\r\n      }}\r\n      style={{\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n        fog: {\r\n          range: [-0.5, 3],\r\n          color: \"white\",\r\n          \"horizon-blend\": 0.1,\r\n        },\r\n      }}\r\n      mapStyle=\"mapbox://styles/mapbox/streets-v9\"\r\n      mapboxAccessToken=\"pk.eyJ1IjoiYmh1cGVzaGQiLCJhIjoiY2wxNXN1ZWVwMGoxNTNjcDhkZHh5Z2NsaCJ9.G67FI-pS8DZRWCX5Nt1vrA\"\r\n    >\r\n      {addMarkers()}\r\n      {addPopup()}\r\n    </Map>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}