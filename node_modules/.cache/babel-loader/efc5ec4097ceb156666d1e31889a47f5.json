{"ast":null,"code":"import _objectSpread from \"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"bsPrefix\", \"className\", \"children\", \"aspectRatio\", \"style\"];\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar defaultProps = {\n  aspectRatio: '1x1'\n};\n\nfunction toPercent(num) {\n  if (num <= 0 || num > 100) return '100%';\n  if (num < 1) return \"\".concat(num * 100, \"%\");\n  return \"\".concat(num, \"%\");\n}\n\nvar Ratio = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      aspectRatio = _ref.aspectRatio,\n      style = _ref.style,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'ratio');\n  var isCustomRatio = typeof aspectRatio === 'number';\n  return /*#__PURE__*/_jsx(\"div\", _objectSpread(_objectSpread({\n    ref: ref\n  }, props), {}, {\n    style: _objectSpread(_objectSpread({}, style), isCustomRatio && {\n      '--bs-aspect-ratio': toPercent(aspectRatio)\n    }),\n    className: classNames(bsPrefix, className, !isCustomRatio && \"\".concat(bsPrefix, \"-\").concat(aspectRatio)),\n    children: React.Children.only(children)\n  }));\n});\nRatio.defaultProps = defaultProps;\nexport default Ratio;","map":{"version":3,"sources":["C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/react-bootstrap/esm/Ratio.js"],"names":["classNames","React","useBootstrapPrefix","jsx","_jsx","defaultProps","aspectRatio","toPercent","num","Ratio","forwardRef","ref","bsPrefix","className","children","style","props","isCustomRatio","Children","only"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE;AADM,CAArB;;AAIA,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;AACtB,MAAIA,GAAG,IAAI,CAAP,IAAYA,GAAG,GAAG,GAAtB,EAA2B,OAAO,MAAP;AAC3B,MAAIA,GAAG,GAAG,CAAV,EAAa,iBAAUA,GAAG,GAAG,GAAhB;AACb,mBAAUA,GAAV;AACD;;AAED,IAAMC,KAAK,GAAG,aAAaR,KAAK,CAACS,UAAN,CAAiB,gBAOzCC,GAPyC,EAOjC;AAAA,MANTC,QAMS,QANTA,QAMS;AAAA,MALTC,SAKS,QALTA,SAKS;AAAA,MAJTC,QAIS,QAJTA,QAIS;AAAA,MAHTR,WAGS,QAHTA,WAGS;AAAA,MAFTS,KAES,QAFTA,KAES;AAAA,MADNC,KACM;;AACTJ,EAAAA,QAAQ,GAAGV,kBAAkB,CAACU,QAAD,EAAW,OAAX,CAA7B;AACA,MAAMK,aAAa,GAAG,OAAOX,WAAP,KAAuB,QAA7C;AACA,SAAO,aAAaF,IAAI,CAAC,KAAD;AACtBO,IAAAA,GAAG,EAAEA;AADiB,KAEnBK,KAFmB;AAGtBD,IAAAA,KAAK,kCAAOA,KAAP,GACCE,aAAa,IAAI;AACnB,2BAAqBV,SAAS,CAACD,WAAD;AADX,KADlB,CAHiB;AAQtBO,IAAAA,SAAS,EAAEb,UAAU,CAACY,QAAD,EAAWC,SAAX,EAAsB,CAACI,aAAD,cAAqBL,QAArB,cAAiCN,WAAjC,CAAtB,CARC;AAStBQ,IAAAA,QAAQ,EAAEb,KAAK,CAACiB,QAAN,CAAeC,IAAf,CAAoBL,QAApB;AATY,KAAxB;AAWD,CArB0B,CAA3B;AAsBAL,KAAK,CAACJ,YAAN,GAAqBA,YAArB;AACA,eAAeI,KAAf","sourcesContent":["import classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport { useBootstrapPrefix } from './ThemeProvider';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst defaultProps = {\r\n  aspectRatio: '1x1'\r\n};\r\n\r\nfunction toPercent(num) {\r\n  if (num <= 0 || num > 100) return '100%';\r\n  if (num < 1) return `${num * 100}%`;\r\n  return `${num}%`;\r\n}\r\n\r\nconst Ratio = /*#__PURE__*/React.forwardRef(({\r\n  bsPrefix,\r\n  className,\r\n  children,\r\n  aspectRatio,\r\n  style,\r\n  ...props\r\n}, ref) => {\r\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'ratio');\r\n  const isCustomRatio = typeof aspectRatio === 'number';\r\n  return /*#__PURE__*/_jsx(\"div\", {\r\n    ref: ref,\r\n    ...props,\r\n    style: { ...style,\r\n      ...(isCustomRatio && {\r\n        '--bs-aspect-ratio': toPercent(aspectRatio)\r\n      })\r\n    },\r\n    className: classNames(bsPrefix, className, !isCustomRatio && `${bsPrefix}-${aspectRatio}`),\r\n    children: React.Children.only(children)\r\n  });\r\n});\r\nRatio.defaultProps = defaultProps;\r\nexport default Ratio;"]},"metadata":{},"sourceType":"module"}