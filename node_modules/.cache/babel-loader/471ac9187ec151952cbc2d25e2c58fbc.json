{"ast":null,"code":"'use strict';\n\nvar utils = require('../utils');\n/**\r\n * Config-specific merge-function which creates a new config-object\r\n * by merging two configuration objects together.\r\n *\r\n * @param {Object} config1\r\n * @param {Object} config2\r\n * @returns {Object} New object resulting from merging config2 to config1\r\n */\n\n\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n\n    return source;\n  } // eslint-disable-next-line consistent-return\n\n\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  } // eslint-disable-next-line consistent-return\n\n\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  } // eslint-disable-next-line consistent-return\n\n\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  } // eslint-disable-next-line consistent-return\n\n\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    utils.isUndefined(configValue) && merge !== mergeDirectKeys || (config[prop] = configValue);\n  });\n  return config;\n};","map":{"version":3,"sources":["C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/axios/lib/core/mergeConfig.js"],"names":["utils","require","module","exports","mergeConfig","config1","config2","config","getMergedValue","target","source","isPlainObject","merge","isArray","slice","mergeDeepProperties","prop","isUndefined","undefined","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","forEach","Object","keys","concat","computeConfigValue","configValue"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nvar utils = require('../utils');\r\n\r\n/**\r\n * Config-specific merge-function which creates a new config-object\r\n * by merging two configuration objects together.\r\n *\r\n * @param {Object} config1\r\n * @param {Object} config2\r\n * @returns {Object} New object resulting from merging config2 to config1\r\n */\r\nmodule.exports = function mergeConfig(config1, config2) {\r\n  // eslint-disable-next-line no-param-reassign\r\n  config2 = config2 || {};\r\n  var config = {};\r\n\r\n  function getMergedValue(target, source) {\r\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\r\n      return utils.merge(target, source);\r\n    } else if (utils.isPlainObject(source)) {\r\n      return utils.merge({}, source);\r\n    } else if (utils.isArray(source)) {\r\n      return source.slice();\r\n    }\r\n    return source;\r\n  }\r\n\r\n  // eslint-disable-next-line consistent-return\r\n  function mergeDeepProperties(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      return getMergedValue(config1[prop], config2[prop]);\r\n    } else if (!utils.isUndefined(config1[prop])) {\r\n      return getMergedValue(undefined, config1[prop]);\r\n    }\r\n  }\r\n\r\n  // eslint-disable-next-line consistent-return\r\n  function valueFromConfig2(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      return getMergedValue(undefined, config2[prop]);\r\n    }\r\n  }\r\n\r\n  // eslint-disable-next-line consistent-return\r\n  function defaultToConfig2(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      return getMergedValue(undefined, config2[prop]);\r\n    } else if (!utils.isUndefined(config1[prop])) {\r\n      return getMergedValue(undefined, config1[prop]);\r\n    }\r\n  }\r\n\r\n  // eslint-disable-next-line consistent-return\r\n  function mergeDirectKeys(prop) {\r\n    if (prop in config2) {\r\n      return getMergedValue(config1[prop], config2[prop]);\r\n    } else if (prop in config1) {\r\n      return getMergedValue(undefined, config1[prop]);\r\n    }\r\n  }\r\n\r\n  var mergeMap = {\r\n    'url': valueFromConfig2,\r\n    'method': valueFromConfig2,\r\n    'data': valueFromConfig2,\r\n    'baseURL': defaultToConfig2,\r\n    'transformRequest': defaultToConfig2,\r\n    'transformResponse': defaultToConfig2,\r\n    'paramsSerializer': defaultToConfig2,\r\n    'timeout': defaultToConfig2,\r\n    'timeoutMessage': defaultToConfig2,\r\n    'withCredentials': defaultToConfig2,\r\n    'adapter': defaultToConfig2,\r\n    'responseType': defaultToConfig2,\r\n    'xsrfCookieName': defaultToConfig2,\r\n    'xsrfHeaderName': defaultToConfig2,\r\n    'onUploadProgress': defaultToConfig2,\r\n    'onDownloadProgress': defaultToConfig2,\r\n    'decompress': defaultToConfig2,\r\n    'maxContentLength': defaultToConfig2,\r\n    'maxBodyLength': defaultToConfig2,\r\n    'transport': defaultToConfig2,\r\n    'httpAgent': defaultToConfig2,\r\n    'httpsAgent': defaultToConfig2,\r\n    'cancelToken': defaultToConfig2,\r\n    'socketPath': defaultToConfig2,\r\n    'responseEncoding': defaultToConfig2,\r\n    'validateStatus': mergeDirectKeys\r\n  };\r\n\r\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\r\n    var merge = mergeMap[prop] || mergeDeepProperties;\r\n    var configValue = merge(prop);\r\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\r\n  });\r\n\r\n  return config;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}