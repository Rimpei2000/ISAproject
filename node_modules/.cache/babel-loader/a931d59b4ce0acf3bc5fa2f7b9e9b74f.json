{"ast":null,"code":"import _slicedToArray from\"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import\"./weatherStyles.css\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function Weather(){var api={key:\"bfee40a57b03b378c6f6fc873967f983\",url:\"https://api.openweathermap.org/data/2.5/\"};var _useState=useState({}),_useState2=_slicedToArray(_useState,2),weather=_useState2[0],setWeather=_useState2[1];var search=function search(){fetch(\"\".concat(api.url,\"weather?q=\",\"vancouver\",\"&appid=\").concat(api.key,\"&units=metric\")).then(function(res){return res.json();}).then(function(result){if(result!=null){setWeather({temperature:Math.round(result.main.temp),condition:result.weather[0].main,name:result.name,country:result.sys.country});}});};var checkActivities=function checkActivities(){if(weather.condition==\"Clear\"){return\"Suggested : Parks\";}else{return\"Suggested: Heritage Buildings\";}};var getTodaysDate=function getTodaysDate(d){var months=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];var days=[\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\",\"Sunday\"];var day=days[d.getDay()];var date=d.getDate();var month=months[d.getMonth()];var year=d.getFullYear();return\"\".concat(day,\" \").concat(date,\" \").concat(month,\" \").concat(year);};useEffect(function(){search();},[]);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"main\",{children:/*#__PURE__*/_jsxs(\"div\",{children:[console.log(weather.length),/*#__PURE__*/_jsxs(\"div\",{className:\"weather-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"weather\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"temp\",children:[weather.temperature,\"\\xB0C\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"condition\",children:weather.condition}),/*#__PURE__*/_jsxs(\"div\",{className:\"city\",children:[weather.name,\", \",weather.country]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"date\",children:getTodaysDate(new Date())}),/*#__PURE__*/_jsx(\"br\",{})]}),/*#__PURE__*/_jsx(\"div\",{className:\"checkActivities temp\",children:checkActivities()})]})]})})});}export default Weather;","map":{"version":3,"sources":["C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/src/Components/weather/Weather.js"],"names":["React","useEffect","useState","Weather","api","key","url","weather","setWeather","search","fetch","then","res","json","result","temperature","Math","round","main","temp","condition","name","country","sys","checkActivities","getTodaysDate","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","console","log","length","Date"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./weatherStyles.css\";\r\n\r\nfunction Weather() {\r\n  const api = {\r\n    key: \"bfee40a57b03b378c6f6fc873967f983\",\r\n    url: \"https://api.openweathermap.org/data/2.5/\",\r\n  };\r\n  const [weather, setWeather] = useState({});\r\n\r\n  const search = () => {\r\n    fetch(`${api.url}weather?q=${\"vancouver\"}&appid=${api.key}&units=metric`)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        if (result != null) {\r\n          setWeather({\r\n            temperature: Math.round(result.main.temp),\r\n            condition: result.weather[0].main,\r\n            name: result.name,\r\n            country: result.sys.country,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  let checkActivities = () => {\r\n    if (weather.condition == \"Clear\") {\r\n      return \"Suggested : Parks\";\r\n    } else {\r\n      return \"Suggested: Heritage Buildings\";\r\n    }\r\n  };\r\n\r\n  const getTodaysDate = (d) => {\r\n    const months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    const days = [\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n      \"Sunday\",\r\n    ];\r\n\r\n    var day = days[d.getDay()];\r\n    var date = d.getDate();\r\n    var month = months[d.getMonth()];\r\n    var year = d.getFullYear();\r\n\r\n    return `${day} ${date} ${month} ${year}`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    search();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <main>\r\n        <div>\r\n          {console.log(weather.length)}\r\n          <div className=\"weather-container\">\r\n            <div className=\"weather\">\r\n              <div className=\"temp\">{weather.temperature}Â°C</div>\r\n              <div className=\"condition\">{weather.condition}</div>\r\n              <div className=\"city\">\r\n                {weather.name}, {weather.country}\r\n              </div>\r\n              <br></br>\r\n              <div className=\"date\">{getTodaysDate(new Date())}</div>\r\n              <br></br>\r\n            </div>\r\n            <div className=\"checkActivities temp\">{checkActivities()}</div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weather;\r\n"]},"metadata":{},"sourceType":"module"}