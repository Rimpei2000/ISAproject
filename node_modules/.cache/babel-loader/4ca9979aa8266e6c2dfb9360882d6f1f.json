{"ast":null,"code":"var global = require('../internals/global');\n\nvar call = require('../internals/function-call');\n\nvar isObject = require('../internals/is-object');\n\nvar isSymbol = require('../internals/is-symbol');\n\nvar getMethod = require('../internals/get-method');\n\nvar ordinaryToPrimitive = require('../internals/ordinary-to-primitive');\n\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TypeError = global.TypeError;\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive'); // `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\n\nmodule.exports = function (input, pref) {\n  if (!isObject(input) || isSymbol(input)) return input;\n  var exoticToPrim = getMethod(input, TO_PRIMITIVE);\n  var result;\n\n  if (exoticToPrim) {\n    if (pref === undefined) pref = 'default';\n    result = call(exoticToPrim, input, pref);\n    if (!isObject(result) || isSymbol(result)) return result;\n    throw TypeError(\"Can't convert object to primitive value\");\n  }\n\n  if (pref === undefined) pref = 'number';\n  return ordinaryToPrimitive(input, pref);\n};","map":{"version":3,"sources":["C:/Users/Disorderly Conduct/WebstormProjects/ISAproject/node_modules/core-js-pure/internals/to-primitive.js"],"names":["global","require","call","isObject","isSymbol","getMethod","ordinaryToPrimitive","wellKnownSymbol","TypeError","TO_PRIMITIVE","module","exports","input","pref","exoticToPrim","result","undefined"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,qBAAD,CAApB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,4BAAD,CAAlB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAII,SAAS,GAAGJ,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAIK,mBAAmB,GAAGL,OAAO,CAAC,oCAAD,CAAjC;;AACA,IAAIM,eAAe,GAAGN,OAAO,CAAC,gCAAD,CAA7B;;AAEA,IAAIO,SAAS,GAAGR,MAAM,CAACQ,SAAvB;AACA,IAAIC,YAAY,GAAGF,eAAe,CAAC,aAAD,CAAlC,C,CAEA;AACA;;AACAG,MAAM,CAACC,OAAP,GAAiB,UAAUC,KAAV,EAAiBC,IAAjB,EAAuB;AACtC,MAAI,CAACV,QAAQ,CAACS,KAAD,CAAT,IAAoBR,QAAQ,CAACQ,KAAD,CAAhC,EAAyC,OAAOA,KAAP;AACzC,MAAIE,YAAY,GAAGT,SAAS,CAACO,KAAD,EAAQH,YAAR,CAA5B;AACA,MAAIM,MAAJ;;AACA,MAAID,YAAJ,EAAkB;AAChB,QAAID,IAAI,KAAKG,SAAb,EAAwBH,IAAI,GAAG,SAAP;AACxBE,IAAAA,MAAM,GAAGb,IAAI,CAACY,YAAD,EAAeF,KAAf,EAAsBC,IAAtB,CAAb;AACA,QAAI,CAACV,QAAQ,CAACY,MAAD,CAAT,IAAqBX,QAAQ,CAACW,MAAD,CAAjC,EAA2C,OAAOA,MAAP;AAC3C,UAAMP,SAAS,CAAC,yCAAD,CAAf;AACD;;AACD,MAAIK,IAAI,KAAKG,SAAb,EAAwBH,IAAI,GAAG,QAAP;AACxB,SAAOP,mBAAmB,CAACM,KAAD,EAAQC,IAAR,CAA1B;AACD,CAZD","sourcesContent":["var global = require('../internals/global');\r\nvar call = require('../internals/function-call');\r\nvar isObject = require('../internals/is-object');\r\nvar isSymbol = require('../internals/is-symbol');\r\nvar getMethod = require('../internals/get-method');\r\nvar ordinaryToPrimitive = require('../internals/ordinary-to-primitive');\r\nvar wellKnownSymbol = require('../internals/well-known-symbol');\r\n\r\nvar TypeError = global.TypeError;\r\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\r\n\r\n// `ToPrimitive` abstract operation\r\n// https://tc39.es/ecma262/#sec-toprimitive\r\nmodule.exports = function (input, pref) {\r\n  if (!isObject(input) || isSymbol(input)) return input;\r\n  var exoticToPrim = getMethod(input, TO_PRIMITIVE);\r\n  var result;\r\n  if (exoticToPrim) {\r\n    if (pref === undefined) pref = 'default';\r\n    result = call(exoticToPrim, input, pref);\r\n    if (!isObject(result) || isSymbol(result)) return result;\r\n    throw TypeError(\"Can't convert object to primitive value\");\r\n  }\r\n  if (pref === undefined) pref = 'number';\r\n  return ordinaryToPrimitive(input, pref);\r\n};\r\n"]},"metadata":{},"sourceType":"script"}