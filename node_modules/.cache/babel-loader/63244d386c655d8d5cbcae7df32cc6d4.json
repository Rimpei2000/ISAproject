{"ast":null,"code":"import _objectSpread from \"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"bsPrefix\", \"expand\", \"variant\", \"bg\", \"fixed\", \"sticky\", \"className\", \"as\", \"expanded\", \"onToggle\", \"onSelect\", \"collapseOnSelect\"];\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback, useMemo } from 'react';\nimport SelectableContext from '@restart/ui/SelectableContext';\nimport { useUncontrolled } from 'uncontrollable';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport NavbarBrand from './NavbarBrand';\nimport NavbarCollapse from './NavbarCollapse';\nimport NavbarToggle from './NavbarToggle';\nimport NavbarOffcanvas from './NavbarOffcanvas';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar NavbarText = createWithBsPrefix('navbar-text', {\n  Component: 'span'\n});\nvar defaultProps = {\n  expand: true,\n  variant: 'light',\n  collapseOnSelect: false\n};\nvar Navbar = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    expanded: 'onToggle'\n  }),\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      expand = _useUncontrolled.expand,\n      variant = _useUncontrolled.variant,\n      bg = _useUncontrolled.bg,\n      fixed = _useUncontrolled.fixed,\n      sticky = _useUncontrolled.sticky,\n      className = _useUncontrolled.className,\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'nav' : _useUncontrolled$as,\n      expanded = _useUncontrolled.expanded,\n      _onToggle = _useUncontrolled.onToggle,\n      onSelect = _useUncontrolled.onSelect,\n      collapseOnSelect = _useUncontrolled.collapseOnSelect,\n      controlledProps = _objectWithoutProperties(_useUncontrolled, _excluded);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'navbar');\n  var handleCollapse = useCallback(function () {\n    onSelect == null ? void 0 : onSelect.apply(void 0, arguments);\n\n    if (collapseOnSelect && expanded) {\n      _onToggle == null ? void 0 : _onToggle(false);\n    }\n  }, [onSelect, collapseOnSelect, expanded, _onToggle]); // will result in some false positives but that seems better\n  // than false negatives. strict `undefined` check allows explicit\n  // \"nulling\" of the role if the user really doesn't want one\n\n  if (controlledProps.role === undefined && Component !== 'nav') {\n    controlledProps.role = 'navigation';\n  }\n\n  var expandClass = \"\".concat(bsPrefix, \"-expand\");\n  if (typeof expand === 'string') expandClass = \"\".concat(expandClass, \"-\").concat(expand);\n  var navbarContext = useMemo(function () {\n    return {\n      onToggle: function onToggle() {\n        return _onToggle == null ? void 0 : _onToggle(!expanded);\n      },\n      bsPrefix: bsPrefix,\n      expanded: !!expanded\n    };\n  }, [bsPrefix, expanded, _onToggle]);\n  return /*#__PURE__*/_jsx(NavbarContext.Provider, {\n    value: navbarContext,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: handleCollapse,\n      children: /*#__PURE__*/_jsx(Component, _objectSpread(_objectSpread({\n        ref: ref\n      }, controlledProps), {}, {\n        className: classNames(className, bsPrefix, expand && expandClass, variant && \"\".concat(bsPrefix, \"-\").concat(variant), bg && \"bg-\".concat(bg), sticky && \"sticky-\".concat(sticky), fixed && \"fixed-\".concat(fixed))\n      }))\n    })\n  });\n});\nNavbar.defaultProps = defaultProps;\nNavbar.displayName = 'Navbar';\nexport default Object.assign(Navbar, {\n  Brand: NavbarBrand,\n  Collapse: NavbarCollapse,\n  Offcanvas: NavbarOffcanvas,\n  Text: NavbarText,\n  Toggle: NavbarToggle\n});","map":{"version":3,"sources":["C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/react-bootstrap/esm/Navbar.js"],"names":["classNames","React","useCallback","useMemo","SelectableContext","useUncontrolled","createWithBsPrefix","NavbarBrand","NavbarCollapse","NavbarToggle","NavbarOffcanvas","useBootstrapPrefix","NavbarContext","jsx","_jsx","NavbarText","Component","defaultProps","expand","variant","collapseOnSelect","Navbar","forwardRef","props","ref","expanded","initialBsPrefix","bsPrefix","bg","fixed","sticky","className","as","onToggle","onSelect","controlledProps","handleCollapse","role","undefined","expandClass","navbarContext","Provider","value","children","displayName","Object","assign","Brand","Collapse","Offcanvas","Text","Toggle"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport { useCallback, useMemo } from 'react';\r\nimport SelectableContext from '@restart/ui/SelectableContext';\r\nimport { useUncontrolled } from 'uncontrollable';\r\nimport createWithBsPrefix from './createWithBsPrefix';\r\nimport NavbarBrand from './NavbarBrand';\r\nimport NavbarCollapse from './NavbarCollapse';\r\nimport NavbarToggle from './NavbarToggle';\r\nimport NavbarOffcanvas from './NavbarOffcanvas';\r\nimport { useBootstrapPrefix } from './ThemeProvider';\r\nimport NavbarContext from './NavbarContext';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst NavbarText = createWithBsPrefix('navbar-text', {\r\n  Component: 'span'\r\n});\r\nconst defaultProps = {\r\n  expand: true,\r\n  variant: 'light',\r\n  collapseOnSelect: false\r\n};\r\nconst Navbar = /*#__PURE__*/React.forwardRef((props, ref) => {\r\n  const {\r\n    bsPrefix: initialBsPrefix,\r\n    expand,\r\n    variant,\r\n    bg,\r\n    fixed,\r\n    sticky,\r\n    className,\r\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\r\n    as: Component = 'nav',\r\n    expanded,\r\n    onToggle,\r\n    onSelect,\r\n    collapseOnSelect,\r\n    ...controlledProps\r\n  } = useUncontrolled(props, {\r\n    expanded: 'onToggle'\r\n  });\r\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'navbar');\r\n  const handleCollapse = useCallback((...args) => {\r\n    onSelect == null ? void 0 : onSelect(...args);\r\n\r\n    if (collapseOnSelect && expanded) {\r\n      onToggle == null ? void 0 : onToggle(false);\r\n    }\r\n  }, [onSelect, collapseOnSelect, expanded, onToggle]); // will result in some false positives but that seems better\r\n  // than false negatives. strict `undefined` check allows explicit\r\n  // \"nulling\" of the role if the user really doesn't want one\r\n\r\n  if (controlledProps.role === undefined && Component !== 'nav') {\r\n    controlledProps.role = 'navigation';\r\n  }\r\n\r\n  let expandClass = `${bsPrefix}-expand`;\r\n  if (typeof expand === 'string') expandClass = `${expandClass}-${expand}`;\r\n  const navbarContext = useMemo(() => ({\r\n    onToggle: () => onToggle == null ? void 0 : onToggle(!expanded),\r\n    bsPrefix,\r\n    expanded: !!expanded\r\n  }), [bsPrefix, expanded, onToggle]);\r\n  return /*#__PURE__*/_jsx(NavbarContext.Provider, {\r\n    value: navbarContext,\r\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\r\n      value: handleCollapse,\r\n      children: /*#__PURE__*/_jsx(Component, {\r\n        ref: ref,\r\n        ...controlledProps,\r\n        className: classNames(className, bsPrefix, expand && expandClass, variant && `${bsPrefix}-${variant}`, bg && `bg-${bg}`, sticky && `sticky-${sticky}`, fixed && `fixed-${fixed}`)\r\n      })\r\n    })\r\n  });\r\n});\r\nNavbar.defaultProps = defaultProps;\r\nNavbar.displayName = 'Navbar';\r\nexport default Object.assign(Navbar, {\r\n  Brand: NavbarBrand,\r\n  Collapse: NavbarCollapse,\r\n  Offcanvas: NavbarOffcanvas,\r\n  Text: NavbarText,\r\n  Toggle: NavbarToggle\r\n});"]},"metadata":{},"sourceType":"module"}