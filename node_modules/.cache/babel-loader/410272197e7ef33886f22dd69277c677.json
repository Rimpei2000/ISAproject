{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhupe\\\\Downloads\\\\Term 4\\\\COMP4537\\\\MilestoneFinal\\\\ISAproject\\\\src\\\\Components\\\\favourites\\\\favourites.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Map, { Popup, Marker } from \"react-map-gl\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Favourites() {\n  _s();\n\n  const [geopins, setGeopins] = useState([]);\n  const [selectedFavourites, setSelectedFavourites] = useState(null);\n  const favouriteMarkers = [];\n\n  const fetchFavourites = () => {\n    fetch(\"http://localhost:3022/API/v1/GetFav\", {\n      username: window.localStorage.getItem(\"username\")\n    }).then(res => res.json()).then(result => {\n      // for (let key in result.records) {\n      //   for (let internalKey in result.records[key]) {\n      //     let objData = result.records[key][internalKey];\n      //     if (objData.geo_point_2d != undefined) {\n      //       favouriteMarkers.push({\n      //         longitude: objData.geo_point_2d[1],\n      //         latitude: objData.geo_point_2d[0],\n      //         name:\n      //           objData.buildingnamespecifics == \"N/A\"\n      //             ? objData.category\n      //             : objData.buildingnamespecifics,\n      //         id: objData.id,\n      //       });\n      //       break;\n      //     }\n      //   }\n      // }\n      // setGeopins(favouriteMarkers);\n      console.log(result);\n    });\n  };\n\n  const addMarkers = () => {\n    return geopins.map(ithMarker => {\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        id: ithMarker.name,\n        latitude: ithMarker.latitude,\n        longitude: ithMarker.longitude,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: `markerButtonId-${ithMarker.id}`,\n          style: {\n            background: \"none\",\n            border: \"none\",\n            cursor: \"pointer\"\n          },\n          onClick: () => {\n            setSelectedFavourites(ithMarker);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              height: \"25px\"\n            },\n            src: \"./building.svg\",\n            alt: ithMarker.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, `markerButtonKey-${ithMarker.id}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, `marker-${ithMarker.id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this);\n    });\n  }; // const addToFavourites = (ithMarker) => {\n  //   let isDuplicate = false;\n  //   for (let key in geopins) {\n  //     if (geopins[key][\"id\"] == ithMarker[\"id\"]) {\n  //       isDuplicate = true;\n  //     }\n  //   }\n  //   if (!isDuplicate) {\n  //     favouriteBuildings.push(ithMarker);\n  //     window.alert(\"Added!\");\n  //   } else {\n  //     window.alert(\"Already exists\");\n  //   }\n  // };\n\n\n  const addPopup = () => {\n    return geopins.map(ithMarker => {\n      return selectedFavourites && selectedFavourites.id == ithMarker.id ? /*#__PURE__*/_jsxDEV(Popup, {\n        id: ithMarker.id,\n        latitude: ithMarker.latitude,\n        longitude: ithMarker.longitude,\n        offsetTop: -30,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: ithMarker.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              Axios.delete(\"http://localhost:3022/API/v1/DelFav\", {\n                username: window.localStorage.getItem(\"username\"),\n                favName: ithMarker.favName,\n                favCat: ithMarker.favCat,\n                lat: ithMarker.lat,\n                lng: ithMarker.lng\n              });\n              window.alert(\"Deleted!\");\n            },\n            children: \"Delete from favourites\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, `popup-${ithMarker.id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this) : null;\n    });\n  };\n\n  useEffect(() => {\n    fetchFavourites();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Map, {\n    initialViewState: {\n      longitude: -123.19258095208848,\n      latitude: 49.25901995475811,\n      zoom: 11\n    },\n    style: {\n      width: \"80vw\",\n      height: \"80vh\",\n      fog: {\n        range: [-0.5, 3],\n        color: \"white\",\n        \"horizon-blend\": 0.1\n      }\n    },\n    mapStyle: \"mapbox://styles/mapbox/streets-v9\",\n    mapboxAccessToken: \"pk.eyJ1IjoiYmh1cGVzaGQiLCJhIjoiY2wxNXN1ZWVwMGoxNTNjcDhkZHh5Z2NsaCJ9.G67FI-pS8DZRWCX5Nt1vrA\",\n    children: [addMarkers(), addPopup()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Favourites, \"BS3F/89QvSgWKqZSOGtNF24oAgA=\");\n\n_c = Favourites;\n\nvar _c;\n\n$RefreshReg$(_c, \"Favourites\");","map":{"version":3,"sources":["C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/src/Components/favourites/favourites.js"],"names":["useState","useEffect","Map","Popup","Marker","Axios","Favourites","geopins","setGeopins","selectedFavourites","setSelectedFavourites","favouriteMarkers","fetchFavourites","fetch","username","window","localStorage","getItem","then","res","json","result","console","log","addMarkers","map","ithMarker","name","latitude","longitude","id","background","border","cursor","height","addPopup","delete","favName","favCat","lat","lng","alert","zoom","width","fog","range","color"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Map, { Popup, Marker } from \"react-map-gl\";\r\nimport Axios from \"axios\";\r\n\r\nexport default function Favourites() {\r\n  const [geopins, setGeopins] = useState([]);\r\n  const [selectedFavourites, setSelectedFavourites] = useState(null);\r\n  const favouriteMarkers = [];\r\n\r\n  const fetchFavourites = () => {\r\n    fetch(\"http://localhost:3022/API/v1/GetFav\", {\r\n      username: window.localStorage.getItem(\"username\"),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        // for (let key in result.records) {\r\n        //   for (let internalKey in result.records[key]) {\r\n        //     let objData = result.records[key][internalKey];\r\n        //     if (objData.geo_point_2d != undefined) {\r\n        //       favouriteMarkers.push({\r\n        //         longitude: objData.geo_point_2d[1],\r\n        //         latitude: objData.geo_point_2d[0],\r\n        //         name:\r\n        //           objData.buildingnamespecifics == \"N/A\"\r\n        //             ? objData.category\r\n        //             : objData.buildingnamespecifics,\r\n        //         id: objData.id,\r\n        //       });\r\n        //       break;\r\n        //     }\r\n        //   }\r\n        // }\r\n        // setGeopins(favouriteMarkers);\r\n\r\n        console.log(result);\r\n      });\r\n  };\r\n\r\n  const addMarkers = () => {\r\n    return geopins.map((ithMarker) => {\r\n      return (\r\n        <Marker\r\n          key={`marker-${ithMarker.id}`}\r\n          id={ithMarker.name}\r\n          latitude={ithMarker.latitude}\r\n          longitude={ithMarker.longitude}\r\n        >\r\n          <button\r\n            key={`markerButtonKey-${ithMarker.id}`}\r\n            id={`markerButtonId-${ithMarker.id}`}\r\n            style={{ background: \"none\", border: \"none\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              setSelectedFavourites(ithMarker);\r\n            }}\r\n          >\r\n            <img\r\n              style={{ height: \"25px\" }}\r\n              src=\"./building.svg\"\r\n              alt={ithMarker.name}\r\n            />\r\n          </button>\r\n        </Marker>\r\n      );\r\n    });\r\n  };\r\n\r\n  // const addToFavourites = (ithMarker) => {\r\n  //   let isDuplicate = false;\r\n  //   for (let key in geopins) {\r\n  //     if (geopins[key][\"id\"] == ithMarker[\"id\"]) {\r\n  //       isDuplicate = true;\r\n  //     }\r\n  //   }\r\n  //   if (!isDuplicate) {\r\n  //     favouriteBuildings.push(ithMarker);\r\n\r\n  //     window.alert(\"Added!\");\r\n  //   } else {\r\n  //     window.alert(\"Already exists\");\r\n  //   }\r\n  // };\r\n\r\n  const addPopup = () => {\r\n    return geopins.map((ithMarker) => {\r\n      return selectedFavourites && selectedFavourites.id == ithMarker.id ? (\r\n        <Popup\r\n          key={`popup-${ithMarker.id}`}\r\n          id={ithMarker.id}\r\n          latitude={ithMarker.latitude}\r\n          longitude={ithMarker.longitude}\r\n          offsetTop={-30}\r\n        >\r\n          <div>\r\n            <p>{ithMarker.name}</p>\r\n            <button\r\n              onClick={() => {\r\n                Axios.delete(\"http://localhost:3022/API/v1/DelFav\", {\r\n                  username: window.localStorage.getItem(\"username\"),\r\n                  favName: ithMarker.favName,\r\n                  favCat: ithMarker.favCat,\r\n                  lat: ithMarker.lat,\r\n                  lng: ithMarker.lng,\r\n                });\r\n\r\n                window.alert(\"Deleted!\");\r\n              }}\r\n            >\r\n              Delete from favourites\r\n            </button>\r\n          </div>\r\n        </Popup>\r\n      ) : null;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchFavourites();\r\n  }, []);\r\n\r\n  return (\r\n    <Map\r\n      initialViewState={{\r\n        longitude: -123.19258095208848,\r\n        latitude: 49.25901995475811,\r\n        zoom: 11,\r\n      }}\r\n      style={{\r\n        width: \"80vw\",\r\n        height: \"80vh\",\r\n        fog: {\r\n          range: [-0.5, 3],\r\n          color: \"white\",\r\n          \"horizon-blend\": 0.1,\r\n        },\r\n      }}\r\n      mapStyle=\"mapbox://styles/mapbox/streets-v9\"\r\n      mapboxAccessToken=\"pk.eyJ1IjoiYmh1cGVzaGQiLCJhIjoiY2wxNXN1ZWVwMGoxNTNjcDhkZHh5Z2NsaCJ9.G67FI-pS8DZRWCX5Nt1vrA\"\r\n    >\r\n      {addMarkers()}\r\n      {addPopup()}\r\n    </Map>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}