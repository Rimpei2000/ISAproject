{"ast":null,"code":"import _defineProperty from \"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classCallCheck from \"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nvar Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\n\nvar BootstrapModalManager = /*#__PURE__*/function (_ModalManager) {\n  _inherits(BootstrapModalManager, _ModalManager);\n\n  var _super = _createSuper(BootstrapModalManager);\n\n  function BootstrapModalManager() {\n    _classCallCheck(this, BootstrapModalManager);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(BootstrapModalManager, [{\n    key: \"adjustAndStore\",\n    value: function adjustAndStore(prop, element, adjust) {\n      var actual = element.style[prop]; // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n      // @ts-ignore\n\n      element.dataset[prop] = actual;\n      css(element, _defineProperty({}, prop, \"\".concat(parseFloat(css(element, prop)) + adjust, \"px\")));\n    }\n  }, {\n    key: \"restore\",\n    value: function restore(prop, element) {\n      var value = element.dataset[prop];\n\n      if (value !== undefined) {\n        delete element.dataset[prop];\n        css(element, _defineProperty({}, prop, value));\n      }\n    }\n  }, {\n    key: \"setContainerStyle\",\n    value: function setContainerStyle(containerState) {\n      var _this = this;\n\n      _get(_getPrototypeOf(BootstrapModalManager.prototype), \"setContainerStyle\", this).call(this, containerState);\n\n      var container = this.getElement();\n      addClass(container, 'modal-open');\n      if (!containerState.scrollBarWidth) return;\n      var paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n      var marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n      qsa(container, Selector.FIXED_CONTENT).forEach(function (el) {\n        return _this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth);\n      });\n      qsa(container, Selector.STICKY_CONTENT).forEach(function (el) {\n        return _this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth);\n      });\n      qsa(container, Selector.NAVBAR_TOGGLER).forEach(function (el) {\n        return _this.adjustAndStore(marginProp, el, containerState.scrollBarWidth);\n      });\n    }\n  }, {\n    key: \"removeContainerStyle\",\n    value: function removeContainerStyle(containerState) {\n      var _this2 = this;\n\n      _get(_getPrototypeOf(BootstrapModalManager.prototype), \"removeContainerStyle\", this).call(this, containerState);\n\n      var container = this.getElement();\n      removeClass(container, 'modal-open');\n      var paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n      var marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n      qsa(container, Selector.FIXED_CONTENT).forEach(function (el) {\n        return _this2.restore(paddingProp, el);\n      });\n      qsa(container, Selector.STICKY_CONTENT).forEach(function (el) {\n        return _this2.restore(marginProp, el);\n      });\n      qsa(container, Selector.NAVBAR_TOGGLER).forEach(function (el) {\n        return _this2.restore(marginProp, el);\n      });\n    }\n  }]);\n\n  return BootstrapModalManager;\n}(ModalManager);\n\nvar sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","map":{"version":3,"sources":["C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/react-bootstrap/esm/BootstrapModalManager.js"],"names":["addClass","css","qsa","removeClass","ModalManager","Selector","FIXED_CONTENT","STICKY_CONTENT","NAVBAR_TOGGLER","BootstrapModalManager","prop","element","adjust","actual","style","dataset","parseFloat","value","undefined","containerState","container","getElement","scrollBarWidth","paddingProp","isRTL","marginProp","forEach","el","adjustAndStore","restore","sharedManager","getSharedManager","options"],"mappings":"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","sourcesContent":["import addClass from 'dom-helpers/addClass';\r\nimport css from 'dom-helpers/css';\r\nimport qsa from 'dom-helpers/querySelectorAll';\r\nimport removeClass from 'dom-helpers/removeClass';\r\nimport ModalManager from '@restart/ui/ModalManager';\r\nconst Selector = {\r\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\r\n  STICKY_CONTENT: '.sticky-top',\r\n  NAVBAR_TOGGLER: '.navbar-toggler'\r\n};\r\n\r\nclass BootstrapModalManager extends ModalManager {\r\n  adjustAndStore(prop, element, adjust) {\r\n    const actual = element.style[prop]; // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\r\n    // @ts-ignore\r\n\r\n    element.dataset[prop] = actual;\r\n    css(element, {\r\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\r\n    });\r\n  }\r\n\r\n  restore(prop, element) {\r\n    const value = element.dataset[prop];\r\n\r\n    if (value !== undefined) {\r\n      delete element.dataset[prop];\r\n      css(element, {\r\n        [prop]: value\r\n      });\r\n    }\r\n  }\r\n\r\n  setContainerStyle(containerState) {\r\n    super.setContainerStyle(containerState);\r\n    const container = this.getElement();\r\n    addClass(container, 'modal-open');\r\n    if (!containerState.scrollBarWidth) return;\r\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\r\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\r\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\r\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\r\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\r\n  }\r\n\r\n  removeContainerStyle(containerState) {\r\n    super.removeContainerStyle(containerState);\r\n    const container = this.getElement();\r\n    removeClass(container, 'modal-open');\r\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\r\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\r\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\r\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\r\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\r\n  }\r\n\r\n}\r\n\r\nlet sharedManager;\r\nexport function getSharedManager(options) {\r\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\r\n  return sharedManager;\r\n}\r\nexport default BootstrapModalManager;"]},"metadata":{},"sourceType":"module"}