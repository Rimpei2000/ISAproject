{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\nimport SelectableContext from '@restart/ui/SelectableContext';\nimport TabContext from '@restart/ui/TabContext';\nimport { useTabPanel } from '@restart/ui/TabPanel';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Fade from './Fade';\nimport getTabTransitionComponent from './getTabTransitionComponent';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst TabPane = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    bsPrefix,\n    transition,\n    ...props\n  } = _ref;\n  const [{\n    className,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    ...rest\n  }, {\n    isActive,\n    onEnter,\n    onEntering,\n    onEntered,\n    onExit,\n    onExiting,\n    onExited,\n    mountOnEnter,\n    unmountOnExit,\n    transition: Transition = Fade\n  }] = useTabPanel({ ...props,\n    transition: getTabTransitionComponent(transition)\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'tab-pane'); // We provide an empty the TabContext so `<Nav>`s in `<TabPanel>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/_jsx(TabContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: null,\n      children: /*#__PURE__*/_jsx(Transition, {\n        in: isActive,\n        onEnter: onEnter,\n        onEntering: onEntering,\n        onEntered: onEntered,\n        onExit: onExit,\n        onExiting: onExiting,\n        onExited: onExited,\n        mountOnEnter: mountOnEnter,\n        unmountOnExit: unmountOnExit,\n        children: /*#__PURE__*/_jsx(Component, { ...rest,\n          ref: ref,\n          className: classNames(className, prefix, isActive && 'active')\n        })\n      })\n    })\n  });\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","map":{"version":3,"sources":["C:/Users/bhupe/Downloads/Term 4/COMP4537/FinalMilestone/ISAproject/node_modules/react-bootstrap/esm/TabPane.js"],"names":["classNames","React","SelectableContext","TabContext","useTabPanel","useBootstrapPrefix","Fade","getTabTransitionComponent","jsx","_jsx","TabPane","forwardRef","ref","bsPrefix","transition","props","className","as","Component","rest","isActive","onEnter","onEntering","onEntered","onExit","onExiting","onExited","mountOnEnter","unmountOnExit","Transition","prefix","Provider","value","children","in","displayName"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,yBAAP,MAAsC,6BAAtC;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,MAAMC,OAAO,GAAG,aAAaT,KAAK,CAACU,UAAN,CAAiB,OAI3CC,GAJ2C,KAInC;AAAA,MAJoC;AAC7CC,IAAAA,QAD6C;AAE7CC,IAAAA,UAF6C;AAG7C,OAAGC;AAH0C,GAIpC;AACT,QAAM,CAAC;AACLC,IAAAA,SADK;AAEL;AACAC,IAAAA,EAAE,EAAEC,SAAS,GAAG,KAHX;AAIL,OAAGC;AAJE,GAAD,EAKH;AACDC,IAAAA,QADC;AAEDC,IAAAA,OAFC;AAGDC,IAAAA,UAHC;AAIDC,IAAAA,SAJC;AAKDC,IAAAA,MALC;AAMDC,IAAAA,SANC;AAODC,IAAAA,QAPC;AAQDC,IAAAA,YARC;AASDC,IAAAA,aATC;AAUDd,IAAAA,UAAU,EAAEe,UAAU,GAAGvB;AAVxB,GALG,IAgBDF,WAAW,CAAC,EAAE,GAAGW,KAAL;AACfD,IAAAA,UAAU,EAAEP,yBAAyB,CAACO,UAAD;AADtB,GAAD,CAhBhB;AAmBA,QAAMgB,MAAM,GAAGzB,kBAAkB,CAACQ,QAAD,EAAW,UAAX,CAAjC,CApBS,CAoBgD;AACzD;;AAEA,SAAO,aAAaJ,IAAI,CAACN,UAAU,CAAC4B,QAAZ,EAAsB;AAC5CC,IAAAA,KAAK,EAAE,IADqC;AAE5CC,IAAAA,QAAQ,EAAE,aAAaxB,IAAI,CAACP,iBAAiB,CAAC6B,QAAnB,EAA6B;AACtDC,MAAAA,KAAK,EAAE,IAD+C;AAEtDC,MAAAA,QAAQ,EAAE,aAAaxB,IAAI,CAACoB,UAAD,EAAa;AACtCK,QAAAA,EAAE,EAAEd,QADkC;AAEtCC,QAAAA,OAAO,EAAEA,OAF6B;AAGtCC,QAAAA,UAAU,EAAEA,UAH0B;AAItCC,QAAAA,SAAS,EAAEA,SAJ2B;AAKtCC,QAAAA,MAAM,EAAEA,MAL8B;AAMtCC,QAAAA,SAAS,EAAEA,SAN2B;AAOtCC,QAAAA,QAAQ,EAAEA,QAP4B;AAQtCC,QAAAA,YAAY,EAAEA,YARwB;AAStCC,QAAAA,aAAa,EAAEA,aATuB;AAUtCK,QAAAA,QAAQ,EAAE,aAAaxB,IAAI,CAACS,SAAD,EAAY,EAAE,GAAGC,IAAL;AACrCP,UAAAA,GAAG,EAAEA,GADgC;AAErCI,UAAAA,SAAS,EAAEhB,UAAU,CAACgB,SAAD,EAAYc,MAAZ,EAAoBV,QAAQ,IAAI,QAAhC;AAFgB,SAAZ;AAVW,OAAb;AAF2B,KAA7B;AAFiB,GAAtB,CAAxB;AAqBD,CAhD4B,CAA7B;AAiDAV,OAAO,CAACyB,WAAR,GAAsB,SAAtB;AACA,eAAezB,OAAf","sourcesContent":["import classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport SelectableContext from '@restart/ui/SelectableContext';\r\nimport TabContext from '@restart/ui/TabContext';\r\nimport { useTabPanel } from '@restart/ui/TabPanel';\r\nimport { useBootstrapPrefix } from './ThemeProvider';\r\nimport Fade from './Fade';\r\nimport getTabTransitionComponent from './getTabTransitionComponent';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst TabPane = /*#__PURE__*/React.forwardRef(({\r\n  bsPrefix,\r\n  transition,\r\n  ...props\r\n}, ref) => {\r\n  const [{\r\n    className,\r\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\r\n    as: Component = 'div',\r\n    ...rest\r\n  }, {\r\n    isActive,\r\n    onEnter,\r\n    onEntering,\r\n    onEntered,\r\n    onExit,\r\n    onExiting,\r\n    onExited,\r\n    mountOnEnter,\r\n    unmountOnExit,\r\n    transition: Transition = Fade\r\n  }] = useTabPanel({ ...props,\r\n    transition: getTabTransitionComponent(transition)\r\n  });\r\n  const prefix = useBootstrapPrefix(bsPrefix, 'tab-pane'); // We provide an empty the TabContext so `<Nav>`s in `<TabPanel>`s don't\r\n  // conflict with the top level one.\r\n\r\n  return /*#__PURE__*/_jsx(TabContext.Provider, {\r\n    value: null,\r\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\r\n      value: null,\r\n      children: /*#__PURE__*/_jsx(Transition, {\r\n        in: isActive,\r\n        onEnter: onEnter,\r\n        onEntering: onEntering,\r\n        onEntered: onEntered,\r\n        onExit: onExit,\r\n        onExiting: onExiting,\r\n        onExited: onExited,\r\n        mountOnEnter: mountOnEnter,\r\n        unmountOnExit: unmountOnExit,\r\n        children: /*#__PURE__*/_jsx(Component, { ...rest,\r\n          ref: ref,\r\n          className: classNames(className, prefix, isActive && 'active')\r\n        })\r\n      })\r\n    })\r\n  });\r\n});\r\nTabPane.displayName = 'TabPane';\r\nexport default TabPane;"]},"metadata":{},"sourceType":"module"}