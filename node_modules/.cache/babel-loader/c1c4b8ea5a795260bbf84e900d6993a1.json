{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhupe\\\\Downloads\\\\Term 4\\\\COMP4537\\\\MilestoneFinal\\\\ISAproject\\\\src\\\\Components\\\\activities\\\\buildings.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Map, { Popup, Marker } from \"react-map-gl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HeritageBuildings() {\n  _s();\n\n  const [geopins, setGeopins] = useState([]);\n  const [selectedBuilding, setSelectedBuilding] = useState(null);\n  const buildingMarkers = [];\n  const favouriteBuildings = [];\n\n  const fetchHeritageBuildings = () => {\n    fetch(\"https://opendata.vancouver.ca/api/records/1.0/search/?dataset=heritage-sites&q=1\").then(res => res.json()).then(result => {\n      for (let key in result.records) {\n        for (let internalKey in result.records[key]) {\n          let objData = result.records[key][internalKey];\n\n          if (objData.geo_point_2d != undefined) {\n            buildingMarkers.push({\n              longitude: objData.geo_point_2d[1],\n              latitude: objData.geo_point_2d[0],\n              name: objData.buildingnamespecifics,\n              id: objData.id\n            });\n            break;\n          }\n        }\n      }\n\n      setGeopins(buildingMarkers);\n    });\n  };\n\n  const addMarkers = () => {\n    return geopins.map(ithMarker => {\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        id: ithMarker.name,\n        latitude: ithMarker.latitude,\n        longitude: ithMarker.longitude,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            background: \"none\",\n            border: \"none\",\n            cursor: \"pointer\"\n          },\n          onClick: () => {\n            setSelectedBuilding(ithMarker);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              height: \"25px\"\n            },\n            src: \"./building.svg\",\n            alt: ithMarker.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, ithMarker.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  const addPopup = () => {\n    return geopins.map(ithMarker => {\n      return selectedBuilding && selectedBuilding.id == ithMarker.id ? /*#__PURE__*/_jsxDEV(Popup, {\n        id: ithMarker.id,\n        latitude: ithMarker.latitude,\n        longitude: ithMarker.longitude,\n        offsetTop: -30,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: ithMarker.name == \"\" ? ithMarker.name : ithMarker.streetname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              let isDuplicate = false;\n\n              for (let key in geopins) {\n                if (geopins[key][\"id\"] == ithMarker.id) {\n                  isDuplicate = true;\n                }\n              }\n\n              if (!isDuplicate) {\n                window.alert(\"ADDED to favourites: \" + ithMarker.name);\n                favouriteBuildings.push(ithMarker);\n              }\n            },\n            children: \"Add to favourites\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this) : null;\n    });\n  };\n\n  useEffect(() => {\n    fetchHeritageBuildings();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Map, {\n    initialViewState: {\n      longitude: -123.19258095208848,\n      latitude: 49.25901995475811,\n      zoom: 11\n    },\n    style: {\n      width: \"80vw\",\n      height: \"80vh\",\n      fog: {\n        range: [-0.5, 3],\n        color: \"white\",\n        \"horizon-blend\": 0.1\n      }\n    },\n    mapStyle: \"mapbox://styles/mapbox/streets-v9\",\n    mapboxAccessToken: \"pk.eyJ1IjoiYmh1cGVzaGQiLCJhIjoiY2wxNXN1ZWVwMGoxNTNjcDhkZHh5Z2NsaCJ9.G67FI-pS8DZRWCX5Nt1vrA\",\n    children: [addMarkers(), addPopup(), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: \"10px\",\n        left: \"10px\",\n        zIndex: \"1\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Something to be displayed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HeritageBuildings, \"aBG6U4kMCnASAnHOLW9ajyUFEGs=\");\n\n_c = HeritageBuildings;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeritageBuildings\");","map":{"version":3,"sources":["C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/src/Components/activities/buildings.js"],"names":["useState","useEffect","Map","Popup","Marker","HeritageBuildings","geopins","setGeopins","selectedBuilding","setSelectedBuilding","buildingMarkers","favouriteBuildings","fetchHeritageBuildings","fetch","then","res","json","result","key","records","internalKey","objData","geo_point_2d","undefined","push","longitude","latitude","name","buildingnamespecifics","id","addMarkers","map","ithMarker","background","border","cursor","height","addPopup","streetname","isDuplicate","window","alert","zoom","width","fog","range","color","position","top","left","zIndex"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Map, { Popup, Marker } from \"react-map-gl\";\r\n\r\nexport default function HeritageBuildings() {\r\n  const [geopins, setGeopins] = useState([]);\r\n  const [selectedBuilding, setSelectedBuilding] = useState(null);\r\n  const buildingMarkers = [];\r\n\r\n  const favouriteBuildings = [];\r\n\r\n  const fetchHeritageBuildings = () => {\r\n    fetch(\r\n      \"https://opendata.vancouver.ca/api/records/1.0/search/?dataset=heritage-sites&q=1\"\r\n    )\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        for (let key in result.records) {\r\n          for (let internalKey in result.records[key]) {\r\n            let objData = result.records[key][internalKey];\r\n            if (objData.geo_point_2d != undefined) {\r\n              buildingMarkers.push({\r\n                longitude: objData.geo_point_2d[1],\r\n                latitude: objData.geo_point_2d[0],\r\n                name: objData.buildingnamespecifics,\r\n                id: objData.id,\r\n              });\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        setGeopins(buildingMarkers);\r\n      });\r\n  };\r\n\r\n  const addMarkers = () => {\r\n    return geopins.map((ithMarker) => {\r\n      return (\r\n        <Marker\r\n          key={ithMarker.id}\r\n          id={ithMarker.name}\r\n          latitude={ithMarker.latitude}\r\n          longitude={ithMarker.longitude}\r\n        >\r\n          <button\r\n            style={{ background: \"none\", border: \"none\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              setSelectedBuilding(ithMarker);\r\n            }}\r\n          >\r\n            <img\r\n              style={{ height: \"25px\" }}\r\n              src=\"./building.svg\"\r\n              alt={ithMarker.name}\r\n            />\r\n          </button>\r\n        </Marker>\r\n      );\r\n    });\r\n  };\r\n\r\n  const addPopup = () => {\r\n    return geopins.map((ithMarker) => {\r\n      return selectedBuilding && selectedBuilding.id == ithMarker.id ? (\r\n        <Popup\r\n          id={ithMarker.id}\r\n          latitude={ithMarker.latitude}\r\n          longitude={ithMarker.longitude}\r\n          offsetTop={-30}\r\n        >\r\n          <div>\r\n            <p>\r\n              {ithMarker.name == \"\" ? ithMarker.name : ithMarker.streetname}\r\n            </p>\r\n            <button\r\n              onClick={() => {\r\n                let isDuplicate = false;\r\n                for (let key in geopins) {\r\n                  if (geopins[key][\"id\"] == ithMarker.id) {\r\n                    isDuplicate = true;\r\n                  }\r\n                }\r\n                if (!isDuplicate) {\r\n                  window.alert(\"ADDED to favourites: \" + ithMarker.name);\r\n                  favouriteBuildings.push(ithMarker);\r\n                }\r\n              }}\r\n            >\r\n              Add to favourites\r\n            </button>\r\n          </div>\r\n        </Popup>\r\n      ) : null;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchHeritageBuildings();\r\n  }, []);\r\n\r\n  return (\r\n    <Map\r\n      initialViewState={{\r\n        longitude: -123.19258095208848,\r\n        latitude: 49.25901995475811,\r\n        zoom: 11,\r\n      }}\r\n      style={{\r\n        width: \"80vw\",\r\n        height: \"80vh\",\r\n        fog: {\r\n          range: [-0.5, 3],\r\n          color: \"white\",\r\n          \"horizon-blend\": 0.1,\r\n        },\r\n      }}\r\n      mapStyle=\"mapbox://styles/mapbox/streets-v9\"\r\n      mapboxAccessToken=\"pk.eyJ1IjoiYmh1cGVzaGQiLCJhIjoiY2wxNXN1ZWVwMGoxNTNjcDhkZHh5Z2NsaCJ9.G67FI-pS8DZRWCX5Nt1vrA\"\r\n    >\r\n      {addMarkers()}\r\n      {addPopup()}\r\n\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          top: \"10px\",\r\n          left: \"10px\",\r\n          zIndex: \"1\",\r\n        }}\r\n      >\r\n        <h1>Something to be displayed</h1>\r\n      </div>\r\n    </Map>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}