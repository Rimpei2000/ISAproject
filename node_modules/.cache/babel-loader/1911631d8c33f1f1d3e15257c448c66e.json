{"ast":null,"code":"var global = require('../internals/global');\n\nvar call = require('../internals/function-call');\n\nvar isCallable = require('../internals/is-callable');\n\nvar isObject = require('../internals/is-object');\n\nvar TypeError = global.TypeError; // `OrdinaryToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-ordinarytoprimitive\n\nmodule.exports = function (input, pref) {\n  var fn, val;\n  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;\n  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};","map":{"version":3,"sources":["C:/Users/bhupe/Downloads/Term 4/COMP4537/FinalMilestone/ISAproject/node_modules/core-js-pure/internals/ordinary-to-primitive.js"],"names":["global","require","call","isCallable","isObject","TypeError","module","exports","input","pref","fn","val","toString","valueOf"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,qBAAD,CAApB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,4BAAD,CAAlB;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,0BAAD,CAAxB;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,wBAAD,CAAtB;;AAEA,IAAII,SAAS,GAAGL,MAAM,CAACK,SAAvB,C,CAEA;AACA;;AACAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,KAAV,EAAiBC,IAAjB,EAAuB;AACtC,MAAIC,EAAJ,EAAQC,GAAR;AACA,MAAIF,IAAI,KAAK,QAAT,IAAqBN,UAAU,CAACO,EAAE,GAAGF,KAAK,CAACI,QAAZ,CAA/B,IAAwD,CAACR,QAAQ,CAACO,GAAG,GAAGT,IAAI,CAACQ,EAAD,EAAKF,KAAL,CAAX,CAArE,EAA8F,OAAOG,GAAP;AAC9F,MAAIR,UAAU,CAACO,EAAE,GAAGF,KAAK,CAACK,OAAZ,CAAV,IAAkC,CAACT,QAAQ,CAACO,GAAG,GAAGT,IAAI,CAACQ,EAAD,EAAKF,KAAL,CAAX,CAA/C,EAAwE,OAAOG,GAAP;AACxE,MAAIF,IAAI,KAAK,QAAT,IAAqBN,UAAU,CAACO,EAAE,GAAGF,KAAK,CAACI,QAAZ,CAA/B,IAAwD,CAACR,QAAQ,CAACO,GAAG,GAAGT,IAAI,CAACQ,EAAD,EAAKF,KAAL,CAAX,CAArE,EAA8F,OAAOG,GAAP;AAC9F,QAAMN,SAAS,CAAC,yCAAD,CAAf;AACD,CAND","sourcesContent":["var global = require('../internals/global');\r\nvar call = require('../internals/function-call');\r\nvar isCallable = require('../internals/is-callable');\r\nvar isObject = require('../internals/is-object');\r\n\r\nvar TypeError = global.TypeError;\r\n\r\n// `OrdinaryToPrimitive` abstract operation\r\n// https://tc39.es/ecma262/#sec-ordinarytoprimitive\r\nmodule.exports = function (input, pref) {\r\n  var fn, val;\r\n  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\r\n  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;\r\n  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\r\n  throw TypeError(\"Can't convert object to primitive value\");\r\n};\r\n"]},"metadata":{},"sourceType":"script"}