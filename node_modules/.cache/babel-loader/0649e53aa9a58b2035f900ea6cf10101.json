{"ast":null,"code":"'use strict';\n\nvar createError = require('./createError');\n/**\r\n * Resolve or reject a Promise based on response status.\r\n *\r\n * @param {Function} resolve A function that resolves the promise.\r\n * @param {Function} reject A function that rejects the promise.\r\n * @param {object} response The response.\r\n */\n\n\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError('Request failed with status code ' + response.status, response.config, null, response.request, response));\n  }\n};","map":{"version":3,"sources":["C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/axios/lib/core/settle.js"],"names":["createError","require","module","exports","settle","resolve","reject","response","validateStatus","config","status","request"],"mappings":"AAAA;;AAEA,IAAIA,WAAW,GAAGC,OAAO,CAAC,eAAD,CAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,SAASC,MAAT,CAAgBC,OAAhB,EAAyBC,MAAzB,EAAiCC,QAAjC,EAA2C;AAC1D,MAAIC,cAAc,GAAGD,QAAQ,CAACE,MAAT,CAAgBD,cAArC;;AACA,MAAI,CAACD,QAAQ,CAACG,MAAV,IAAoB,CAACF,cAArB,IAAuCA,cAAc,CAACD,QAAQ,CAACG,MAAV,CAAzD,EAA4E;AAC1EL,IAAAA,OAAO,CAACE,QAAD,CAAP;AACD,GAFD,MAEO;AACLD,IAAAA,MAAM,CAACN,WAAW,CAChB,qCAAqCO,QAAQ,CAACG,MAD9B,EAEhBH,QAAQ,CAACE,MAFO,EAGhB,IAHgB,EAIhBF,QAAQ,CAACI,OAJO,EAKhBJ,QALgB,CAAZ,CAAN;AAOD;AACF,CAbD","sourcesContent":["'use strict';\r\n\r\nvar createError = require('./createError');\r\n\r\n/**\r\n * Resolve or reject a Promise based on response status.\r\n *\r\n * @param {Function} resolve A function that resolves the promise.\r\n * @param {Function} reject A function that rejects the promise.\r\n * @param {object} response The response.\r\n */\r\nmodule.exports = function settle(resolve, reject, response) {\r\n  var validateStatus = response.config.validateStatus;\r\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\r\n    resolve(response);\r\n  } else {\r\n    reject(createError(\r\n      'Request failed with status code ' + response.status,\r\n      response.config,\r\n      null,\r\n      response.request,\r\n      response\r\n    ));\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}