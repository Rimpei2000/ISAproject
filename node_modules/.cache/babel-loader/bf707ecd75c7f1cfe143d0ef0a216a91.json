{"ast":null,"code":"import { useMemo, useRef } from 'react';\nimport hasClass from 'dom-helpers/hasClass';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Popover from './Popover'; // This is meant for internal use.\n// This applies a custom offset to the overlay if it's a popover.\n\nexport default function useOverlayOffset(customOffset) {\n  const overlayRef = useRef(null);\n  const popoverClass = useBootstrapPrefix(undefined, 'popover');\n  const offset = useMemo(() => ({\n    name: 'offset',\n    options: {\n      offset: () => {\n        if (overlayRef.current && hasClass(overlayRef.current, popoverClass)) {\n          return customOffset || Popover.POPPER_OFFSET;\n        }\n\n        return customOffset || [0, 0];\n      }\n    }\n  }), [customOffset, popoverClass]);\n  return [overlayRef, [offset]];\n}","map":{"version":3,"sources":["C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/react-bootstrap/esm/useOverlayOffset.js"],"names":["useMemo","useRef","hasClass","useBootstrapPrefix","Popover","useOverlayOffset","customOffset","overlayRef","popoverClass","undefined","offset","name","options","current","POPPER_OFFSET"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,MAAlB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CAAiC;AACjC;;AAEA,eAAe,SAASC,gBAAT,CAA0BC,YAA1B,EAAwC;AACrD,QAAMC,UAAU,GAAGN,MAAM,CAAC,IAAD,CAAzB;AACA,QAAMO,YAAY,GAAGL,kBAAkB,CAACM,SAAD,EAAY,SAAZ,CAAvC;AACA,QAAMC,MAAM,GAAGV,OAAO,CAAC,OAAO;AAC5BW,IAAAA,IAAI,EAAE,QADsB;AAE5BC,IAAAA,OAAO,EAAE;AACPF,MAAAA,MAAM,EAAE,MAAM;AACZ,YAAIH,UAAU,CAACM,OAAX,IAAsBX,QAAQ,CAACK,UAAU,CAACM,OAAZ,EAAqBL,YAArB,CAAlC,EAAsE;AACpE,iBAAOF,YAAY,IAAIF,OAAO,CAACU,aAA/B;AACD;;AAED,eAAOR,YAAY,IAAI,CAAC,CAAD,EAAI,CAAJ,CAAvB;AACD;AAPM;AAFmB,GAAP,CAAD,EAWlB,CAACA,YAAD,EAAeE,YAAf,CAXkB,CAAtB;AAYA,SAAO,CAACD,UAAD,EAAa,CAACG,MAAD,CAAb,CAAP;AACD","sourcesContent":["import { useMemo, useRef } from 'react';\r\nimport hasClass from 'dom-helpers/hasClass';\r\nimport { useBootstrapPrefix } from './ThemeProvider';\r\nimport Popover from './Popover'; // This is meant for internal use.\r\n// This applies a custom offset to the overlay if it's a popover.\r\n\r\nexport default function useOverlayOffset(customOffset) {\r\n  const overlayRef = useRef(null);\r\n  const popoverClass = useBootstrapPrefix(undefined, 'popover');\r\n  const offset = useMemo(() => ({\r\n    name: 'offset',\r\n    options: {\r\n      offset: () => {\r\n        if (overlayRef.current && hasClass(overlayRef.current, popoverClass)) {\r\n          return customOffset || Popover.POPPER_OFFSET;\r\n        }\r\n\r\n        return customOffset || [0, 0];\r\n      }\r\n    }\r\n  }), [customOffset, popoverClass]);\r\n  return [overlayRef, [offset]];\r\n}"]},"metadata":{},"sourceType":"module"}