{"ast":null,"code":"import _objectSpread from \"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"children\", \"transition\", \"popperConfig\"];\nimport * as React from 'react';\nimport { useRef } from 'react';\nimport classNames from 'classnames';\nimport BaseOverlay from '@restart/ui/Overlay';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useOverlayOffset from './useOverlayOffset';\nimport Fade from './Fade';\nimport safeFindDOMNode from './safeFindDOMNode';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar defaultProps = {\n  transition: Fade,\n  rootClose: false,\n  show: false,\n  placement: 'top'\n};\n\nfunction wrapRefs(props, arrowProps) {\n  var ref = props.ref;\n  var aRef = arrowProps.ref;\n\n  props.ref = ref.__wrapped || (ref.__wrapped = function (r) {\n    return ref(safeFindDOMNode(r));\n  });\n\n  arrowProps.ref = aRef.__wrapped || (aRef.__wrapped = function (r) {\n    return aRef(safeFindDOMNode(r));\n  });\n}\n\nvar Overlay = /*#__PURE__*/React.forwardRef(function (_ref, outerRef) {\n  var overlay = _ref.children,\n      transition = _ref.transition,\n      _ref$popperConfig = _ref.popperConfig,\n      popperConfig = _ref$popperConfig === void 0 ? {} : _ref$popperConfig,\n      outerProps = _objectWithoutProperties(_ref, _excluded);\n\n  var popperRef = useRef({});\n\n  var _useOverlayOffset = useOverlayOffset(outerProps.offset),\n      _useOverlayOffset2 = _slicedToArray(_useOverlayOffset, 2),\n      ref = _useOverlayOffset2[0],\n      modifiers = _useOverlayOffset2[1];\n\n  var mergedRef = useMergedRefs(outerRef, ref);\n  var actualTransition = transition === true ? Fade : transition || undefined;\n  return /*#__PURE__*/_jsx(BaseOverlay, _objectSpread(_objectSpread({}, outerProps), {}, {\n    ref: mergedRef,\n    popperConfig: _objectSpread(_objectSpread({}, popperConfig), {}, {\n      modifiers: modifiers.concat(popperConfig.modifiers || [])\n    }),\n    transition: actualTransition,\n    children: function children(overlayProps, _ref2) {\n      var arrowProps = _ref2.arrowProps,\n          popperObj = _ref2.popper,\n          show = _ref2.show;\n\n      var _popperObj$state, _popperObj$state$modi;\n\n      wrapRefs(overlayProps, arrowProps); // Need to get placement from popper object, handling case when overlay is flipped using 'flip' prop\n\n      var updatedPlacement = popperObj == null ? void 0 : popperObj.placement;\n      var popper = Object.assign(popperRef.current, {\n        state: popperObj == null ? void 0 : popperObj.state,\n        scheduleUpdate: popperObj == null ? void 0 : popperObj.update,\n        placement: updatedPlacement,\n        outOfBoundaries: (popperObj == null ? void 0 : (_popperObj$state = popperObj.state) == null ? void 0 : (_popperObj$state$modi = _popperObj$state.modifiersData.hide) == null ? void 0 : _popperObj$state$modi.isReferenceHidden) || false\n      });\n      if (typeof overlay === 'function') return overlay(_objectSpread(_objectSpread(_objectSpread({}, overlayProps), {}, {\n        placement: updatedPlacement,\n        show: show\n      }, !transition && show && {\n        className: 'show'\n      }), {}, {\n        popper: popper,\n        arrowProps: arrowProps\n      }));\n      return /*#__PURE__*/React.cloneElement(overlay, _objectSpread(_objectSpread({}, overlayProps), {}, {\n        placement: updatedPlacement,\n        arrowProps: arrowProps,\n        popper: popper,\n        className: classNames(overlay.props.className, !transition && show && 'show'),\n        style: _objectSpread(_objectSpread({}, overlay.props.style), overlayProps.style)\n      }));\n    }\n  }));\n});\nOverlay.displayName = 'Overlay';\nOverlay.defaultProps = defaultProps;\nexport default Overlay;","map":{"version":3,"sources":["C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/react-bootstrap/esm/Overlay.js"],"names":["React","useRef","classNames","BaseOverlay","useMergedRefs","useOverlayOffset","Fade","safeFindDOMNode","jsx","_jsx","defaultProps","transition","rootClose","show","placement","wrapRefs","props","arrowProps","ref","aRef","__wrapped","r","Overlay","forwardRef","outerRef","overlay","children","popperConfig","outerProps","popperRef","offset","modifiers","mergedRef","actualTransition","undefined","concat","overlayProps","popperObj","popper","_popperObj$state","_popperObj$state$modi","updatedPlacement","Object","assign","current","state","scheduleUpdate","update","outOfBoundaries","modifiersData","hide","isReferenceHidden","className","cloneElement","style","displayName"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { useRef } from 'react';\r\nimport classNames from 'classnames';\r\nimport BaseOverlay from '@restart/ui/Overlay';\r\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\r\nimport useOverlayOffset from './useOverlayOffset';\r\nimport Fade from './Fade';\r\nimport safeFindDOMNode from './safeFindDOMNode';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst defaultProps = {\r\n  transition: Fade,\r\n  rootClose: false,\r\n  show: false,\r\n  placement: 'top'\r\n};\r\n\r\nfunction wrapRefs(props, arrowProps) {\r\n  const {\r\n    ref\r\n  } = props;\r\n  const {\r\n    ref: aRef\r\n  } = arrowProps;\r\n\r\n  props.ref = ref.__wrapped || (ref.__wrapped = r => ref(safeFindDOMNode(r)));\r\n\r\n  arrowProps.ref = aRef.__wrapped || (aRef.__wrapped = r => aRef(safeFindDOMNode(r)));\r\n}\r\n\r\nconst Overlay = /*#__PURE__*/React.forwardRef(({\r\n  children: overlay,\r\n  transition,\r\n  popperConfig = {},\r\n  ...outerProps\r\n}, outerRef) => {\r\n  const popperRef = useRef({});\r\n  const [ref, modifiers] = useOverlayOffset(outerProps.offset);\r\n  const mergedRef = useMergedRefs(outerRef, ref);\r\n  const actualTransition = transition === true ? Fade : transition || undefined;\r\n  return /*#__PURE__*/_jsx(BaseOverlay, { ...outerProps,\r\n    ref: mergedRef,\r\n    popperConfig: { ...popperConfig,\r\n      modifiers: modifiers.concat(popperConfig.modifiers || [])\r\n    },\r\n    transition: actualTransition,\r\n    children: (overlayProps, {\r\n      arrowProps,\r\n      popper: popperObj,\r\n      show\r\n    }) => {\r\n      var _popperObj$state, _popperObj$state$modi;\r\n\r\n      wrapRefs(overlayProps, arrowProps); // Need to get placement from popper object, handling case when overlay is flipped using 'flip' prop\r\n\r\n      const updatedPlacement = popperObj == null ? void 0 : popperObj.placement;\r\n      const popper = Object.assign(popperRef.current, {\r\n        state: popperObj == null ? void 0 : popperObj.state,\r\n        scheduleUpdate: popperObj == null ? void 0 : popperObj.update,\r\n        placement: updatedPlacement,\r\n        outOfBoundaries: (popperObj == null ? void 0 : (_popperObj$state = popperObj.state) == null ? void 0 : (_popperObj$state$modi = _popperObj$state.modifiersData.hide) == null ? void 0 : _popperObj$state$modi.isReferenceHidden) || false\r\n      });\r\n      if (typeof overlay === 'function') return overlay({ ...overlayProps,\r\n        placement: updatedPlacement,\r\n        show,\r\n        ...(!transition && show && {\r\n          className: 'show'\r\n        }),\r\n        popper,\r\n        arrowProps\r\n      });\r\n      return /*#__PURE__*/React.cloneElement(overlay, { ...overlayProps,\r\n        placement: updatedPlacement,\r\n        arrowProps,\r\n        popper,\r\n        className: classNames(overlay.props.className, !transition && show && 'show'),\r\n        style: { ...overlay.props.style,\r\n          ...overlayProps.style\r\n        }\r\n      });\r\n    }\r\n  });\r\n});\r\nOverlay.displayName = 'Overlay';\r\nOverlay.defaultProps = defaultProps;\r\nexport default Overlay;"]},"metadata":{},"sourceType":"module"}