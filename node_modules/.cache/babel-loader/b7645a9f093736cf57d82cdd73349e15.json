{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhupe\\\\Downloads\\\\Term 4\\\\COMP4537\\\\MilestoneFinal\\\\ISAproject\\\\src\\\\Components\\\\favourites\\\\favourites.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Map, { Popup, Marker } from \"react-map-gl\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Favourites() {\n  _s();\n\n  const [geopins, setGeopins] = useState([]);\n  const [selectedFavourites, setSelectedFavourites] = useState(null);\n  const favouriteMarkers = [];\n\n  const fetchFavourites = async name => {\n    // let name = await window.localStorage.getItem(\"username\");\n    // fetch(`http://localhost:3022/API/v1/GetFav?username=admin`)\n    Axios.get(\"http://localhost:3022/API/v1/GetFav\", {\n      params: {\n        username: name\n      }\n    }).then(res => res).then(result => {\n      for (let key in result.data.rows) {\n        let objData = result.data.rows[key];\n        favouriteMarkers.push({\n          longitude: objData.fav_lng,\n          latitude: objData.fav_lat,\n          name: objData.fav_item_name,\n          category: objData.fav_cat,\n          image: objData.fav_cat == \"Parks\" ? `./parks.svg` : objData.fav_cat == \"Heritage Buildings\" ? `./building.svg` : `./food.svg`\n        });\n        break;\n      } //     for (let internalKey in result.data[key]) {\n      //\n      //\n      // }\n\n\n      setGeopins(favouriteMarkers);\n    });\n  };\n\n  const addMarkers = () => {\n    return geopins.map(ithMarker => {\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        id: ithMarker.name,\n        latitude: ithMarker.latitude,\n        longitude: ithMarker.longitude,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: `markerButtonId-${ithMarker.id}`,\n          style: {\n            background: \"none\",\n            border: \"none\",\n            cursor: \"pointer\"\n          },\n          onClick: () => {\n            setSelectedFavourites(ithMarker);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              height: \"25px\"\n            },\n            src: ithMarker.image,\n            alt: ithMarker.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, `markerButtonKey-${ithMarker.id}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, `marker-${ithMarker.id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this);\n    });\n  }; // const addToFavourites = (ithMarker) => {\n  //   let isDuplicate = false;\n  //   for (let key in geopins) {\n  //     if (geopins[key][\"id\"] == ithMarker[\"id\"]) {\n  //       isDuplicate = true;\n  //     }\n  //   }\n  //   if (!isDuplicate) {\n  //     favouriteBuildings.push(ithMarker);\n  //     window.alert(\"Added!\");\n  //   } else {\n  //     window.alert(\"Already exists\");\n  //   }\n  // };\n\n\n  const addPopup = () => {\n    return geopins.map(ithMarker => {\n      return selectedFavourites && selectedFavourites.id == ithMarker.id ? /*#__PURE__*/_jsxDEV(Popup, {\n        id: ithMarker.id,\n        latitude: ithMarker.latitude,\n        longitude: ithMarker.longitude,\n        offsetTop: -30,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: ithMarker.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: ithMarker.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, `popup-${ithMarker.id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this) : null;\n    });\n  };\n\n  useEffect(() => {\n    let name = window.localStorage.getItem(\"username\");\n    console.log(name);\n    fetchFavourites(name);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Map, {\n    initialViewState: {\n      longitude: -123.19258095208848,\n      latitude: 49.25901995475811,\n      zoom: 11\n    },\n    style: {\n      width: \"80vw\",\n      height: \"80vh\",\n      fog: {\n        range: [-0.5, 3],\n        color: \"white\",\n        \"horizon-blend\": 0.1\n      }\n    },\n    mapStyle: \"mapbox://styles/mapbox/streets-v9\",\n    mapboxAccessToken: \"pk.eyJ1IjoiYmh1cGVzaGQiLCJhIjoiY2wxNXN1ZWVwMGoxNTNjcDhkZHh5Z2NsaCJ9.G67FI-pS8DZRWCX5Nt1vrA\",\n    children: [addMarkers(), addPopup()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Favourites, \"BS3F/89QvSgWKqZSOGtNF24oAgA=\");\n\n_c = Favourites;\n\nvar _c;\n\n$RefreshReg$(_c, \"Favourites\");","map":{"version":3,"sources":["C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/src/Components/favourites/favourites.js"],"names":["useState","useEffect","Map","Popup","Marker","Axios","Favourites","geopins","setGeopins","selectedFavourites","setSelectedFavourites","favouriteMarkers","fetchFavourites","name","get","params","username","then","res","result","key","data","rows","objData","push","longitude","fav_lng","latitude","fav_lat","fav_item_name","category","fav_cat","image","addMarkers","map","ithMarker","id","background","border","cursor","height","addPopup","window","localStorage","getItem","console","log","zoom","width","fog","range","color"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Map, { Popup, Marker } from \"react-map-gl\";\r\nimport Axios from \"axios\";\r\n\r\nexport default function Favourites() {\r\n  const [geopins, setGeopins] = useState([]);\r\n  const [selectedFavourites, setSelectedFavourites] = useState(null);\r\n  const favouriteMarkers = [];\r\n\r\n  const fetchFavourites = async (name) => {\r\n    // let name = await window.localStorage.getItem(\"username\");\r\n    // fetch(`http://localhost:3022/API/v1/GetFav?username=admin`)\r\n    Axios.get(\"http://localhost:3022/API/v1/GetFav\", {\r\n      params: { username: name },\r\n    })\r\n      .then((res) => res)\r\n      .then((result) => {\r\n        for (let key in result.data.rows) {\r\n          let objData = result.data.rows[key];\r\n          favouriteMarkers.push({\r\n            longitude: objData.fav_lng,\r\n            latitude: objData.fav_lat,\r\n            name: objData.fav_item_name,\r\n            category: objData.fav_cat,\r\n            image:\r\n              objData.fav_cat == \"Parks\"\r\n                ? `./parks.svg`\r\n                : objData.fav_cat == \"Heritage Buildings\"\r\n                ? `./building.svg`\r\n                : `./food.svg`,\r\n          });\r\n          break;\r\n        }\r\n        //     for (let internalKey in result.data[key]) {\r\n        //\r\n        //\r\n        // }\r\n        setGeopins(favouriteMarkers);\r\n      });\r\n  };\r\n\r\n  const addMarkers = () => {\r\n    return geopins.map((ithMarker) => {\r\n      return (\r\n        <Marker\r\n          key={`marker-${ithMarker.id}`}\r\n          id={ithMarker.name}\r\n          latitude={ithMarker.latitude}\r\n          longitude={ithMarker.longitude}\r\n        >\r\n          <button\r\n            key={`markerButtonKey-${ithMarker.id}`}\r\n            id={`markerButtonId-${ithMarker.id}`}\r\n            style={{ background: \"none\", border: \"none\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              setSelectedFavourites(ithMarker);\r\n            }}\r\n          >\r\n            <img\r\n              style={{ height: \"25px\" }}\r\n              src={ithMarker.image}\r\n              alt={ithMarker.name}\r\n            />\r\n          </button>\r\n        </Marker>\r\n      );\r\n    });\r\n  };\r\n\r\n  // const addToFavourites = (ithMarker) => {\r\n  //   let isDuplicate = false;\r\n  //   for (let key in geopins) {\r\n  //     if (geopins[key][\"id\"] == ithMarker[\"id\"]) {\r\n  //       isDuplicate = true;\r\n  //     }\r\n  //   }\r\n  //   if (!isDuplicate) {\r\n  //     favouriteBuildings.push(ithMarker);\r\n\r\n  //     window.alert(\"Added!\");\r\n  //   } else {\r\n  //     window.alert(\"Already exists\");\r\n  //   }\r\n  // };\r\n\r\n  const addPopup = () => {\r\n    return geopins.map((ithMarker) => {\r\n      return selectedFavourites && selectedFavourites.id == ithMarker.id ? (\r\n        <Popup\r\n          key={`popup-${ithMarker.id}`}\r\n          id={ithMarker.id}\r\n          latitude={ithMarker.latitude}\r\n          longitude={ithMarker.longitude}\r\n          offsetTop={-30}\r\n        >\r\n          <div>\r\n            <p>{ithMarker.name}</p>\r\n            <p>{ithMarker.category}</p>\r\n          </div>\r\n        </Popup>\r\n      ) : null;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let name = window.localStorage.getItem(\"username\");\r\n    console.log(name);\r\n    fetchFavourites(name);\r\n  }, []);\r\n\r\n  return (\r\n    <Map\r\n      initialViewState={{\r\n        longitude: -123.19258095208848,\r\n        latitude: 49.25901995475811,\r\n        zoom: 11,\r\n      }}\r\n      style={{\r\n        width: \"80vw\",\r\n        height: \"80vh\",\r\n        fog: {\r\n          range: [-0.5, 3],\r\n          color: \"white\",\r\n          \"horizon-blend\": 0.1,\r\n        },\r\n      }}\r\n      mapStyle=\"mapbox://styles/mapbox/streets-v9\"\r\n      mapboxAccessToken=\"pk.eyJ1IjoiYmh1cGVzaGQiLCJhIjoiY2wxNXN1ZWVwMGoxNTNjcDhkZHh5Z2NsaCJ9.G67FI-pS8DZRWCX5Nt1vrA\"\r\n    >\r\n      {addMarkers()}\r\n      {addPopup()}\r\n    </Map>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}