{"ast":null,"code":"import _objectSpread from \"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"bsPrefix\", \"className\", \"transition\", \"show\", \"animation\", \"delay\", \"autohide\", \"onClose\", \"bg\"];\nimport * as React from 'react';\nimport { useEffect, useMemo, useRef, useCallback } from 'react';\nimport classNames from 'classnames';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport ToastFade from './ToastFade';\nimport ToastHeader from './ToastHeader';\nimport ToastBody from './ToastBody';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ToastContext from './ToastContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Toast = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$transition = _ref.transition,\n      Transition = _ref$transition === void 0 ? ToastFade : _ref$transition,\n      _ref$show = _ref.show,\n      show = _ref$show === void 0 ? true : _ref$show,\n      _ref$animation = _ref.animation,\n      animation = _ref$animation === void 0 ? true : _ref$animation,\n      _ref$delay = _ref.delay,\n      delay = _ref$delay === void 0 ? 5000 : _ref$delay,\n      _ref$autohide = _ref.autohide,\n      autohide = _ref$autohide === void 0 ? false : _ref$autohide,\n      onClose = _ref.onClose,\n      bg = _ref.bg,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'toast'); // We use refs for these, because we don't want to restart the autohide\n  // timer in case these values change.\n\n  var delayRef = useRef(delay);\n  var onCloseRef = useRef(onClose);\n  useEffect(function () {\n    delayRef.current = delay;\n    onCloseRef.current = onClose;\n  }, [delay, onClose]);\n  var autohideTimeout = useTimeout();\n  var autohideToast = !!(autohide && show);\n  var autohideFunc = useCallback(function () {\n    if (autohideToast) {\n      onCloseRef.current == null ? void 0 : onCloseRef.current();\n    }\n  }, [autohideToast]);\n  useEffect(function () {\n    // Only reset timer if show or autohide changes.\n    autohideTimeout.set(autohideFunc, delayRef.current);\n  }, [autohideTimeout, autohideFunc]);\n  var toastContext = useMemo(function () {\n    return {\n      onClose: onClose\n    };\n  }, [onClose]);\n  var hasAnimation = !!(Transition && animation);\n\n  var toast = /*#__PURE__*/_jsx(\"div\", _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    className: classNames(bsPrefix, className, bg && \"bg-\".concat(bg), !hasAnimation && (show ? 'show' : 'hide')),\n    role: \"alert\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\"\n  }));\n\n  return /*#__PURE__*/_jsx(ToastContext.Provider, {\n    value: toastContext,\n    children: hasAnimation && Transition ? /*#__PURE__*/_jsx(Transition, {\n      in: show,\n      unmountOnExit: true,\n      children: toast\n    }) : toast\n  });\n});\nToast.displayName = 'Toast';\nexport default Object.assign(Toast, {\n  Body: ToastBody,\n  Header: ToastHeader\n});","map":{"version":3,"sources":["C:/Users/bhupe/Downloads/Term 4/COMP4537/MilestoneFinal/ISAproject/node_modules/react-bootstrap/esm/Toast.js"],"names":["React","useEffect","useMemo","useRef","useCallback","classNames","useTimeout","ToastFade","ToastHeader","ToastBody","useBootstrapPrefix","ToastContext","jsx","_jsx","Toast","forwardRef","ref","bsPrefix","className","transition","Transition","show","animation","delay","autohide","onClose","bg","props","delayRef","onCloseRef","current","autohideTimeout","autohideToast","autohideFunc","set","toastContext","hasAnimation","toast","role","Provider","value","children","in","unmountOnExit","displayName","Object","assign","Body","Header"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { useEffect, useMemo, useRef, useCallback } from 'react';\r\nimport classNames from 'classnames';\r\nimport useTimeout from '@restart/hooks/useTimeout';\r\nimport ToastFade from './ToastFade';\r\nimport ToastHeader from './ToastHeader';\r\nimport ToastBody from './ToastBody';\r\nimport { useBootstrapPrefix } from './ThemeProvider';\r\nimport ToastContext from './ToastContext';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst Toast = /*#__PURE__*/React.forwardRef(({\r\n  bsPrefix,\r\n  className,\r\n  transition: Transition = ToastFade,\r\n  show = true,\r\n  animation = true,\r\n  delay = 5000,\r\n  autohide = false,\r\n  onClose,\r\n  bg,\r\n  ...props\r\n}, ref) => {\r\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'toast'); // We use refs for these, because we don't want to restart the autohide\r\n  // timer in case these values change.\r\n\r\n  const delayRef = useRef(delay);\r\n  const onCloseRef = useRef(onClose);\r\n  useEffect(() => {\r\n    delayRef.current = delay;\r\n    onCloseRef.current = onClose;\r\n  }, [delay, onClose]);\r\n  const autohideTimeout = useTimeout();\r\n  const autohideToast = !!(autohide && show);\r\n  const autohideFunc = useCallback(() => {\r\n    if (autohideToast) {\r\n      onCloseRef.current == null ? void 0 : onCloseRef.current();\r\n    }\r\n  }, [autohideToast]);\r\n  useEffect(() => {\r\n    // Only reset timer if show or autohide changes.\r\n    autohideTimeout.set(autohideFunc, delayRef.current);\r\n  }, [autohideTimeout, autohideFunc]);\r\n  const toastContext = useMemo(() => ({\r\n    onClose\r\n  }), [onClose]);\r\n  const hasAnimation = !!(Transition && animation);\r\n\r\n  const toast = /*#__PURE__*/_jsx(\"div\", { ...props,\r\n    ref: ref,\r\n    className: classNames(bsPrefix, className, bg && `bg-${bg}`, !hasAnimation && (show ? 'show' : 'hide')),\r\n    role: \"alert\",\r\n    \"aria-live\": \"assertive\",\r\n    \"aria-atomic\": \"true\"\r\n  });\r\n\r\n  return /*#__PURE__*/_jsx(ToastContext.Provider, {\r\n    value: toastContext,\r\n    children: hasAnimation && Transition ? /*#__PURE__*/_jsx(Transition, {\r\n      in: show,\r\n      unmountOnExit: true,\r\n      children: toast\r\n    }) : toast\r\n  });\r\n});\r\nToast.displayName = 'Toast';\r\nexport default Object.assign(Toast, {\r\n  Body: ToastBody,\r\n  Header: ToastHeader\r\n});"]},"metadata":{},"sourceType":"module"}