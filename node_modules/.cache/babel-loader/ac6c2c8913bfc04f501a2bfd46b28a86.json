{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  label: 'Toggle navigation'\n};\nconst NavbarToggle = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    bsPrefix,\n    className,\n    children,\n    label,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'button',\n    onClick,\n    ...props\n  } = _ref;\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-toggler');\n  const {\n    onToggle,\n    expanded\n  } = useContext(NavbarContext) || {};\n  const handleClick = useEventCallback(e => {\n    if (onClick) onClick(e);\n    if (onToggle) onToggle();\n  });\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    onClick: handleClick,\n    \"aria-label\": label,\n    className: classNames(className, bsPrefix, !expanded && 'collapsed'),\n    children: children || /*#__PURE__*/_jsx(\"span\", {\n      className: `${bsPrefix}-icon`\n    })\n  });\n});\nNavbarToggle.displayName = 'NavbarToggle';\nNavbarToggle.defaultProps = defaultProps;\nexport default NavbarToggle;","map":{"version":3,"sources":["/Users/rim.sh/Desktop/ISAproject/node_modules/react-bootstrap/esm/NavbarToggle.js"],"names":["classNames","React","useContext","useEventCallback","useBootstrapPrefix","NavbarContext","jsx","_jsx","defaultProps","label","NavbarToggle","forwardRef","ref","bsPrefix","className","children","as","Component","onClick","props","onToggle","expanded","handleClick","e","type","displayName"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;AAGA,MAAMC,YAAY,GAAG,aAAaT,KAAK,CAACU,UAAN,CAAiB,OAShDC,GATgD,KASxC;AAAA,MATyC;AAClDC,IAAAA,QADkD;AAElDC,IAAAA,SAFkD;AAGlDC,IAAAA,QAHkD;AAIlDN,IAAAA,KAJkD;AAKlD;AACAO,IAAAA,EAAE,EAAEC,SAAS,GAAG,QANkC;AAOlDC,IAAAA,OAPkD;AAQlD,OAAGC;AAR+C,GASzC;AACTN,EAAAA,QAAQ,GAAGT,kBAAkB,CAACS,QAAD,EAAW,gBAAX,CAA7B;AACA,QAAM;AACJO,IAAAA,QADI;AAEJC,IAAAA;AAFI,MAGFnB,UAAU,CAACG,aAAD,CAAV,IAA6B,EAHjC;AAIA,QAAMiB,WAAW,GAAGnB,gBAAgB,CAACoB,CAAC,IAAI;AACxC,QAAIL,OAAJ,EAAaA,OAAO,CAACK,CAAD,CAAP;AACb,QAAIH,QAAJ,EAAcA,QAAQ;AACvB,GAHmC,CAApC;;AAKA,MAAIH,SAAS,KAAK,QAAlB,EAA4B;AAC1BE,IAAAA,KAAK,CAACK,IAAN,GAAa,QAAb;AACD;;AAED,SAAO,aAAajB,IAAI,CAACU,SAAD,EAAY,EAAE,GAAGE,KAAL;AAClCP,IAAAA,GAAG,EAAEA,GAD6B;AAElCM,IAAAA,OAAO,EAAEI,WAFyB;AAGlC,kBAAcb,KAHoB;AAIlCK,IAAAA,SAAS,EAAEd,UAAU,CAACc,SAAD,EAAYD,QAAZ,EAAsB,CAACQ,QAAD,IAAa,WAAnC,CAJa;AAKlCN,IAAAA,QAAQ,EAAEA,QAAQ,IAAI,aAAaR,IAAI,CAAC,MAAD,EAAS;AAC9CO,MAAAA,SAAS,EAAG,GAAED,QAAS;AADuB,KAAT;AALL,GAAZ,CAAxB;AASD,CAjCiC,CAAlC;AAkCAH,YAAY,CAACe,WAAb,GAA2B,cAA3B;AACAf,YAAY,CAACF,YAAb,GAA4BA,YAA5B;AACA,eAAeE,YAAf","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  label: 'Toggle navigation'\n};\nconst NavbarToggle = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  label,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-toggler');\n  const {\n    onToggle,\n    expanded\n  } = useContext(NavbarContext) || {};\n  const handleClick = useEventCallback(e => {\n    if (onClick) onClick(e);\n    if (onToggle) onToggle();\n  });\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    onClick: handleClick,\n    \"aria-label\": label,\n    className: classNames(className, bsPrefix, !expanded && 'collapsed'),\n    children: children || /*#__PURE__*/_jsx(\"span\", {\n      className: `${bsPrefix}-icon`\n    })\n  });\n});\nNavbarToggle.displayName = 'NavbarToggle';\nNavbarToggle.defaultProps = defaultProps;\nexport default NavbarToggle;"]},"metadata":{},"sourceType":"module"}